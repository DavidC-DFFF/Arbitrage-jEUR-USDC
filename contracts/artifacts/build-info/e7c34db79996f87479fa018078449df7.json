{
	"id": "e7c34db79996f87479fa018078449df7",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.12",
	"solcLongVersion": "0.6.12+commit.27d51765",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Kyber-Jarvis.sol": {
				"content": "// SPDX-License-Identifier: dvdch.eth\r\npragma solidity ^0.6.0;\r\n\r\n//import \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\";\r\nimport \"https://github.com/aave/flashloan-box/blob/master/contracts/aave/FlashLoanReceiverBase.sol\";\r\n\r\ncontract arbitragejeur is /*Ownable,*/ FlashLoanReceiverBase  {\r\n    address recipientWallet;\r\n\r\n    constructor(address _addressProvider) FlashLoanReceiverBase(_addressProvider) public {}\r\n\r\n        function executeOperation(\r\n        address _reserve,\r\n        uint256 _amount,\r\n        uint256 _fee,\r\n        bytes calldata _params\r\n    )\r\n        external\r\n        override\r\n    {\r\n        require(_amount <= getBalanceInternal(address(this), _reserve), \"Invalid balance, was the flashLoan successful?\");\r\n\r\n        //\r\n        // Your logic goes here.\r\n        // !! Ensure that *this contract* has enough of `_reserve` funds to payback the `_fee` !!\r\n        //\r\n\r\n        uint totalDebt = _amount.add(_fee);\r\n        transferFundsBackToPoolInternal(_reserve, totalDebt);\r\n    }\r\n\r\n    function flashloan() public onlyOwner {\r\n        /**\r\n        * Flash Loan of 1000 DAI\r\n        */\r\n        address receiver = address(this); // Can also be a separate contract\r\n        address asset = 0x6B175474E89094C44Da98b954EedeAC495271d0F; // Dai\r\n        uint256 amount = 1000 * 1e18;\r\n        \r\n        // If no params are needed, use an empty params:\r\n        bytes memory params = \"\";\r\n        // Else encode the params like below (bytes encoded param of type `address` and `uint`)\r\n        // bytes memory params = abi.encode(address(this), 1234);\r\n        \r\n        //ILendingPool lendingPool = ILendingPool(addressesProvider.getLendingPool());\r\n        //lendingPool.flashLoan(address(this), asset, amount, params);\r\n    }\r\n}\r\n"
			},
			"https://github.com/aave/flashloan-box/blob/master/contracts/aave/FlashLoanReceiverBase.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.6.6;\n\n//import \"@openzeppelin/contracts/math/SafeMath.sol\";\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/math/SafeMath.sol\";\n//import \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/IERC20.sol\";\n//import \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\";\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/SafeERC20.sol\";\nimport \"./IFlashLoanReceiver.sol\";\nimport \"./ILendingPoolAddressesProvider.sol\";\nimport \"../utils/Withdrawable.sol\";\n\nabstract contract FlashLoanReceiverBase is IFlashLoanReceiver, Withdrawable {\n\n    using SafeERC20 for IERC20;\n    using SafeMath for uint256;\n\n    address constant ethAddress = 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE;\n    ILendingPoolAddressesProvider public addressesProvider;\n\n    constructor(address _addressProvider) public {\n        addressesProvider = ILendingPoolAddressesProvider(_addressProvider);\n    }\n\n    receive() payable external {}\n\n    function transferFundsBackToPoolInternal(address _reserve, uint256 _amount) internal {\n        address payable core = addressesProvider.getLendingPoolCore();\n        transferInternal(core, _reserve, _amount);\n    }\n\n    function transferInternal(address payable _destination, address _reserve, uint256 _amount) internal {\n        if(_reserve == ethAddress) {\n            (bool success, ) = _destination.call{value: _amount}(\"\");\n            require(success == true, \"Couldn't transfer ETH\");\n            return;\n        }\n        IERC20(_reserve).safeTransfer(_destination, _amount);\n    }\n\n    function getBalanceInternal(address _target, address _reserve) internal view returns(uint256) {\n        if(_reserve == ethAddress) {\n            return _target.balance;\n        }\n        return IERC20(_reserve).balanceOf(_target);\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\nimport \"../utils/Context.sol\";\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor () internal {\n        address msgSender = _msgSender();\n        _owner = msgSender;\n        emit OwnershipTransferred(address(0), msgSender);\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        emit OwnershipTransferred(_owner, address(0));\n        _owner = address(0);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        emit OwnershipTransferred(_owner, newOwner);\n        _owner = newOwner;\n    }\n}\n"
			},
			"https://github.com/aave/flashloan-box/blob/master/contracts/utils/Withdrawable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.6.6;\n\n//import \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\";\n//import \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\";\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/SafeERC20.sol\";\n//import \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\";\n\n/**\n    Ensures that any contract that inherits from this contract is able to\n    withdraw funds that are accidentally received or stuck.\n */\n \ncontract Withdrawable is Ownable {\n    using SafeERC20 for ERC20;\n    address constant ETHER = address(0);\n\n    event LogWithdraw(\n        address indexed _from,\n        address indexed _assetAddress,\n        uint amount\n    );\n\n    /**\n     * @dev Withdraw asset.\n     * @param _assetAddress Asset to be withdrawn.\n     */\n    function withdraw(address _assetAddress) public onlyOwner {\n        uint assetBalance;\n        if (_assetAddress == ETHER) {\n            address self = address(this); // workaround for a possible solidity bug\n            assetBalance = self.balance;\n            msg.sender.transfer(assetBalance);\n        } else {\n            assetBalance = ERC20(_assetAddress).balanceOf(address(this));\n            ERC20(_assetAddress).safeTransfer(msg.sender, assetBalance);\n        }\n        emit LogWithdraw(msg.sender, _assetAddress, assetBalance);\n    }\n}\n"
			},
			"https://github.com/aave/flashloan-box/blob/master/contracts/aave/ILendingPoolAddressesProvider.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.6.6;\n\n/**\n    @title ILendingPoolAddressesProvider interface\n    @notice provides the interface to fetch the LendingPoolCore address\n */\n\ninterface ILendingPoolAddressesProvider {\n    function getLendingPoolCore() external view returns (address payable);\n    function getLendingPool() external view returns (address);\n}"
			},
			"https://github.com/aave/flashloan-box/blob/master/contracts/aave/IFlashLoanReceiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.6.6;\n\n/**\n* @title IFlashLoanReceiver interface\n* @notice Interface for the Aave fee IFlashLoanReceiver.\n* @author Aave\n* @dev implement this interface to develop a flashloan-compatible flashLoanReceiver contract\n**/\ninterface IFlashLoanReceiver {\n    function executeOperation(address _reserve, uint256 _amount, uint256 _fee, bytes calldata _params) external;\n}"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"../../math/SafeMath.sol\";\nimport \"../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using SafeMath for uint256;\n    using Address for address;\n\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        // solhint-disable-next-line max-line-length\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \"SafeERC20: decreased allowance below zero\");\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) { // Return data is optional\n            // solhint-disable-next-line max-line-length\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        uint256 c = a + b;\n        if (c < a) return (false, 0);\n        return (true, c);\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b > a) return (false, 0);\n        return (true, a - b);\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) return (true, 0);\n        uint256 c = a * b;\n        if (c / a != b) return (false, 0);\n        return (true, c);\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b == 0) return (false, 0);\n        return (true, a / b);\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b == 0) return (false, 0);\n        return (true, a % b);\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b <= a, \"SafeMath: subtraction overflow\");\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a == 0) return 0;\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0, \"SafeMath: division by zero\");\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0, \"SafeMath: modulo by zero\");\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryDiv}.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        return a % b;\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with GSN meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address payable) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes memory) {\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n        return msg.data;\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\nimport \"../../utils/Context.sol\";\nimport \"./IERC20.sol\";\nimport \"../../math/SafeMath.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin guidelines: functions revert instead\n * of returning `false` on failure. This behavior is nonetheless conventional\n * and does not conflict with the expectations of ERC20 applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20 {\n    using SafeMath for uint256;\n\n    mapping (address => uint256) private _balances;\n\n    mapping (address => mapping (address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n    uint8 private _decimals;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}, initializes {decimals} with\n     * a default value of 18.\n     *\n     * To select a different value for {decimals}, use {_setupDecimals}.\n     *\n     * All three of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor (string memory name_, string memory symbol_) public {\n        _name = name_;\n        _symbol = symbol_;\n        _decimals = 18;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\n     * called.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return _decimals;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `recipient` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(_msgSender(), recipient, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        _approve(_msgSender(), spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * Requirements:\n     *\n     * - `sender` and `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``sender``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(sender, recipient, amount);\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\"));\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\"));\n        return true;\n    }\n\n    /**\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\n     *\n     * This is internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `sender` cannot be the zero address.\n     * - `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     */\n    function _transfer(address sender, address recipient, uint256 amount) internal virtual {\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(sender, recipient, amount);\n\n        _balances[sender] = _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\");\n        _balances[recipient] = _balances[recipient].add(amount);\n        emit Transfer(sender, recipient, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply = _totalSupply.add(amount);\n        _balances[account] = _balances[account].add(amount);\n        emit Transfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        _balances[account] = _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\");\n        _totalSupply = _totalSupply.sub(amount);\n        emit Transfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Sets {decimals} to a value other than the default one of 18.\n     *\n     * WARNING: This function should only be called from the constructor. Most\n     * applications that interact with token contracts will not expect\n     * {decimals} to ever change, and may work incorrectly if it does.\n     */\n    function _setupDecimals(uint8 decimals_) internal virtual {\n        _decimals = decimals_;\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be to transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.2 <0.8.0;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        // solhint-disable-next-line no-inline-assembly\n        assembly { size := extcodesize(account) }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\n        (bool success, ) = recipient.call{ value: amount }(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain`call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n      return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                // solhint-disable-next-line no-inline-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Kyber-Jarvis.sol": {
				"arbitragejeur": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_addressProvider",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_assetAddress",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "LogWithdraw",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "addressesProvider",
							"outputs": [
								{
									"internalType": "contract ILendingPoolAddressesProvider",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_reserve",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_fee",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_params",
									"type": "bytes"
								}
							],
							"name": "executeOperation",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "flashloan",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_assetAddress",
									"type": "address"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"withdraw(address)": {
								"details": "Withdraw asset.",
								"params": {
									"_assetAddress": "Asset to be withdrawn."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Kyber-Jarvis.sol\":338:1868  contract arbitragejeur is /*Ownable,*/ FlashLoanReceiverBase  {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Kyber-Jarvis.sol\":439:526  constructor(address _addressProvider) FlashLoanReceiverBase(_addressProvider) public {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  0x20\n  dup2\n  lt\n  iszero\n  tag_2\n  jumpi\n  0x00\n  dup1\n  revert\ntag_2:\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"contracts/Kyber-Jarvis.sol\":499:515  _addressProvider */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":884:901  address msgSender */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":904:916  _msgSender() */\n  tag_7\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":904:914  _msgSender */\n  shl(0x20, tag_8)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":904:916  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":884:916  address msgSender = _msgSender() */\n  swap1\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":935:944  msgSender */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":926:932  _owner */\n  0x00\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":926:944  _owner = msgSender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":992:1001  msgSender */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":959:1002  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":988:989  0 */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":959:1002  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":850:1009  constructor () internal {... */\n  pop\n    /* \"https://github.com/aave/flashloan-box/blob/master/contracts/aave/FlashLoanReceiverBase.sol\":1076:1092  _addressProvider */\n  dup1\n    /* \"https://github.com/aave/flashloan-box/blob/master/contracts/aave/FlashLoanReceiverBase.sol\":1026:1043  addressesProvider */\n  0x01\n  0x00\n    /* \"https://github.com/aave/flashloan-box/blob/master/contracts/aave/FlashLoanReceiverBase.sol\":1026:1093  addressesProvider = ILendingPoolAddressesProvider(_addressProvider) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"https://github.com/aave/flashloan-box/blob/master/contracts/aave/FlashLoanReceiverBase.sol\":971:1100  constructor(address _addressProvider) public {... */\n  pop\n    /* \"contracts/Kyber-Jarvis.sol\":439:526  constructor(address _addressProvider) FlashLoanReceiverBase(_addressProvider) public {} */\n  pop\n    /* \"contracts/Kyber-Jarvis.sol\":338:1868  contract arbitragejeur is /*Ownable,*/ FlashLoanReceiverBase  {\r... */\n  jump(tag_11)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Context.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\ntag_8:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Context.sol\":651:666  address payable */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Context.sol\":685:695  msg.sender */\n  caller\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Context.sol\":678:695  return msg.sender */\n  swap1\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Context.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\n  swap1\n  jump\t// out\n    /* \"contracts/Kyber-Jarvis.sol\":338:1868  contract arbitragejeur is /*Ownable,*/ FlashLoanReceiverBase  {\r... */\ntag_11:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Kyber-Jarvis.sol\":338:1868  contract arbitragejeur is /*Ownable,*/ FlashLoanReceiverBase  {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_10\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xc72c4d10\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xee872558\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_10:\n      dup1\n      0x1b89b61a\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x51cff8d9\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_5\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Kyber-Jarvis.sol\":1130:1865  function flashloan() public onlyOwner {\r... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_13:\n      pop\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      stop\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/utils/Withdrawable.sol\":1040:1583  function withdraw(address _assetAddress) public onlyOwner {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      pop\n      tag_17\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_19\n      jump\t// in\n    tag_17:\n      stop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":1717:1862  function renounceOwnership() public virtual onlyOwner {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      pop\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      stop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":1085:1170  function owner() public view virtual returns (address) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      pop\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/aave/FlashLoanReceiverBase.sol\":910:964  ILendingPoolAddressesProvider public addressesProvider */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      pop\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Kyber-Jarvis.sol\":538:1122  function executeOperation(\r... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      pop\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x80\n      dup2\n      lt\n      iszero\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      0x0100000000\n      dup2\n      gt\n      iszero\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      dup3\n      add\n      dup4\n      0x20\n      dup3\n      add\n      gt\n      iszero\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n      dup5\n      0x01\n      dup4\n      mul\n      dup5\n      add\n      gt\n      0x0100000000\n      dup4\n      gt\n      or\n      iszero\n      tag_34\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      swap1\n      swap2\n      swap3\n      swap4\n      swap2\n      swap3\n      swap4\n      swap1\n      pop\n      pop\n      pop\n      tag_35\n      jump\t// in\n    tag_30:\n      stop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":2011:2251  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_36\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      pop\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_39\n      jump\t// in\n    tag_37:\n      stop\n        /* \"contracts/Kyber-Jarvis.sol\":1130:1865  function flashloan() public onlyOwner {\r... */\n    tag_15:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":1308:1320  _msgSender() */\n      tag_41\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":1308:1318  _msgSender */\n      tag_42\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":1308:1320  _msgSender() */\n      jump\t// in\n    tag_41:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":1297:1320  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":1297:1304  owner() */\n      tag_43\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":1297:1302  owner */\n      tag_25\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":1297:1304  owner() */\n      jump\t// in\n    tag_43:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":1297:1320  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":1289:1357  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_44\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_44:\n        /* \"contracts/Kyber-Jarvis.sol\":1238:1254  address receiver */\n      0x00\n        /* \"contracts/Kyber-Jarvis.sol\":1265:1269  this */\n      address\n        /* \"contracts/Kyber-Jarvis.sol\":1238:1270  address receiver = address(this) */\n      swap1\n      pop\n        /* \"contracts/Kyber-Jarvis.sol\":1316:1329  address asset */\n      0x00\n        /* \"contracts/Kyber-Jarvis.sol\":1332:1374  0x6B175474E89094C44Da98b954EedeAC495271d0F */\n      0x6b175474e89094c44da98b954eedeac495271d0f\n        /* \"contracts/Kyber-Jarvis.sol\":1316:1374  address asset = 0x6B175474E89094C44Da98b954EedeAC495271d0F */\n      swap1\n      pop\n        /* \"contracts/Kyber-Jarvis.sol\":1392:1406  uint256 amount */\n      0x00\n        /* \"contracts/Kyber-Jarvis.sol\":1409:1420  1000 * 1e18 */\n      0x3635c9adc5dea00000\n        /* \"contracts/Kyber-Jarvis.sol\":1392:1420  uint256 amount = 1000 * 1e18 */\n      swap1\n      pop\n        /* \"contracts/Kyber-Jarvis.sol\":1499:1518  bytes memory params */\n      0x60\n        /* \"contracts/Kyber-Jarvis.sol\":1499:1523  bytes memory params = \"\" */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":1367:1368  _ */\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Kyber-Jarvis.sol\":1130:1865  function flashloan() public onlyOwner {\r... */\n      jump\t// out\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/utils/Withdrawable.sol\":1040:1583  function withdraw(address _assetAddress) public onlyOwner {... */\n    tag_19:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":1308:1320  _msgSender() */\n      tag_47\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":1308:1318  _msgSender */\n      tag_42\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":1308:1320  _msgSender() */\n      jump\t// in\n    tag_47:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":1297:1320  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":1297:1304  owner() */\n      tag_48\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":1297:1302  owner */\n      tag_25\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":1297:1304  owner() */\n      jump\t// in\n    tag_48:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":1297:1320  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":1289:1357  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_49\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_49:\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/utils/Withdrawable.sol\":1108:1125  uint assetBalance */\n      0x00\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/utils/Withdrawable.sol\":815:816  0 */\n      dup1\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/utils/Withdrawable.sol\":1139:1161  _assetAddress == ETHER */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/utils/Withdrawable.sol\":1139:1152  _assetAddress */\n      dup3\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/utils/Withdrawable.sol\":1139:1161  _assetAddress == ETHER */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/utils/Withdrawable.sol\":1135:1510  if (_assetAddress == ETHER) {... */\n      iszero\n      tag_51\n      jumpi\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/utils/Withdrawable.sol\":1177:1189  address self */\n      0x00\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/utils/Withdrawable.sol\":1200:1204  this */\n      address\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/utils/Withdrawable.sol\":1177:1205  address self = address(this) */\n      swap1\n      pop\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/utils/Withdrawable.sol\":1276:1280  self */\n      dup1\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/utils/Withdrawable.sol\":1276:1288  self.balance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      balance\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/utils/Withdrawable.sol\":1261:1288  assetBalance = self.balance */\n      swap2\n      pop\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/utils/Withdrawable.sol\":1302:1312  msg.sender */\n      caller\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/utils/Withdrawable.sol\":1302:1321  msg.sender.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/utils/Withdrawable.sol\":1302:1335  msg.sender.transfer(assetBalance) */\n      0x08fc\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/utils/Withdrawable.sol\":1322:1334  assetBalance */\n      dup4\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/utils/Withdrawable.sol\":1302:1335  msg.sender.transfer(assetBalance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_53\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_53:\n      pop\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/utils/Withdrawable.sol\":1135:1510  if (_assetAddress == ETHER) {... */\n      pop\n      jump(tag_54)\n    tag_51:\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/utils/Withdrawable.sol\":1387:1400  _assetAddress */\n      dup2\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/utils/Withdrawable.sol\":1381:1411  ERC20(_assetAddress).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/utils/Withdrawable.sol\":1420:1424  this */\n      address\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/utils/Withdrawable.sol\":1381:1426  ERC20(_assetAddress).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_55\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_55:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_57\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_57:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_58\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_58:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/utils/Withdrawable.sol\":1366:1426  assetBalance = ERC20(_assetAddress).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/utils/Withdrawable.sol\":1440:1499  ERC20(_assetAddress).safeTransfer(msg.sender, assetBalance) */\n      tag_59\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/utils/Withdrawable.sol\":1474:1484  msg.sender */\n      caller\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/utils/Withdrawable.sol\":1486:1498  assetBalance */\n      dup3\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/utils/Withdrawable.sol\":1446:1459  _assetAddress */\n      dup5\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/utils/Withdrawable.sol\":1440:1473  ERC20(_assetAddress).safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_60\n      swap1\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/utils/Withdrawable.sol\":1440:1499  ERC20(_assetAddress).safeTransfer(msg.sender, assetBalance) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_59:\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/utils/Withdrawable.sol\":1135:1510  if (_assetAddress == ETHER) {... */\n    tag_54:\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/utils/Withdrawable.sol\":1548:1561  _assetAddress */\n      dup2\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/utils/Withdrawable.sol\":1524:1576  LogWithdraw(msg.sender, _assetAddress, assetBalance) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/utils/Withdrawable.sol\":1536:1546  msg.sender */\n      caller\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/utils/Withdrawable.sol\":1524:1576  LogWithdraw(msg.sender, _assetAddress, assetBalance) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x9207361cc2a04b9c7a06691df1eb87c6a63957ae88bf01d0d18c81e3d1272099\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/utils/Withdrawable.sol\":1563:1575  assetBalance */\n      dup4\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/utils/Withdrawable.sol\":1524:1576  LogWithdraw(msg.sender, _assetAddress, assetBalance) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":1367:1368  _ */\n      pop\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/utils/Withdrawable.sol\":1040:1583  function withdraw(address _assetAddress) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":1717:1862  function renounceOwnership() public virtual onlyOwner {... */\n    tag_22:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":1308:1320  _msgSender() */\n      tag_62\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":1308:1318  _msgSender */\n      tag_42\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":1308:1320  _msgSender() */\n      jump\t// in\n    tag_62:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":1297:1320  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":1297:1304  owner() */\n      tag_63\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":1297:1302  owner */\n      tag_25\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":1297:1304  owner() */\n      jump\t// in\n    tag_63:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":1297:1320  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":1289:1357  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_64\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_64:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":1823:1824  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":1786:1826  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":1807:1813  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":1786:1826  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":1853:1854  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":1836:1842  _owner */\n      dup1\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":1836:1855  _owner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":1717:1862  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":1085:1170  function owner() public view virtual returns (address) {... */\n    tag_25:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":1131:1138  address */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":1157:1163  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":1150:1163  return _owner */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":1085:1170  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/aave/FlashLoanReceiverBase.sol\":910:964  ILendingPoolAddressesProvider public addressesProvider */\n    tag_28:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Kyber-Jarvis.sol\":538:1122  function executeOperation(\r... */\n    tag_35:\n        /* \"contracts/Kyber-Jarvis.sol\":751:794  getBalanceInternal(address(this), _reserve) */\n      tag_68\n        /* \"contracts/Kyber-Jarvis.sol\":778:782  this */\n      address\n        /* \"contracts/Kyber-Jarvis.sol\":785:793  _reserve */\n      dup7\n        /* \"contracts/Kyber-Jarvis.sol\":751:769  getBalanceInternal */\n      tag_69\n        /* \"contracts/Kyber-Jarvis.sol\":751:794  getBalanceInternal(address(this), _reserve) */\n      jump\t// in\n    tag_68:\n        /* \"contracts/Kyber-Jarvis.sol\":740:747  _amount */\n      dup5\n        /* \"contracts/Kyber-Jarvis.sol\":740:794  _amount <= getBalanceInternal(address(this), _reserve) */\n      gt\n      iszero\n        /* \"contracts/Kyber-Jarvis.sol\":732:845  require(_amount <= getBalanceInternal(address(this), _reserve), \"Invalid balance, was the flashLoan successful?\") */\n      tag_70\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2e\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_8fe07d1a7bc8ed40574aa57beae4fbd43367cc89459755c316997d76d102b27d\n      0x2e\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_70:\n        /* \"contracts/Kyber-Jarvis.sol\":1017:1031  uint totalDebt */\n      0x00\n        /* \"contracts/Kyber-Jarvis.sol\":1034:1051  _amount.add(_fee) */\n      tag_71\n        /* \"contracts/Kyber-Jarvis.sol\":1046:1050  _fee */\n      dup5\n        /* \"contracts/Kyber-Jarvis.sol\":1034:1041  _amount */\n      dup7\n        /* \"contracts/Kyber-Jarvis.sol\":1034:1045  _amount.add */\n      tag_72\n      swap1\n        /* \"contracts/Kyber-Jarvis.sol\":1034:1051  _amount.add(_fee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_71:\n        /* \"contracts/Kyber-Jarvis.sol\":1017:1051  uint totalDebt = _amount.add(_fee) */\n      swap1\n      pop\n        /* \"contracts/Kyber-Jarvis.sol\":1062:1114  transferFundsBackToPoolInternal(_reserve, totalDebt) */\n      tag_73\n        /* \"contracts/Kyber-Jarvis.sol\":1094:1102  _reserve */\n      dup7\n        /* \"contracts/Kyber-Jarvis.sol\":1104:1113  totalDebt */\n      dup3\n        /* \"contracts/Kyber-Jarvis.sol\":1062:1093  transferFundsBackToPoolInternal */\n      tag_74\n        /* \"contracts/Kyber-Jarvis.sol\":1062:1114  transferFundsBackToPoolInternal(_reserve, totalDebt) */\n      jump\t// in\n    tag_73:\n        /* \"contracts/Kyber-Jarvis.sol\":538:1122  function executeOperation(\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":2011:2251  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_39:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":1308:1320  _msgSender() */\n      tag_76\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":1308:1318  _msgSender */\n      tag_42\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":1308:1320  _msgSender() */\n      jump\t// in\n    tag_76:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":1297:1320  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":1297:1304  owner() */\n      tag_77\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":1297:1302  owner */\n      tag_25\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":1297:1304  owner() */\n      jump\t// in\n    tag_77:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":1297:1320  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":1289:1357  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_78\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_78:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":2119:2120  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":2099:2121  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":2099:2107  newOwner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":2099:2121  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":2091:2164  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_80\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_80:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":2208:2216  newOwner */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":2179:2217  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":2200:2206  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":2179:2217  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":2236:2244  newOwner */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":2227:2233  _owner */\n      0x00\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":2227:2244  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":2011:2251  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Context.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\n    tag_42:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Context.sol\":651:666  address payable */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Context.sol\":685:695  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Context.sol\":678:695  return msg.sender */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Context.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/SafeERC20.sol\":704:879  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_60:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/SafeERC20.sol\":786:872  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_83\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/SafeERC20.sol\":806:811  token */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/SafeERC20.sol\":836:859  token.transfer.selector */\n      shl(0xe0, 0xa9059cbb)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/SafeERC20.sol\":861:863  to */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/SafeERC20.sol\":865:870  value */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/SafeERC20.sol\":813:871  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      add(0x24, mload(0x40))\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/SafeERC20.sol\":786:805  _callOptionalReturn */\n      tag_84\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/SafeERC20.sol\":786:872  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n    tag_83:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/SafeERC20.sol\":704:879  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/aave/FlashLoanReceiverBase.sol\":1736:1972  function getBalanceInternal(address _target, address _reserve) internal view returns(uint256) {... */\n    tag_69:\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/aave/FlashLoanReceiverBase.sol\":1821:1828  uint256 */\n      0x00\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/aave/FlashLoanReceiverBase.sol\":862:904  0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE */\n      0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/aave/FlashLoanReceiverBase.sol\":1843:1865  _reserve == ethAddress */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/aave/FlashLoanReceiverBase.sol\":1843:1851  _reserve */\n      dup3\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/aave/FlashLoanReceiverBase.sol\":1843:1865  _reserve == ethAddress */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/aave/FlashLoanReceiverBase.sol\":1840:1914  if(_reserve == ethAddress) {... */\n      iszero\n      tag_86\n      jumpi\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/aave/FlashLoanReceiverBase.sol\":1888:1895  _target */\n      dup3\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/aave/FlashLoanReceiverBase.sol\":1888:1903  _target.balance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      balance\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/aave/FlashLoanReceiverBase.sol\":1881:1903  return _target.balance */\n      swap1\n      pop\n      jump(tag_85)\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/aave/FlashLoanReceiverBase.sol\":1840:1914  if(_reserve == ethAddress) {... */\n    tag_86:\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/aave/FlashLoanReceiverBase.sol\":1937:1945  _reserve */\n      dup2\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/aave/FlashLoanReceiverBase.sol\":1930:1956  IERC20(_reserve).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/aave/FlashLoanReceiverBase.sol\":1957:1964  _target */\n      dup5\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/aave/FlashLoanReceiverBase.sol\":1930:1965  IERC20(_reserve).balanceOf(_target) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_87\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_87:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_89\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_89:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_90\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_90:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/aave/FlashLoanReceiverBase.sol\":1923:1965  return IERC20(_reserve).balanceOf(_target) */\n      swap1\n      pop\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/aave/FlashLoanReceiverBase.sol\":1736:1972  function getBalanceInternal(address _target, address _reserve) internal view returns(uint256) {... */\n    tag_85:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/math/SafeMath.sol\":2690:2865  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_72:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/math/SafeMath.sol\":2748:2755  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/math/SafeMath.sol\":2767:2776  uint256 c */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/math/SafeMath.sol\":2783:2784  b */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/math/SafeMath.sol\":2779:2780  a */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/math/SafeMath.sol\":2779:2784  a + b */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/math/SafeMath.sol\":2767:2784  uint256 c = a + b */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/math/SafeMath.sol\":2807:2808  a */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/math/SafeMath.sol\":2802:2803  c */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/math/SafeMath.sol\":2802:2808  c >= a */\n      lt\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/math/SafeMath.sol\":2794:2840  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_92\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_92:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/math/SafeMath.sol\":2857:2858  c */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/math/SafeMath.sol\":2850:2858  return c */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/math/SafeMath.sol\":2690:2865  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/aave/FlashLoanReceiverBase.sol\":1141:1355  function transferFundsBackToPoolInternal(address _reserve, uint256 _amount) internal {... */\n    tag_74:\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/aave/FlashLoanReceiverBase.sol\":1236:1256  address payable core */\n      0x00\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/aave/FlashLoanReceiverBase.sol\":1259:1276  addressesProvider */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/aave/FlashLoanReceiverBase.sol\":1259:1295  addressesProvider.getLendingPoolCore */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xed6ff760\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/aave/FlashLoanReceiverBase.sol\":1259:1297  addressesProvider.getLendingPoolCore() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_94\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_94:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_96\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_96:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_97\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_97:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/aave/FlashLoanReceiverBase.sol\":1236:1297  address payable core = addressesProvider.getLendingPoolCore() */\n      swap1\n      pop\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/aave/FlashLoanReceiverBase.sol\":1307:1348  transferInternal(core, _reserve, _amount) */\n      tag_98\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/aave/FlashLoanReceiverBase.sol\":1324:1328  core */\n      dup2\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/aave/FlashLoanReceiverBase.sol\":1330:1338  _reserve */\n      dup5\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/aave/FlashLoanReceiverBase.sol\":1340:1347  _amount */\n      dup5\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/aave/FlashLoanReceiverBase.sol\":1307:1323  transferInternal */\n      tag_99\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/aave/FlashLoanReceiverBase.sol\":1307:1348  transferInternal(core, _reserve, _amount) */\n      jump\t// in\n    tag_98:\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/aave/FlashLoanReceiverBase.sol\":1141:1355  function transferFundsBackToPoolInternal(address _reserve, uint256 _amount) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/SafeERC20.sol\":2967:3718  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_84:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/SafeERC20.sol\":3386:3409  bytes memory returndata */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/SafeERC20.sol\":3412:3481  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_101\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/SafeERC20.sol\":3440:3444  data */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/SafeERC20.sol\":3412:3481  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/SafeERC20.sol\":3420:3425  token */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/SafeERC20.sol\":3412:3439  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_102\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/SafeERC20.sol\":3412:3481  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_101:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/SafeERC20.sol\":3386:3481  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/SafeERC20.sol\":3515:3516  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/SafeERC20.sol\":3495:3505  returndata */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/SafeERC20.sol\":3495:3512  returndata.length */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/SafeERC20.sol\":3495:3516  returndata.length > 0 */\n      gt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/SafeERC20.sol\":3491:3712  if (returndata.length > 0) { // Return data is optional... */\n      iszero\n      tag_103\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/SafeERC20.sol\":3635:3645  returndata */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/SafeERC20.sol\":3624:3654  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      0x20\n      dup2\n      lt\n      iszero\n      tag_104\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_104:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/SafeERC20.sol\":3616:3701  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_105\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd\n      0x2a\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_105:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/SafeERC20.sol\":3491:3712  if (returndata.length > 0) { // Return data is optional... */\n    tag_103:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/SafeERC20.sol\":2967:3718  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/aave/FlashLoanReceiverBase.sol\":1361:1730  function transferInternal(address payable _destination, address _reserve, uint256 _amount) internal {... */\n    tag_99:\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/aave/FlashLoanReceiverBase.sol\":862:904  0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE */\n      0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/aave/FlashLoanReceiverBase.sol\":1474:1496  _reserve == ethAddress */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/aave/FlashLoanReceiverBase.sol\":1474:1482  _reserve */\n      dup3\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/aave/FlashLoanReceiverBase.sol\":1474:1496  _reserve == ethAddress */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/aave/FlashLoanReceiverBase.sol\":1471:1662  if(_reserve == ethAddress) {... */\n      iszero\n      tag_107\n      jumpi\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/aave/FlashLoanReceiverBase.sol\":1513:1525  bool success */\n      0x00\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/aave/FlashLoanReceiverBase.sol\":1531:1543  _destination */\n      dup4\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/aave/FlashLoanReceiverBase.sol\":1531:1548  _destination.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/aave/FlashLoanReceiverBase.sol\":1556:1563  _amount */\n      dup3\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/aave/FlashLoanReceiverBase.sol\":1531:1568  _destination.call{value: _amount}(\"\") */\n      mload(0x40)\n      dup1\n      0x00\n      add\n      swap1\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_110\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_109)\n    tag_110:\n      0x60\n      swap2\n      pop\n    tag_109:\n      pop\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/aave/FlashLoanReceiverBase.sol\":1512:1568  (bool success, ) = _destination.call{value: _amount}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/aave/FlashLoanReceiverBase.sol\":1601:1605  true */\n      0x01\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/aave/FlashLoanReceiverBase.sol\":1590:1605  success == true */\n      iszero\n      iszero\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/aave/FlashLoanReceiverBase.sol\":1590:1597  success */\n      dup2\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/aave/FlashLoanReceiverBase.sol\":1590:1605  success == true */\n      iszero\n      iszero\n      eq\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/aave/FlashLoanReceiverBase.sol\":1582:1631  require(success == true, \"Couldn't transfer ETH\") */\n      tag_111\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x15\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x436f756c646e2774207472616e73666572204554480000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_111:\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/aave/FlashLoanReceiverBase.sol\":1645:1652  return; */\n      pop\n      jump(tag_106)\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/aave/FlashLoanReceiverBase.sol\":1471:1662  if(_reserve == ethAddress) {... */\n    tag_107:\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/aave/FlashLoanReceiverBase.sol\":1671:1723  IERC20(_reserve).safeTransfer(_destination, _amount) */\n      tag_112\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/aave/FlashLoanReceiverBase.sol\":1701:1713  _destination */\n      dup4\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/aave/FlashLoanReceiverBase.sol\":1715:1722  _amount */\n      dup3\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/aave/FlashLoanReceiverBase.sol\":1678:1686  _reserve */\n      dup5\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/aave/FlashLoanReceiverBase.sol\":1671:1700  IERC20(_reserve).safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_60\n      swap1\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/aave/FlashLoanReceiverBase.sol\":1671:1723  IERC20(_reserve).safeTransfer(_destination, _amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_112:\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/aave/FlashLoanReceiverBase.sol\":1361:1730  function transferInternal(address payable _destination, address _reserve, uint256 _amount) internal {... */\n    tag_106:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":3581:3774  function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {... */\n    tag_102:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":3684:3696  bytes memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":3715:3767  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_114\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":3737:3743  target */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":3745:3749  data */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":3751:3752  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":3754:3766  errorMessage */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":3715:3736  functionCallWithValue */\n      tag_115\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":3715:3767  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_114:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":3708:3767  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":3581:3774  function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":4608:5131  function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {... */\n    tag_115:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":4735:4747  bytes memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":4792:4797  value */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":4767:4788  address(this).balance */\n      selfbalance\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":4767:4797  address(this).balance >= value */\n      lt\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":4759:4840  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_117\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_117:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":4858:4876  isContract(target) */\n      tag_118\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":4869:4875  target */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":4858:4868  isContract */\n      tag_119\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":4858:4876  isContract(target) */\n      jump\t// in\n    tag_118:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":4850:4910  require(isContract(target), \"Address: call to non-contract\") */\n      tag_120\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1d\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_120:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":4981:4993  bool success */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":4995:5018  bytes memory returndata */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":5022:5028  target */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":5022:5033  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":5042:5047  value */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":5050:5054  data */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":5022:5055  target.call{ value: value }(data) */\n      mload(0x40)\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n    tag_121:\n      0x20\n      dup4\n      lt\n      tag_123\n      jumpi\n      dup1\n      mload\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      swap2\n      pop\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      0x20\n      dup4\n      sub\n      swap3\n      pop\n      jump(tag_121)\n    tag_123:\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      dup1\n      not\n      dup3\n      mload\n      and\n      dup2\n      dup5\n      mload\n      and\n      dup1\n      dup3\n      or\n      dup6\n      mstore\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_126\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_125)\n    tag_126:\n      0x60\n      swap2\n      pop\n    tag_125:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":4980:5055  (bool success, bytes memory returndata) = target.call{ value: value }(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":5072:5124  _verifyCallResult(success, returndata, errorMessage) */\n      tag_127\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":5090:5097  success */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":5099:5109  returndata */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":5111:5123  errorMessage */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":5072:5089  _verifyCallResult */\n      tag_128\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":5072:5124  _verifyCallResult(success, returndata, errorMessage) */\n      jump\t// in\n    tag_127:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":5065:5124  return _verifyCallResult(success, returndata, errorMessage) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":4608:5131  function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":726:1139  function isContract(address account) internal view returns (bool) {... */\n    tag_119:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":786:790  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":989:1001  uint256 size */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":1098:1105  account */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":1086:1106  extcodesize(account) */\n      extcodesize\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":1078:1106  size := extcodesize(account) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":1131:1132  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":1124:1128  size */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":1124:1132  size > 0 */\n      gt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":1117:1132  return size > 0 */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":726:1139  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":7091:7816  function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {... */\n    tag_128:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":7206:7218  bytes memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":7234:7241  success */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":7230:7810  if (success) {... */\n      iszero\n      tag_131\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":7264:7274  returndata */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":7257:7274  return returndata */\n      swap1\n      pop\n      jump(tag_130)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":7230:7810  if (success) {... */\n    tag_131:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":7395:7396  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":7375:7385  returndata */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":7375:7392  returndata.length */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":7375:7396  returndata.length > 0 */\n      gt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":7371:7800  if (returndata.length > 0) {... */\n      iszero\n      tag_133\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":7633:7643  returndata */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":7627:7644  mload(returndata) */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":7693:7708  returndata_size */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":7680:7690  returndata */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":7676:7678  32 */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":7672:7691  add(32, returndata) */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":7665:7709  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":7582:7727  {... */\n    tag_133:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":7772:7784  errorMessage */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":7765:7785  revert(errorMessage) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_135:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_137\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_135)\n    tag_137:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_138\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_138:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":7091:7816  function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {... */\n    tag_130:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n    stop\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c 416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c\n    data_8fe07d1a7bc8ed40574aa57beae4fbd43367cc89459755c316997d76d102b27d 496e76616c69642062616c616e63652c207761732074686520666c6173684c6f616e207375636365737366756c3f\n    data_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd 5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564\n\n    auxdata: 0xa2646970667358221220e6a5d3353cb9c6657b912ffd6866a23e1004e4472aba15e3b5c635e9f0751e6264736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060405161145e38038061145e8339818101604052602081101561003357600080fd5b810190808051906020019092919050505080600061005561013b60201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050610143565b600033905090565b61130c806101526000396000f3fe6080604052600436106100745760003560e01c80638da5cb5b1161004e5780638da5cb5b146100ff578063c72c4d1014610140578063ee87255814610181578063f2fde38b1461023b5761007b565b80631b89b61a1461008057806351cff8d914610097578063715018a6146100e85761007b565b3661007b57005b600080fd5b34801561008c57600080fd5b5061009561028c565b005b3480156100a357600080fd5b506100e6600480360360208110156100ba57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610381565b005b3480156100f457600080fd5b506100fd61060b565b005b34801561010b57600080fd5b50610114610778565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561014c57600080fd5b506101556107a1565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561018d57600080fd5b50610239600480360360808110156101a457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190803590602001906401000000008111156101f557600080fd5b82018360208201111561020757600080fd5b8035906020019184600183028401116401000000008311171561022957600080fd5b90919293919293905050506107c7565b005b34801561024757600080fd5b5061028a6004803603602081101561025e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610852565b005b610294610a44565b73ffffffffffffffffffffffffffffffffffffffff166102b2610778565b73ffffffffffffffffffffffffffffffffffffffff161461033b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b60003090506000736b175474e89094c44da98b954eedeac495271d0f90506000683635c9adc5dea000009050606060405180602001604052806000815250905050505050565b610389610a44565b73ffffffffffffffffffffffffffffffffffffffff166103a7610778565b73ffffffffffffffffffffffffffffffffffffffff1614610430576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156104d25760003090508073ffffffffffffffffffffffffffffffffffffffff163191503373ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f193505050501580156104cb573d6000803e3d6000fd5b50506105a2565b8173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561053957600080fd5b505afa15801561054d573d6000803e3d6000fd5b505050506040513d602081101561056357600080fd5b810190808051906020019092919050505090506105a133828473ffffffffffffffffffffffffffffffffffffffff16610a4c9092919063ffffffff16565b5b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f9207361cc2a04b9c7a06691df1eb87c6a63957ae88bf01d0d18c81e3d1272099836040518082815260200191505060405180910390a35050565b610613610a44565b73ffffffffffffffffffffffffffffffffffffffff16610631610778565b73ffffffffffffffffffffffffffffffffffffffff16146106ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6107d13086610aee565b841115610829576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061127f602e913960400191505060405180910390fd5b600061083e8486610c0290919063ffffffff16565b905061084a8682610c8a565b505050505050565b61085a610a44565b73ffffffffffffffffffffffffffffffffffffffff16610878610778565b73ffffffffffffffffffffffffffffffffffffffff1614610901576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610987576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806112336026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b610ae98363a9059cbb60e01b8484604051602401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610d41565b505050565b600073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610b57578273ffffffffffffffffffffffffffffffffffffffff16319050610bfc565b8173ffffffffffffffffffffffffffffffffffffffff166370a08231846040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610bbe57600080fd5b505afa158015610bd2573d6000803e3d6000fd5b505050506040513d6020811015610be857600080fd5b810190808051906020019092919050505090505b92915050565b600080828401905083811015610c80576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ed6ff7606040518163ffffffff1660e01b815260040160206040518083038186803b158015610cf457600080fd5b505afa158015610d08573d6000803e3d6000fd5b505050506040513d6020811015610d1e57600080fd5b81019080805190602001909291905050509050610d3c818484610e30565b505050565b6060610da3826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16610f929092919063ffffffff16565b9050600081511115610e2b57808060200190516020811015610dc457600080fd5b8101908080519060200190929190505050610e2a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a8152602001806112ad602a913960400191505060405180910390fd5b5b505050565b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610f615760008373ffffffffffffffffffffffffffffffffffffffff168260405180600001905060006040518083038185875af1925050503d8060008114610ed8576040519150601f19603f3d011682016040523d82523d6000602084013e610edd565b606091505b505090506001151581151514610f5b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f436f756c646e2774207472616e7366657220455448000000000000000000000081525060200191505060405180910390fd5b50610f8d565b610f8c83828473ffffffffffffffffffffffffffffffffffffffff16610a4c9092919063ffffffff16565b5b505050565b6060610fa18484600085610faa565b90509392505050565b606082471015611005576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806112596026913960400191505060405180910390fd5b61100e85611153565b611080576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000081525060200191505060405180910390fd5b600060608673ffffffffffffffffffffffffffffffffffffffff1685876040518082805190602001908083835b602083106110d057805182526020820191506020810190506020830392506110ad565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114611132576040519150601f19603f3d011682016040523d82523d6000602084013e611137565b606091505b5091509150611147828286611166565b92505050949350505050565b600080823b905060008111915050919050565b606083156111765782905061122b565b6000835111156111895782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156111f05780820151818401526020810190506111d5565b50505050905090810190601f16801561121d5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b939250505056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c496e76616c69642062616c616e63652c207761732074686520666c6173684c6f616e207375636365737366756c3f5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a2646970667358221220e6a5d3353cb9c6657b912ffd6866a23e1004e4472aba15e3b5c635e9f0751e6264736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x145E CODESIZE SUB DUP1 PUSH2 0x145E DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP1 PUSH1 0x0 PUSH2 0x55 PUSH2 0x13B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH2 0x143 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x130C DUP1 PUSH2 0x152 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x74 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xFF JUMPI DUP1 PUSH4 0xC72C4D10 EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0xEE872558 EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x23B JUMPI PUSH2 0x7B JUMP JUMPDEST DUP1 PUSH4 0x1B89B61A EQ PUSH2 0x80 JUMPI DUP1 PUSH4 0x51CFF8D9 EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xE8 JUMPI PUSH2 0x7B JUMP JUMPDEST CALLDATASIZE PUSH2 0x7B JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x95 PUSH2 0x28C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x381 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFD PUSH2 0x60B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x114 PUSH2 0x778 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x155 PUSH2 0x7A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x239 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x1A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x1F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x207 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x229 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP2 SWAP3 SWAP4 SWAP1 POP POP POP PUSH2 0x7C7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x247 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x25E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x852 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x294 PUSH2 0xA44 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2B2 PUSH2 0x778 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x33B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 ADDRESS SWAP1 POP PUSH1 0x0 PUSH20 0x6B175474E89094C44DA98B954EEDEAC495271D0F SWAP1 POP PUSH1 0x0 PUSH9 0x3635C9ADC5DEA00000 SWAP1 POP PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x389 PUSH2 0xA44 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3A7 PUSH2 0x778 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x430 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x4D2 JUMPI PUSH1 0x0 ADDRESS SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE SWAP2 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP4 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x4CB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH2 0x5A2 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x539 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x54D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x563 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH2 0x5A1 CALLER DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA4C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9207361CC2A04B9C7A06691DF1EB87C6A63957AE88BF01D0D18C81E3D1272099 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x613 PUSH2 0xA44 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x631 PUSH2 0x778 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6BA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x7D1 ADDRESS DUP7 PUSH2 0xAEE JUMP JUMPDEST DUP5 GT ISZERO PUSH2 0x829 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x127F PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x83E DUP5 DUP7 PUSH2 0xC02 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x84A DUP7 DUP3 PUSH2 0xC8A JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x85A PUSH2 0xA44 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x878 PUSH2 0x778 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x901 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x987 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1233 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xAE9 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xD41 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xB57 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE SWAP1 POP PUSH2 0xBFC JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBD2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xBE8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xC80 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xED6FF760 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD08 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xD1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH2 0xD3C DUP2 DUP5 DUP5 PUSH2 0xE30 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xDA3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF92 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0xE2B JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xDC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xE2A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x12AD PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xF61 JUMPI PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x0 ADD SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xED8 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xEDD JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP PUSH1 0x1 ISZERO ISZERO DUP2 ISZERO ISZERO EQ PUSH2 0xF5B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x15 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x436F756C646E2774207472616E73666572204554480000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0xF8D JUMP JUMPDEST PUSH2 0xF8C DUP4 DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA4C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xFA1 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0xFAA JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x1005 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1259 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x100E DUP6 PUSH2 0x1153 JUMP JUMPDEST PUSH2 0x1080 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x10D0 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x10AD JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1132 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1137 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1147 DUP3 DUP3 DUP7 PUSH2 0x1166 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1176 JUMPI DUP3 SWAP1 POP PUSH2 0x122B JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x1189 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x11F0 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x11D5 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x121D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F2061646472657373416464726573733A20696E7375666669 PUSH4 0x69656E74 KECCAK256 PUSH3 0x616C61 PUSH15 0x636520666F722063616C6C496E7661 PUSH13 0x69642062616C616E63652C2077 PUSH2 0x7320 PUSH21 0x686520666C6173684C6F616E207375636365737366 PUSH22 0x6C3F5361666545524332303A204552433230206F7065 PUSH19 0x6174696F6E20646964206E6F74207375636365 PUSH6 0x64A264697066 PUSH20 0x58221220E6A5D3353CB9C6657B912FFD6866A23E LT DIV 0xE4 SELFBALANCE 0x2A 0xBA ISZERO 0xE3 0xB5 0xC6 CALLDATALOAD 0xE9 CREATE PUSH22 0x1E6264736F6C634300060C0033000000000000000000 ",
							"sourceMap": "338:1530:0:-:0;;;439:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;499:16;884:17:1;904:12;:10;;;:12;;:::i;:::-;884:32;;935:9;926:6;;:18;;;;;;;;;;;;;;;;;;992:9;959:43;;988:1;959:43;;;;;;;;;;;;850:159;1076:16:8;1026:17;;:67;;;;;;;;;;;;;;;;;;971:129;439:87:0;338:1530;;598:104:7;651:15;685:10;678:17;;598:104;:::o;338:1530:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100745760003560e01c80638da5cb5b1161004e5780638da5cb5b146100ff578063c72c4d1014610140578063ee87255814610181578063f2fde38b1461023b5761007b565b80631b89b61a1461008057806351cff8d914610097578063715018a6146100e85761007b565b3661007b57005b600080fd5b34801561008c57600080fd5b5061009561028c565b005b3480156100a357600080fd5b506100e6600480360360208110156100ba57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610381565b005b3480156100f457600080fd5b506100fd61060b565b005b34801561010b57600080fd5b50610114610778565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561014c57600080fd5b506101556107a1565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561018d57600080fd5b50610239600480360360808110156101a457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190803590602001906401000000008111156101f557600080fd5b82018360208201111561020757600080fd5b8035906020019184600183028401116401000000008311171561022957600080fd5b90919293919293905050506107c7565b005b34801561024757600080fd5b5061028a6004803603602081101561025e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610852565b005b610294610a44565b73ffffffffffffffffffffffffffffffffffffffff166102b2610778565b73ffffffffffffffffffffffffffffffffffffffff161461033b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b60003090506000736b175474e89094c44da98b954eedeac495271d0f90506000683635c9adc5dea000009050606060405180602001604052806000815250905050505050565b610389610a44565b73ffffffffffffffffffffffffffffffffffffffff166103a7610778565b73ffffffffffffffffffffffffffffffffffffffff1614610430576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156104d25760003090508073ffffffffffffffffffffffffffffffffffffffff163191503373ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f193505050501580156104cb573d6000803e3d6000fd5b50506105a2565b8173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561053957600080fd5b505afa15801561054d573d6000803e3d6000fd5b505050506040513d602081101561056357600080fd5b810190808051906020019092919050505090506105a133828473ffffffffffffffffffffffffffffffffffffffff16610a4c9092919063ffffffff16565b5b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f9207361cc2a04b9c7a06691df1eb87c6a63957ae88bf01d0d18c81e3d1272099836040518082815260200191505060405180910390a35050565b610613610a44565b73ffffffffffffffffffffffffffffffffffffffff16610631610778565b73ffffffffffffffffffffffffffffffffffffffff16146106ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6107d13086610aee565b841115610829576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061127f602e913960400191505060405180910390fd5b600061083e8486610c0290919063ffffffff16565b905061084a8682610c8a565b505050505050565b61085a610a44565b73ffffffffffffffffffffffffffffffffffffffff16610878610778565b73ffffffffffffffffffffffffffffffffffffffff1614610901576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610987576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806112336026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b610ae98363a9059cbb60e01b8484604051602401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610d41565b505050565b600073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610b57578273ffffffffffffffffffffffffffffffffffffffff16319050610bfc565b8173ffffffffffffffffffffffffffffffffffffffff166370a08231846040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610bbe57600080fd5b505afa158015610bd2573d6000803e3d6000fd5b505050506040513d6020811015610be857600080fd5b810190808051906020019092919050505090505b92915050565b600080828401905083811015610c80576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ed6ff7606040518163ffffffff1660e01b815260040160206040518083038186803b158015610cf457600080fd5b505afa158015610d08573d6000803e3d6000fd5b505050506040513d6020811015610d1e57600080fd5b81019080805190602001909291905050509050610d3c818484610e30565b505050565b6060610da3826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16610f929092919063ffffffff16565b9050600081511115610e2b57808060200190516020811015610dc457600080fd5b8101908080519060200190929190505050610e2a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a8152602001806112ad602a913960400191505060405180910390fd5b5b505050565b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610f615760008373ffffffffffffffffffffffffffffffffffffffff168260405180600001905060006040518083038185875af1925050503d8060008114610ed8576040519150601f19603f3d011682016040523d82523d6000602084013e610edd565b606091505b505090506001151581151514610f5b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f436f756c646e2774207472616e7366657220455448000000000000000000000081525060200191505060405180910390fd5b50610f8d565b610f8c83828473ffffffffffffffffffffffffffffffffffffffff16610a4c9092919063ffffffff16565b5b505050565b6060610fa18484600085610faa565b90509392505050565b606082471015611005576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806112596026913960400191505060405180910390fd5b61100e85611153565b611080576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000081525060200191505060405180910390fd5b600060608673ffffffffffffffffffffffffffffffffffffffff1685876040518082805190602001908083835b602083106110d057805182526020820191506020810190506020830392506110ad565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114611132576040519150601f19603f3d011682016040523d82523d6000602084013e611137565b606091505b5091509150611147828286611166565b92505050949350505050565b600080823b905060008111915050919050565b606083156111765782905061122b565b6000835111156111895782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156111f05780820151818401526020810190506111d5565b50505050905090810190601f16801561121d5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b939250505056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c496e76616c69642062616c616e63652c207761732074686520666c6173684c6f616e207375636365737366756c3f5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a2646970667358221220e6a5d3353cb9c6657b912ffd6866a23e1004e4472aba15e3b5c635e9f0751e6264736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x74 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xFF JUMPI DUP1 PUSH4 0xC72C4D10 EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0xEE872558 EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x23B JUMPI PUSH2 0x7B JUMP JUMPDEST DUP1 PUSH4 0x1B89B61A EQ PUSH2 0x80 JUMPI DUP1 PUSH4 0x51CFF8D9 EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xE8 JUMPI PUSH2 0x7B JUMP JUMPDEST CALLDATASIZE PUSH2 0x7B JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x95 PUSH2 0x28C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x381 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFD PUSH2 0x60B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x114 PUSH2 0x778 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x155 PUSH2 0x7A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x239 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x1A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x1F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x207 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x229 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP2 SWAP3 SWAP4 SWAP1 POP POP POP PUSH2 0x7C7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x247 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x25E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x852 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x294 PUSH2 0xA44 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2B2 PUSH2 0x778 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x33B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 ADDRESS SWAP1 POP PUSH1 0x0 PUSH20 0x6B175474E89094C44DA98B954EEDEAC495271D0F SWAP1 POP PUSH1 0x0 PUSH9 0x3635C9ADC5DEA00000 SWAP1 POP PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x389 PUSH2 0xA44 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3A7 PUSH2 0x778 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x430 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x4D2 JUMPI PUSH1 0x0 ADDRESS SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE SWAP2 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP4 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x4CB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH2 0x5A2 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x539 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x54D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x563 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH2 0x5A1 CALLER DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA4C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9207361CC2A04B9C7A06691DF1EB87C6A63957AE88BF01D0D18C81E3D1272099 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x613 PUSH2 0xA44 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x631 PUSH2 0x778 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6BA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x7D1 ADDRESS DUP7 PUSH2 0xAEE JUMP JUMPDEST DUP5 GT ISZERO PUSH2 0x829 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x127F PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x83E DUP5 DUP7 PUSH2 0xC02 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x84A DUP7 DUP3 PUSH2 0xC8A JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x85A PUSH2 0xA44 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x878 PUSH2 0x778 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x901 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x987 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1233 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xAE9 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xD41 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xB57 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE SWAP1 POP PUSH2 0xBFC JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBD2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xBE8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xC80 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xED6FF760 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD08 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xD1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH2 0xD3C DUP2 DUP5 DUP5 PUSH2 0xE30 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xDA3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF92 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0xE2B JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xDC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xE2A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x12AD PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xF61 JUMPI PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x0 ADD SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xED8 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xEDD JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP PUSH1 0x1 ISZERO ISZERO DUP2 ISZERO ISZERO EQ PUSH2 0xF5B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x15 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x436F756C646E2774207472616E73666572204554480000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0xF8D JUMP JUMPDEST PUSH2 0xF8C DUP4 DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA4C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xFA1 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0xFAA JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x1005 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1259 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x100E DUP6 PUSH2 0x1153 JUMP JUMPDEST PUSH2 0x1080 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x10D0 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x10AD JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1132 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1137 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1147 DUP3 DUP3 DUP7 PUSH2 0x1166 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1176 JUMPI DUP3 SWAP1 POP PUSH2 0x122B JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x1189 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x11F0 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x11D5 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x121D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F2061646472657373416464726573733A20696E7375666669 PUSH4 0x69656E74 KECCAK256 PUSH3 0x616C61 PUSH15 0x636520666F722063616C6C496E7661 PUSH13 0x69642062616C616E63652C2077 PUSH2 0x7320 PUSH21 0x686520666C6173684C6F616E207375636365737366 PUSH22 0x6C3F5361666545524332303A204552433230206F7065 PUSH19 0x6174696F6E20646964206E6F74207375636365 PUSH6 0x64A264697066 PUSH20 0x58221220E6A5D3353CB9C6657B912FFD6866A23E LT DIV 0xE4 SELFBALANCE 0x2A 0xBA ISZERO 0xE3 0xB5 0xC6 CALLDATALOAD 0xE9 CREATE PUSH22 0x1E6264736F6C634300060C0033000000000000000000 ",
							"sourceMap": "338:1530:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1130:735;;;;;;;;;;;;;:::i;:::-;;1040:543:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1717:145:1;;;;;;;;;;;;;:::i;:::-;;1085:85;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;910:54:8;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;538:584:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2011:240:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1130:735:0;1308:12:1;:10;:12::i;:::-;1297:23;;:7;:5;:7::i;:::-;:23;;;1289:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1238:16:0::1;1265:4;1238:32;;1316:13;1332:42;1316:58;;1392:14;1409:11;1392:28;;1499:19;:24;;;;;;;;;;;::::0;::::1;;1367:1:1;;;;1130:735:0:o:0;1040:543:11:-;1308:12:1;:10;:12::i;:::-;1297:23;;:7;:5;:7::i;:::-;:23;;;1289:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1108:17:11::1;815:1:::0;1139:22:::1;;:13;:22;;;1135:375;;;1177:12;1200:4;1177:28;;1276:4;:12;;;1261:27;;1302:10;:19;;:33;1322:12;1302:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;1135:375;;;;1387:13;1381:30;;;1420:4;1381:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;1366:60;;1440:59;1474:10;1486:12;1446:13;1440:33;;;;:59;;;;;:::i;:::-;1135:375;1548:13;1524:52;;1536:10;1524:52;;;1563:12;1524:52;;;;;;;;;;;;;;;;;;1367:1:1;1040:543:11::0;:::o;1717:145:1:-;1308:12;:10;:12::i;:::-;1297:23;;:7;:5;:7::i;:::-;:23;;;1289:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1823:1:::1;1786:40;;1807:6;::::0;::::1;;;;;;;;1786:40;;;;;;;;;;;;1853:1;1836:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;1717:145::o:0;1085:85::-;1131:7;1157:6;;;;;;;;;;;1150:13;;1085:85;:::o;910:54:8:-;;;;;;;;;;;;;:::o;538:584:0:-;751:43;778:4;785:8;751:18;:43::i;:::-;740:7;:54;;732:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1017:14;1034:17;1046:4;1034:7;:11;;:17;;;;:::i;:::-;1017:34;;1062:52;1094:8;1104:9;1062:31;:52::i;:::-;538:584;;;;;;:::o;2011:240:1:-;1308:12;:10;:12::i;:::-;1297:23;;:7;:5;:7::i;:::-;:23;;;1289:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2119:1:::1;2099:22;;:8;:22;;;;2091:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2208:8;2179:38;;2200:6;::::0;::::1;;;;;;;;2179:38;;;;;;;;;;;;2236:8;2227:6;::::0;:17:::1;;;;;;;;;;;;;;;;;;2011:240:::0;:::o;598:104:7:-;651:15;685:10;678:17;;598:104;:::o;704:175:5:-;786:86;806:5;836:23;;;861:2;865:5;813:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;786:19;:86::i;:::-;704:175;;;:::o;1736:236:8:-;1821:7;862:42;1843:22;;:8;:22;;;1840:74;;;1888:7;:15;;;1881:22;;;;1840:74;1937:8;1930:26;;;1957:7;1930:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1923:42;;1736:236;;;;;:::o;2690:175:2:-;2748:7;2767:9;2783:1;2779;:5;2767:17;;2807:1;2802;:6;;2794:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2857:1;2850:8;;;2690:175;;;;:::o;1141:214:8:-;1236:20;1259:17;;;;;;;;;;;:36;;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1236:61;;1307:41;1324:4;1330:8;1340:7;1307:16;:41::i;:::-;1141:214;;;:::o;2967:751:5:-;3386:23;3412:69;3440:4;3412:69;;;;;;;;;;;;;;;;;3420:5;3412:27;;;;:69;;;;;:::i;:::-;3386:95;;3515:1;3495:10;:17;:21;3491:221;;;3635:10;3624:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3616:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3491:221;2967:751;;;:::o;1361:369:8:-;862:42;1474:22;;:8;:22;;;1471:191;;;1513:12;1531;:17;;1556:7;1531:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1512:56;;;1601:4;1590:15;;:7;:15;;;1582:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1645:7;;;1471:191;1671:52;1701:12;1715:7;1678:8;1671:29;;;;:52;;;;;:::i;:::-;1361:369;;;;:::o;3581:193:6:-;3684:12;3715:52;3737:6;3745:4;3751:1;3754:12;3715:21;:52::i;:::-;3708:59;;3581:193;;;;;:::o;4608:523::-;4735:12;4792:5;4767:21;:30;;4759:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4858:18;4869:6;4858:10;:18::i;:::-;4850:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4981:12;4995:23;5022:6;:11;;5042:5;5050:4;5022:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4980:75;;;;5072:52;5090:7;5099:10;5111:12;5072:17;:52::i;:::-;5065:59;;;;4608:523;;;;;;:::o;726:413::-;786:4;989:12;1098:7;1086:20;1078:28;;1131:1;1124:4;:8;1117:15;;;726:413;;;:::o;7091:725::-;7206:12;7234:7;7230:580;;;7264:10;7257:17;;;;7230:580;7395:1;7375:10;:17;:21;7371:429;;;7633:10;7627:17;7693:15;7680:10;7676:2;7672:19;7665:44;7582:145;7772:12;7765:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7091:725;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "975200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addressesProvider()": "1069",
								"executeOperation(address,uint256,uint256,bytes)": "infinite",
								"flashloan()": "1198",
								"owner()": "1055",
								"renounceOwnership()": "24374",
								"transferOwnership(address)": "infinite",
								"withdraw(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 338,
									"end": 1868,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 338,
									"end": 1868,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 338,
									"end": 1868,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 439,
									"end": 526,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 439,
									"end": 526,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 439,
									"end": 526,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 439,
									"end": 526,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 439,
									"end": 526,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 439,
									"end": 526,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 439,
									"end": 526,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 439,
									"end": 526,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 439,
									"end": 526,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 439,
									"end": 526,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 439,
									"end": 526,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 439,
									"end": 526,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 439,
									"end": 526,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 439,
									"end": 526,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 439,
									"end": 526,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 439,
									"end": 526,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 439,
									"end": 526,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 439,
									"end": 526,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 439,
									"end": 526,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 439,
									"end": 526,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 439,
									"end": 526,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 439,
									"end": 526,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 439,
									"end": 526,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 439,
									"end": 526,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 439,
									"end": 526,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 439,
									"end": 526,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 439,
									"end": 526,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 439,
									"end": 526,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 439,
									"end": 526,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 439,
									"end": 526,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 439,
									"end": 526,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 439,
									"end": 526,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 439,
									"end": 526,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 439,
									"end": 526,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 439,
									"end": 526,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 439,
									"end": 526,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 439,
									"end": 526,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 439,
									"end": 526,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 439,
									"end": 526,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 439,
									"end": 526,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 439,
									"end": 526,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 439,
									"end": 526,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 439,
									"end": 526,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 439,
									"end": 526,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 439,
									"end": 526,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 439,
									"end": 526,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 439,
									"end": 526,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 439,
									"end": 526,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 439,
									"end": 526,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 439,
									"end": 526,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 439,
									"end": 526,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 439,
									"end": 526,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 499,
									"end": 515,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 884,
									"end": 901,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 904,
									"end": 916,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 904,
									"end": 914,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 904,
									"end": 914,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 904,
									"end": 914,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 904,
									"end": 916,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 904,
									"end": 916,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 904,
									"end": 916,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 904,
									"end": 916,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 904,
									"end": 916,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 884,
									"end": 916,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 884,
									"end": 916,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 935,
									"end": 944,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 926,
									"end": 932,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 932,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 926,
									"end": 944,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 926,
									"end": 944,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 926,
									"end": 944,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 926,
									"end": 944,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 926,
									"end": 944,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 926,
									"end": 944,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 926,
									"end": 944,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 926,
									"end": 944,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 926,
									"end": 944,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 926,
									"end": 944,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 926,
									"end": 944,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 926,
									"end": 944,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 926,
									"end": 944,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 926,
									"end": 944,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 926,
									"end": 944,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 992,
									"end": 1001,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 959,
									"end": 1002,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 959,
									"end": 1002,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 988,
									"end": 989,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 959,
									"end": 1002,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 959,
									"end": 1002,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 959,
									"end": 1002,
									"name": "PUSH",
									"source": 1,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 959,
									"end": 1002,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 959,
									"end": 1002,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 959,
									"end": 1002,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 959,
									"end": 1002,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 959,
									"end": 1002,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 959,
									"end": 1002,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 959,
									"end": 1002,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 959,
									"end": 1002,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 959,
									"end": 1002,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 850,
									"end": 1009,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1076,
									"end": 1092,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1026,
									"end": 1043,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1026,
									"end": 1043,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1026,
									"end": 1093,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 1026,
									"end": 1093,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 1026,
									"end": 1093,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1026,
									"end": 1093,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 1026,
									"end": 1093,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1026,
									"end": 1093,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1026,
									"end": 1093,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 1026,
									"end": 1093,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 1026,
									"end": 1093,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1026,
									"end": 1093,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1026,
									"end": 1093,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1026,
									"end": 1093,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1026,
									"end": 1093,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1026,
									"end": 1093,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 1026,
									"end": 1093,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 1026,
									"end": 1093,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1026,
									"end": 1093,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1026,
									"end": 1093,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 971,
									"end": 1100,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 439,
									"end": 526,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 338,
									"end": 1868,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 338,
									"end": 1868,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 598,
									"end": 702,
									"name": "tag",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 598,
									"end": 702,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 651,
									"end": 666,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 685,
									"end": 695,
									"name": "CALLER",
									"source": 7
								},
								{
									"begin": 678,
									"end": 695,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 678,
									"end": 695,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 598,
									"end": 702,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 598,
									"end": 702,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 338,
									"end": 1868,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 338,
									"end": 1868,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 338,
									"end": 1868,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 338,
									"end": 1868,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 338,
									"end": 1868,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 338,
									"end": 1868,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 338,
									"end": 1868,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 338,
									"end": 1868,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 338,
									"end": 1868,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e6a5d3353cb9c6657b912ffd6866a23e1004e4472aba15e3b5c635e9f0751e6264736f6c634300060c0033",
									".code": [
										{
											"begin": 338,
											"end": 1868,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 338,
											"end": 1868,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 338,
											"end": 1868,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 338,
											"end": 1868,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 338,
											"end": 1868,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 338,
											"end": 1868,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 338,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 338,
											"end": 1868,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 338,
											"end": 1868,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 338,
											"end": 1868,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 338,
											"end": 1868,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 338,
											"end": 1868,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 338,
											"end": 1868,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 338,
											"end": 1868,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 338,
											"end": 1868,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 338,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 338,
											"end": 1868,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 338,
											"end": 1868,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 338,
											"end": 1868,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 338,
											"end": 1868,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 338,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 338,
											"end": 1868,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 338,
											"end": 1868,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 338,
											"end": 1868,
											"name": "PUSH",
											"source": 0,
											"value": "C72C4D10"
										},
										{
											"begin": 338,
											"end": 1868,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 338,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 338,
											"end": 1868,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 338,
											"end": 1868,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 338,
											"end": 1868,
											"name": "PUSH",
											"source": 0,
											"value": "EE872558"
										},
										{
											"begin": 338,
											"end": 1868,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 338,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 338,
											"end": 1868,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 338,
											"end": 1868,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 338,
											"end": 1868,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 338,
											"end": 1868,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 338,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 338,
											"end": 1868,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 338,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 338,
											"end": 1868,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 338,
											"end": 1868,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 338,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 338,
											"end": 1868,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 338,
											"end": 1868,
											"name": "PUSH",
											"source": 0,
											"value": "1B89B61A"
										},
										{
											"begin": 338,
											"end": 1868,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 338,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 338,
											"end": 1868,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 338,
											"end": 1868,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 338,
											"end": 1868,
											"name": "PUSH",
											"source": 0,
											"value": "51CFF8D9"
										},
										{
											"begin": 338,
											"end": 1868,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 338,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 338,
											"end": 1868,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 338,
											"end": 1868,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 338,
											"end": 1868,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 338,
											"end": 1868,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 338,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 338,
											"end": 1868,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 338,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 338,
											"end": 1868,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 338,
											"end": 1868,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 338,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 338,
											"end": 1868,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 338,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 338,
											"end": 1868,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 338,
											"end": 1868,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 338,
											"end": 1868,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 338,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 338,
											"end": 1868,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 338,
											"end": 1868,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 338,
											"end": 1868,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1130,
											"end": 1865,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1130,
											"end": 1865,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1130,
											"end": 1865,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1130,
											"end": 1865,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1130,
											"end": 1865,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1130,
											"end": 1865,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1130,
											"end": 1865,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1130,
											"end": 1865,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1130,
											"end": 1865,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1130,
											"end": 1865,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1130,
											"end": 1865,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1130,
											"end": 1865,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1130,
											"end": 1865,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1130,
											"end": 1865,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1130,
											"end": 1865,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1130,
											"end": 1865,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1130,
											"end": 1865,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1130,
											"end": 1865,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1130,
											"end": 1865,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1040,
											"end": 1583,
											"name": "tag",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1040,
											"end": 1583,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1040,
											"end": 1583,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 1040,
											"end": 1583,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1040,
											"end": 1583,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1040,
											"end": 1583,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 1040,
											"end": 1583,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1040,
											"end": 1583,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1040,
											"end": 1583,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1040,
											"end": 1583,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1040,
											"end": 1583,
											"name": "tag",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 1040,
											"end": 1583,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1040,
											"end": 1583,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1040,
											"end": 1583,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 1040,
											"end": 1583,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1040,
											"end": 1583,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1040,
											"end": 1583,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 1040,
											"end": 1583,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1040,
											"end": 1583,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1040,
											"end": 1583,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1040,
											"end": 1583,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 1040,
											"end": 1583,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1040,
											"end": 1583,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 1040,
											"end": 1583,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1040,
											"end": 1583,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1040,
											"end": 1583,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1040,
											"end": 1583,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1040,
											"end": 1583,
											"name": "tag",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 1040,
											"end": 1583,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1040,
											"end": 1583,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1040,
											"end": 1583,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1040,
											"end": 1583,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1040,
											"end": 1583,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1040,
											"end": 1583,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1040,
											"end": 1583,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 1040,
											"end": 1583,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1040,
											"end": 1583,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1040,
											"end": 1583,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1040,
											"end": 1583,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1040,
											"end": 1583,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1040,
											"end": 1583,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1040,
											"end": 1583,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1040,
											"end": 1583,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1040,
											"end": 1583,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1040,
											"end": 1583,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1040,
											"end": 1583,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1040,
											"end": 1583,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1040,
											"end": 1583,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 1040,
											"end": 1583,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1040,
											"end": 1583,
											"name": "tag",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 1040,
											"end": 1583,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1040,
											"end": 1583,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 910,
											"end": 964,
											"name": "tag",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 910,
											"end": 964,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 910,
											"end": 964,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 910,
											"end": 964,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 910,
											"end": 964,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 910,
											"end": 964,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 910,
											"end": 964,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 910,
											"end": 964,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 910,
											"end": 964,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 910,
											"end": 964,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 910,
											"end": 964,
											"name": "tag",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 910,
											"end": 964,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 910,
											"end": 964,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 910,
											"end": 964,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 910,
											"end": 964,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 910,
											"end": 964,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 910,
											"end": 964,
											"name": "tag",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 910,
											"end": 964,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 910,
											"end": 964,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 910,
											"end": 964,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 910,
											"end": 964,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 910,
											"end": 964,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 910,
											"end": 964,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 910,
											"end": 964,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 910,
											"end": 964,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 910,
											"end": 964,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 910,
											"end": 964,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 910,
											"end": 964,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 910,
											"end": 964,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 910,
											"end": 964,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 910,
											"end": 964,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 910,
											"end": 964,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 910,
											"end": 964,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 910,
											"end": 964,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 910,
											"end": 964,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 910,
											"end": 964,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 910,
											"end": 964,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 910,
											"end": 964,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "PUSH",
											"source": 0,
											"value": "100000000"
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "PUSH",
											"source": 0,
											"value": "100000000"
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1130,
											"end": 1865,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1130,
											"end": 1865,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1308,
											"end": 1318,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1297,
											"end": 1302,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1238,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1265,
											"end": 1269,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 1238,
											"end": 1270,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1238,
											"end": 1270,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1316,
											"end": 1329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1332,
											"end": 1374,
											"name": "PUSH",
											"source": 0,
											"value": "6B175474E89094C44DA98B954EEDEAC495271D0F"
										},
										{
											"begin": 1316,
											"end": 1374,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1316,
											"end": 1374,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1392,
											"end": 1406,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1409,
											"end": 1420,
											"name": "PUSH",
											"source": 0,
											"value": "3635C9ADC5DEA00000"
										},
										{
											"begin": 1392,
											"end": 1420,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1392,
											"end": 1420,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1499,
											"end": 1518,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1499,
											"end": 1523,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1499,
											"end": 1523,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1499,
											"end": 1523,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1499,
											"end": 1523,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1499,
											"end": 1523,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1499,
											"end": 1523,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1499,
											"end": 1523,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1499,
											"end": 1523,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1499,
											"end": 1523,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1499,
											"end": 1523,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1499,
											"end": 1523,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1499,
											"end": 1523,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1499,
											"end": 1523,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1499,
											"end": 1523,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1367,
											"end": 1368,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 1368,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 1368,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 1368,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1130,
											"end": 1865,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1040,
											"end": 1583,
											"name": "tag",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 1040,
											"end": 1583,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1308,
											"end": 1318,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1297,
											"end": 1302,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1125,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 815,
											"end": 816,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1139,
											"end": 1161,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1139,
											"end": 1161,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1139,
											"end": 1152,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1139,
											"end": 1161,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1139,
											"end": 1161,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1139,
											"end": 1161,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1135,
											"end": 1510,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1135,
											"end": 1510,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 1135,
											"end": 1510,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1177,
											"end": 1189,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1200,
											"end": 1204,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 1177,
											"end": 1205,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1177,
											"end": 1205,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1276,
											"end": 1280,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1276,
											"end": 1288,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1276,
											"end": 1288,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1276,
											"end": 1288,
											"name": "BALANCE",
											"source": 11
										},
										{
											"begin": 1261,
											"end": 1288,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1261,
											"end": 1288,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1312,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1321,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1302,
											"end": 1321,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1335,
											"name": "PUSH",
											"source": 11,
											"value": "8FC"
										},
										{
											"begin": 1322,
											"end": 1334,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1335,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1335,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1335,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1335,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1335,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1335,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1302,
											"end": 1335,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1335,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1302,
											"end": 1335,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1302,
											"end": 1335,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1335,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1335,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1335,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1335,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1335,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1335,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1335,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1335,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1335,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1335,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1335,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1335,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1335,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1335,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1335,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1335,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1335,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "53"
										},
										{
											"begin": 1302,
											"end": 1335,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1335,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1335,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1302,
											"end": 1335,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1335,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1335,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1335,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1302,
											"end": 1335,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1335,
											"name": "tag",
											"source": 11,
											"value": "53"
										},
										{
											"begin": 1302,
											"end": 1335,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1335,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1135,
											"end": 1510,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1135,
											"end": 1510,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "54"
										},
										{
											"begin": 1135,
											"end": 1510,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1135,
											"end": 1510,
											"name": "tag",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 1135,
											"end": 1510,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1387,
											"end": 1400,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1411,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1381,
											"end": 1411,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1411,
											"name": "PUSH",
											"source": 11,
											"value": "70A08231"
										},
										{
											"begin": 1420,
											"end": 1424,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "EXTCODESIZE",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "tag",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "tag",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "58"
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "tag",
											"source": 11,
											"value": "58"
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1366,
											"end": 1426,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1366,
											"end": 1426,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1440,
											"end": 1499,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 1474,
											"end": 1484,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 1486,
											"end": 1498,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1446,
											"end": 1459,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1440,
											"end": 1473,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1440,
											"end": 1473,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1440,
											"end": 1473,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 1440,
											"end": 1473,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1440,
											"end": 1499,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1440,
											"end": 1499,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1440,
											"end": 1499,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1440,
											"end": 1499,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1440,
											"end": 1499,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1440,
											"end": 1499,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1440,
											"end": 1499,
											"name": "tag",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 1440,
											"end": 1499,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1135,
											"end": 1510,
											"name": "tag",
											"source": 11,
											"value": "54"
										},
										{
											"begin": 1135,
											"end": 1510,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1548,
											"end": 1561,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1524,
											"end": 1576,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1524,
											"end": 1576,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1536,
											"end": 1546,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 1524,
											"end": 1576,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1524,
											"end": 1576,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1524,
											"end": 1576,
											"name": "PUSH",
											"source": 11,
											"value": "9207361CC2A04B9C7A06691DF1EB87C6A63957AE88BF01D0D18C81E3D1272099"
										},
										{
											"begin": 1563,
											"end": 1575,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1524,
											"end": 1576,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1524,
											"end": 1576,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1524,
											"end": 1576,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1524,
											"end": 1576,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1524,
											"end": 1576,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1524,
											"end": 1576,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1524,
											"end": 1576,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1524,
											"end": 1576,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1524,
											"end": 1576,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1524,
											"end": 1576,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1524,
											"end": 1576,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1524,
											"end": 1576,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1524,
											"end": 1576,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1524,
											"end": 1576,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1524,
											"end": 1576,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1524,
											"end": 1576,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1524,
											"end": 1576,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1524,
											"end": 1576,
											"name": "LOG3",
											"source": 11
										},
										{
											"begin": 1367,
											"end": 1368,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1040,
											"end": 1583,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1040,
											"end": 1583,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1308,
											"end": 1318,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1297,
											"end": 1302,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1823,
											"end": 1824,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1786,
											"end": 1826,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1786,
											"end": 1826,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1807,
											"end": 1813,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1807,
											"end": 1813,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1807,
											"end": 1813,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1807,
											"end": 1813,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1807,
											"end": 1813,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1807,
											"end": 1813,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1807,
											"end": 1813,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1807,
											"end": 1813,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1807,
											"end": 1813,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1807,
											"end": 1813,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1786,
											"end": 1826,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1786,
											"end": 1826,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1786,
											"end": 1826,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1786,
											"end": 1826,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1786,
											"end": 1826,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1786,
											"end": 1826,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1786,
											"end": 1826,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1786,
											"end": 1826,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1786,
											"end": 1826,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1786,
											"end": 1826,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1786,
											"end": 1826,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1786,
											"end": 1826,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 1853,
											"end": 1854,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1836,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1836,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1131,
											"end": 1138,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1157,
											"end": 1163,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1157,
											"end": 1163,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1157,
											"end": 1163,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1157,
											"end": 1163,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1157,
											"end": 1163,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1157,
											"end": 1163,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1157,
											"end": 1163,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1157,
											"end": 1163,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1157,
											"end": 1163,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1157,
											"end": 1163,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1157,
											"end": 1163,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1150,
											"end": 1163,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1150,
											"end": 1163,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 910,
											"end": 964,
											"name": "tag",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 910,
											"end": 964,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 910,
											"end": 964,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 910,
											"end": 964,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 910,
											"end": 964,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 910,
											"end": 964,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 910,
											"end": 964,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 910,
											"end": 964,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 910,
											"end": 964,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 910,
											"end": 964,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 910,
											"end": 964,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 910,
											"end": 964,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 910,
											"end": 964,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 910,
											"end": 964,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 910,
											"end": 964,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 751,
											"end": 794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 778,
											"end": 782,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 785,
											"end": 793,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 751,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 751,
											"end": 794,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 751,
											"end": 794,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 751,
											"end": 794,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 740,
											"end": 747,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 740,
											"end": 794,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 740,
											"end": 794,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 732,
											"end": 845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 732,
											"end": 845,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 732,
											"end": 845,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 732,
											"end": 845,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 732,
											"end": 845,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 732,
											"end": 845,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 732,
											"end": 845,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 732,
											"end": 845,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 732,
											"end": 845,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 732,
											"end": 845,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 845,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 845,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 732,
											"end": 845,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 732,
											"end": 845,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 732,
											"end": 845,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 732,
											"end": 845,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 732,
											"end": 845,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 732,
											"end": 845,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 732,
											"end": 845,
											"name": "PUSH",
											"source": 0,
											"value": "2E"
										},
										{
											"begin": 732,
											"end": 845,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 732,
											"end": 845,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 732,
											"end": 845,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 732,
											"end": 845,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 732,
											"end": 845,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 845,
											"name": "PUSH data",
											"source": 0,
											"value": "8FE07D1A7BC8ED40574AA57BEAE4FBD43367CC89459755C316997D76D102B27D"
										},
										{
											"begin": 732,
											"end": 845,
											"name": "PUSH",
											"source": 0,
											"value": "2E"
										},
										{
											"begin": 732,
											"end": 845,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 732,
											"end": 845,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 732,
											"end": 845,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 732,
											"end": 845,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 732,
											"end": 845,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 732,
											"end": 845,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 732,
											"end": 845,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 732,
											"end": 845,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 732,
											"end": 845,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 732,
											"end": 845,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 845,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 732,
											"end": 845,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 732,
											"end": 845,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 845,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 732,
											"end": 845,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 732,
											"end": 845,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1017,
											"end": 1031,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1034,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1046,
											"end": 1050,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1034,
											"end": 1041,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1034,
											"end": 1045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1034,
											"end": 1045,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1034,
											"end": 1051,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1034,
											"end": 1051,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1034,
											"end": 1051,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1034,
											"end": 1051,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1034,
											"end": 1051,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1034,
											"end": 1051,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1034,
											"end": 1051,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1017,
											"end": 1051,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1017,
											"end": 1051,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1062,
											"end": 1114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1094,
											"end": 1102,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1113,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1062,
											"end": 1093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1062,
											"end": 1114,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1062,
											"end": 1114,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1062,
											"end": 1114,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 538,
											"end": 1122,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 1308,
											"end": 1318,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 1297,
											"end": 1302,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2119,
											"end": 2120,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2099,
											"end": 2121,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2099,
											"end": 2121,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2099,
											"end": 2107,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2099,
											"end": 2121,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2099,
											"end": 2121,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2099,
											"end": 2121,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2099,
											"end": 2121,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "PUSH data",
											"source": 1,
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2208,
											"end": 2216,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2200,
											"end": 2206,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2200,
											"end": 2206,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2200,
											"end": 2206,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2200,
											"end": 2206,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2200,
											"end": 2206,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2200,
											"end": 2206,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2200,
											"end": 2206,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2200,
											"end": 2206,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2200,
											"end": 2206,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2200,
											"end": 2206,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 2236,
											"end": 2244,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2227,
											"end": 2233,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2227,
											"end": 2233,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 598,
											"end": 702,
											"name": "tag",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 598,
											"end": 702,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 651,
											"end": 666,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 685,
											"end": 695,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 678,
											"end": 695,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 678,
											"end": 695,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 598,
											"end": 702,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 598,
											"end": 702,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 704,
											"end": 879,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 704,
											"end": 879,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 786,
											"end": 872,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 806,
											"end": 811,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 836,
											"end": 859,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 836,
											"end": 859,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 836,
											"end": 859,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 861,
											"end": 863,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 865,
											"end": 870,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 813,
											"end": 871,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 813,
											"end": 871,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 813,
											"end": 871,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 813,
											"end": 871,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 813,
											"end": 871,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 813,
											"end": 871,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 813,
											"end": 871,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 813,
											"end": 871,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 813,
											"end": 871,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 813,
											"end": 871,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 813,
											"end": 871,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 813,
											"end": 871,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 813,
											"end": 871,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 813,
											"end": 871,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 813,
											"end": 871,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 813,
											"end": 871,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 813,
											"end": 871,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 813,
											"end": 871,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 813,
											"end": 871,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 813,
											"end": 871,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 813,
											"end": 871,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 813,
											"end": 871,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 813,
											"end": 871,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 813,
											"end": 871,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 813,
											"end": 871,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 813,
											"end": 871,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 813,
											"end": 871,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 813,
											"end": 871,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 813,
											"end": 871,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 813,
											"end": 871,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 813,
											"end": 871,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 813,
											"end": 871,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 813,
											"end": 871,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 813,
											"end": 871,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 813,
											"end": 871,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 813,
											"end": 871,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 813,
											"end": 871,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 813,
											"end": 871,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 813,
											"end": 871,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 813,
											"end": 871,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 786,
											"end": 805,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 786,
											"end": 872,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 786,
											"end": 872,
											"name": "tag",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 786,
											"end": 872,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 704,
											"end": 879,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 704,
											"end": 879,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 704,
											"end": 879,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 704,
											"end": 879,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1736,
											"end": 1972,
											"name": "tag",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 1736,
											"end": 1972,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1821,
											"end": 1828,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 862,
											"end": 904,
											"name": "PUSH",
											"source": 8,
											"value": "EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE"
										},
										{
											"begin": 1843,
											"end": 1865,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1843,
											"end": 1865,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1851,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1865,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1843,
											"end": 1865,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1865,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1840,
											"end": 1914,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1840,
											"end": 1914,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 1840,
											"end": 1914,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1888,
											"end": 1895,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1888,
											"end": 1903,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1888,
											"end": 1903,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1888,
											"end": 1903,
											"name": "BALANCE",
											"source": 8
										},
										{
											"begin": 1881,
											"end": 1903,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1881,
											"end": 1903,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1881,
											"end": 1903,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "85"
										},
										{
											"begin": 1881,
											"end": 1903,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1840,
											"end": 1914,
											"name": "tag",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 1840,
											"end": 1914,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1937,
											"end": 1945,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1930,
											"end": 1956,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1930,
											"end": 1956,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1930,
											"end": 1956,
											"name": "PUSH",
											"source": 8,
											"value": "70A08231"
										},
										{
											"begin": 1957,
											"end": 1964,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1930,
											"end": 1965,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1930,
											"end": 1965,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1930,
											"end": 1965,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1930,
											"end": 1965,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1930,
											"end": 1965,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1930,
											"end": 1965,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 1930,
											"end": 1965,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 1930,
											"end": 1965,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1930,
											"end": 1965,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1930,
											"end": 1965,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1930,
											"end": 1965,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1930,
											"end": 1965,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1930,
											"end": 1965,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1930,
											"end": 1965,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1930,
											"end": 1965,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1930,
											"end": 1965,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1930,
											"end": 1965,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1930,
											"end": 1965,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1930,
											"end": 1965,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1930,
											"end": 1965,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1930,
											"end": 1965,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1930,
											"end": 1965,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1930,
											"end": 1965,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1930,
											"end": 1965,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1930,
											"end": 1965,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1930,
											"end": 1965,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1930,
											"end": 1965,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1930,
											"end": 1965,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1930,
											"end": 1965,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1930,
											"end": 1965,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1930,
											"end": 1965,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1930,
											"end": 1965,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 1930,
											"end": 1965,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1930,
											"end": 1965,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1930,
											"end": 1965,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1930,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "87"
										},
										{
											"begin": 1930,
											"end": 1965,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1930,
											"end": 1965,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1930,
											"end": 1965,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1930,
											"end": 1965,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1930,
											"end": 1965,
											"name": "tag",
											"source": 8,
											"value": "87"
										},
										{
											"begin": 1930,
											"end": 1965,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1930,
											"end": 1965,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1930,
											"end": 1965,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 1930,
											"end": 1965,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 1930,
											"end": 1965,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1930,
											"end": 1965,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1930,
											"end": 1965,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1930,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "89"
										},
										{
											"begin": 1930,
											"end": 1965,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1930,
											"end": 1965,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1930,
											"end": 1965,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1930,
											"end": 1965,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1930,
											"end": 1965,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 1930,
											"end": 1965,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1930,
											"end": 1965,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1930,
											"end": 1965,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1930,
											"end": 1965,
											"name": "tag",
											"source": 8,
											"value": "89"
										},
										{
											"begin": 1930,
											"end": 1965,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1930,
											"end": 1965,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1930,
											"end": 1965,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1930,
											"end": 1965,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1930,
											"end": 1965,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1930,
											"end": 1965,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1930,
											"end": 1965,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1930,
											"end": 1965,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1930,
											"end": 1965,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1930,
											"end": 1965,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1930,
											"end": 1965,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1930,
											"end": 1965,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1930,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "90"
										},
										{
											"begin": 1930,
											"end": 1965,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1930,
											"end": 1965,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1930,
											"end": 1965,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1930,
											"end": 1965,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1930,
											"end": 1965,
											"name": "tag",
											"source": 8,
											"value": "90"
										},
										{
											"begin": 1930,
											"end": 1965,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1930,
											"end": 1965,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1930,
											"end": 1965,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1930,
											"end": 1965,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1930,
											"end": 1965,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1930,
											"end": 1965,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1930,
											"end": 1965,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1930,
											"end": 1965,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1930,
											"end": 1965,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1930,
											"end": 1965,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1930,
											"end": 1965,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1930,
											"end": 1965,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1930,
											"end": 1965,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1930,
											"end": 1965,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1930,
											"end": 1965,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1930,
											"end": 1965,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1930,
											"end": 1965,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1923,
											"end": 1965,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1923,
											"end": 1965,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1736,
											"end": 1972,
											"name": "tag",
											"source": 8,
											"value": "85"
										},
										{
											"begin": 1736,
											"end": 1972,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1736,
											"end": 1972,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1736,
											"end": 1972,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1736,
											"end": 1972,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1736,
											"end": 1972,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1736,
											"end": 1972,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2748,
											"end": 2755,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2767,
											"end": 2776,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2783,
											"end": 2784,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2779,
											"end": 2780,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2779,
											"end": 2784,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2767,
											"end": 2784,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2767,
											"end": 2784,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2807,
											"end": 2808,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2802,
											"end": 2803,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2802,
											"end": 2808,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2802,
											"end": 2808,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 2,
											"value": "1B"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 2,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2857,
											"end": 2858,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2858,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2858,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2858,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1141,
											"end": 1355,
											"name": "tag",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 1141,
											"end": 1355,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1236,
											"end": 1256,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1259,
											"end": 1276,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1259,
											"end": 1276,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1259,
											"end": 1276,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1259,
											"end": 1276,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1259,
											"end": 1276,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1259,
											"end": 1276,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1259,
											"end": 1276,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1259,
											"end": 1276,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1259,
											"end": 1276,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1259,
											"end": 1276,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1259,
											"end": 1276,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1259,
											"end": 1295,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1259,
											"end": 1295,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1259,
											"end": 1295,
											"name": "PUSH",
											"source": 8,
											"value": "ED6FF760"
										},
										{
											"begin": 1259,
											"end": 1297,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1259,
											"end": 1297,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1259,
											"end": 1297,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1259,
											"end": 1297,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1259,
											"end": 1297,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1259,
											"end": 1297,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 1259,
											"end": 1297,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 1259,
											"end": 1297,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1259,
											"end": 1297,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1259,
											"end": 1297,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1259,
											"end": 1297,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1259,
											"end": 1297,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1259,
											"end": 1297,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1259,
											"end": 1297,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1259,
											"end": 1297,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1259,
											"end": 1297,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1259,
											"end": 1297,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1259,
											"end": 1297,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1259,
											"end": 1297,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1259,
											"end": 1297,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1259,
											"end": 1297,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 1259,
											"end": 1297,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1259,
											"end": 1297,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1259,
											"end": 1297,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1259,
											"end": 1297,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 1259,
											"end": 1297,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1259,
											"end": 1297,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1259,
											"end": 1297,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1259,
											"end": 1297,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1259,
											"end": 1297,
											"name": "tag",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 1259,
											"end": 1297,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1259,
											"end": 1297,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1259,
											"end": 1297,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 1259,
											"end": 1297,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 1259,
											"end": 1297,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1259,
											"end": 1297,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1259,
											"end": 1297,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1259,
											"end": 1297,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 1259,
											"end": 1297,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1259,
											"end": 1297,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1259,
											"end": 1297,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1259,
											"end": 1297,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1259,
											"end": 1297,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 1259,
											"end": 1297,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1259,
											"end": 1297,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1259,
											"end": 1297,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1259,
											"end": 1297,
											"name": "tag",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 1259,
											"end": 1297,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1259,
											"end": 1297,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1259,
											"end": 1297,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1259,
											"end": 1297,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1259,
											"end": 1297,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1259,
											"end": 1297,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1259,
											"end": 1297,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1259,
											"end": 1297,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1259,
											"end": 1297,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1259,
											"end": 1297,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1259,
											"end": 1297,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1259,
											"end": 1297,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1259,
											"end": 1297,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 1259,
											"end": 1297,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1259,
											"end": 1297,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1259,
											"end": 1297,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1259,
											"end": 1297,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1259,
											"end": 1297,
											"name": "tag",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 1259,
											"end": 1297,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1259,
											"end": 1297,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1259,
											"end": 1297,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1259,
											"end": 1297,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1259,
											"end": 1297,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1259,
											"end": 1297,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1259,
											"end": 1297,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1259,
											"end": 1297,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1259,
											"end": 1297,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1259,
											"end": 1297,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1259,
											"end": 1297,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1259,
											"end": 1297,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1259,
											"end": 1297,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1259,
											"end": 1297,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1259,
											"end": 1297,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1259,
											"end": 1297,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1259,
											"end": 1297,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1236,
											"end": 1297,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1236,
											"end": 1297,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1307,
											"end": 1348,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 1324,
											"end": 1328,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1330,
											"end": 1338,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1340,
											"end": 1347,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1307,
											"end": 1323,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 1307,
											"end": 1348,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1307,
											"end": 1348,
											"name": "tag",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 1307,
											"end": 1348,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1141,
											"end": 1355,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1141,
											"end": 1355,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1141,
											"end": 1355,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1141,
											"end": 1355,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2967,
											"end": 3718,
											"name": "tag",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 2967,
											"end": 3718,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3386,
											"end": 3409,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 3440,
											"end": 3444,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "PUSH",
											"source": 5,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3420,
											"end": 3425,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3412,
											"end": 3439,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3412,
											"end": 3439,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3412,
											"end": 3439,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 3412,
											"end": 3439,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "tag",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3386,
											"end": 3481,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3386,
											"end": 3481,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3515,
											"end": 3516,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3495,
											"end": 3505,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3495,
											"end": 3512,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3495,
											"end": 3516,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 3491,
											"end": 3712,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3491,
											"end": 3712,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 3491,
											"end": 3712,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3635,
											"end": 3645,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "tag",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH",
											"source": 5,
											"value": "2A"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH data",
											"source": 5,
											"value": "E11AD79D1E4A7F2E5F376964CB99E8E8F7904E3FC16A109F7A7ECB9AA7956DCD"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH",
											"source": 5,
											"value": "2A"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "CODECOPY",
											"source": 5
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "tag",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3491,
											"end": 3712,
											"name": "tag",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 3491,
											"end": 3712,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2967,
											"end": 3718,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2967,
											"end": 3718,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2967,
											"end": 3718,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2967,
											"end": 3718,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1361,
											"end": 1730,
											"name": "tag",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 1361,
											"end": 1730,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 862,
											"end": 904,
											"name": "PUSH",
											"source": 8,
											"value": "EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE"
										},
										{
											"begin": 1474,
											"end": 1496,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1474,
											"end": 1496,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1474,
											"end": 1482,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1474,
											"end": 1496,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1474,
											"end": 1496,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1474,
											"end": 1496,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1471,
											"end": 1662,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1471,
											"end": 1662,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 1471,
											"end": 1662,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1513,
											"end": 1525,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1531,
											"end": 1543,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1548,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1531,
											"end": 1548,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1556,
											"end": 1563,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1568,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1531,
											"end": 1568,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1568,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1568,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1531,
											"end": 1568,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1568,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1568,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1568,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1531,
											"end": 1568,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1531,
											"end": 1568,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1568,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1568,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1568,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1568,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1568,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1568,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1568,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1568,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1568,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1568,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1568,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1568,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1568,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1568,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1568,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1531,
											"end": 1568,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1568,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1568,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 1531,
											"end": 1568,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1568,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1531,
											"end": 1568,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1568,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1568,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1568,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1531,
											"end": 1568,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1568,
											"name": "PUSH",
											"source": 8,
											"value": "3F"
										},
										{
											"begin": 1531,
											"end": 1568,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1568,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1568,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1568,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1568,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1568,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1531,
											"end": 1568,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1568,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1568,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1568,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1568,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1568,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1531,
											"end": 1568,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1531,
											"end": 1568,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1568,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1568,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1568,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 1531,
											"end": 1568,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1568,
											"name": "tag",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 1531,
											"end": 1568,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1568,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 1531,
											"end": 1568,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1568,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1568,
											"name": "tag",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 1531,
											"end": 1568,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1568,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1512,
											"end": 1568,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1512,
											"end": 1568,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1512,
											"end": 1568,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1601,
											"end": 1605,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1590,
											"end": 1605,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1590,
											"end": 1605,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1590,
											"end": 1597,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1590,
											"end": 1605,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1590,
											"end": 1605,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1590,
											"end": 1605,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1582,
											"end": 1631,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 1582,
											"end": 1631,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1582,
											"end": 1631,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1582,
											"end": 1631,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1582,
											"end": 1631,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1582,
											"end": 1631,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1582,
											"end": 1631,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1582,
											"end": 1631,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1582,
											"end": 1631,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1582,
											"end": 1631,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1582,
											"end": 1631,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1582,
											"end": 1631,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1582,
											"end": 1631,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1582,
											"end": 1631,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1582,
											"end": 1631,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1582,
											"end": 1631,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1582,
											"end": 1631,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1582,
											"end": 1631,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1582,
											"end": 1631,
											"name": "PUSH",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 1582,
											"end": 1631,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1582,
											"end": 1631,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1582,
											"end": 1631,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1582,
											"end": 1631,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1582,
											"end": 1631,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1582,
											"end": 1631,
											"name": "PUSH",
											"source": 8,
											"value": "436F756C646E2774207472616E73666572204554480000000000000000000000"
										},
										{
											"begin": 1582,
											"end": 1631,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1582,
											"end": 1631,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1582,
											"end": 1631,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1582,
											"end": 1631,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1582,
											"end": 1631,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1582,
											"end": 1631,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1582,
											"end": 1631,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1582,
											"end": 1631,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1582,
											"end": 1631,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1582,
											"end": 1631,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1582,
											"end": 1631,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1582,
											"end": 1631,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1582,
											"end": 1631,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1582,
											"end": 1631,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1582,
											"end": 1631,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1582,
											"end": 1631,
											"name": "tag",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 1582,
											"end": 1631,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1645,
											"end": 1652,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1645,
											"end": 1652,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 1645,
											"end": 1652,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1471,
											"end": 1662,
											"name": "tag",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 1471,
											"end": 1662,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1671,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 1701,
											"end": 1713,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1715,
											"end": 1722,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1678,
											"end": 1686,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1671,
											"end": 1700,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1671,
											"end": 1700,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1671,
											"end": 1700,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 1671,
											"end": 1700,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1671,
											"end": 1723,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1671,
											"end": 1723,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1671,
											"end": 1723,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1671,
											"end": 1723,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1671,
											"end": 1723,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1671,
											"end": 1723,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1671,
											"end": 1723,
											"name": "tag",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 1671,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1361,
											"end": 1730,
											"name": "tag",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 1361,
											"end": 1730,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1361,
											"end": 1730,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1361,
											"end": 1730,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1361,
											"end": 1730,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1361,
											"end": 1730,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3581,
											"end": 3774,
											"name": "tag",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 3581,
											"end": 3774,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3684,
											"end": 3696,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3715,
											"end": 3767,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 3737,
											"end": 3743,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3745,
											"end": 3749,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3751,
											"end": 3752,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3754,
											"end": 3766,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3715,
											"end": 3736,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 3715,
											"end": 3767,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3715,
											"end": 3767,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 3715,
											"end": 3767,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3708,
											"end": 3767,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3708,
											"end": 3767,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3581,
											"end": 3774,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3581,
											"end": 3774,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3581,
											"end": 3774,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3581,
											"end": 3774,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3581,
											"end": 3774,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3581,
											"end": 3774,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4608,
											"end": 5131,
											"name": "tag",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 4608,
											"end": 5131,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4735,
											"end": 4747,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 4792,
											"end": 4797,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4767,
											"end": 4788,
											"name": "SELFBALANCE",
											"source": 6
										},
										{
											"begin": 4767,
											"end": 4797,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4767,
											"end": 4797,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH data",
											"source": 6,
											"value": "565F1A77334FC4792800921178C71E4521ACFFAB18FF9E7885B49377EE80AB4C"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "CODECOPY",
											"source": 6
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "tag",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4858,
											"end": 4876,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 4869,
											"end": 4875,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4858,
											"end": 4868,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 4858,
											"end": 4876,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4858,
											"end": 4876,
											"name": "tag",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 4858,
											"end": 4876,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH",
											"source": 6,
											"value": "1D"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH",
											"source": 6,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4981,
											"end": 4993,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4995,
											"end": 5018,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 5022,
											"end": 5028,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5033,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5022,
											"end": 5033,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5042,
											"end": 5047,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5050,
											"end": 5054,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "tag",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "tag",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 6,
											"value": "3F"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "tag",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "tag",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4980,
											"end": 5055,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4980,
											"end": 5055,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4980,
											"end": 5055,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4980,
											"end": 5055,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5072,
											"end": 5124,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 5090,
											"end": 5097,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5099,
											"end": 5109,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5111,
											"end": 5123,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5072,
											"end": 5089,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 5072,
											"end": 5124,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5072,
											"end": 5124,
											"name": "tag",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 5072,
											"end": 5124,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5065,
											"end": 5124,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5065,
											"end": 5124,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5065,
											"end": 5124,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5065,
											"end": 5124,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4608,
											"end": 5131,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 4608,
											"end": 5131,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 4608,
											"end": 5131,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4608,
											"end": 5131,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4608,
											"end": 5131,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4608,
											"end": 5131,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4608,
											"end": 5131,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 726,
											"end": 1139,
											"name": "tag",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 726,
											"end": 1139,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 786,
											"end": 790,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 989,
											"end": 1001,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1098,
											"end": 1105,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1086,
											"end": 1106,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 1078,
											"end": 1106,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1078,
											"end": 1106,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1131,
											"end": 1132,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1124,
											"end": 1128,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1124,
											"end": 1132,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1117,
											"end": 1132,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1117,
											"end": 1132,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1117,
											"end": 1132,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 726,
											"end": 1139,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 726,
											"end": 1139,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 726,
											"end": 1139,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 726,
											"end": 1139,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 7091,
											"end": 7816,
											"name": "tag",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 7091,
											"end": 7816,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7206,
											"end": 7218,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 7234,
											"end": 7241,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7230,
											"end": 7810,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7230,
											"end": 7810,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 7230,
											"end": 7810,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7264,
											"end": 7274,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7257,
											"end": 7274,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7257,
											"end": 7274,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7257,
											"end": 7274,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 7257,
											"end": 7274,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7230,
											"end": 7810,
											"name": "tag",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 7230,
											"end": 7810,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7395,
											"end": 7396,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7375,
											"end": 7385,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7375,
											"end": 7392,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7375,
											"end": 7396,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 7371,
											"end": 7800,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7371,
											"end": 7800,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 7371,
											"end": 7800,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7633,
											"end": 7643,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7627,
											"end": 7644,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7693,
											"end": 7708,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7680,
											"end": 7690,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7676,
											"end": 7678,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7672,
											"end": 7691,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7665,
											"end": 7709,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7582,
											"end": 7727,
											"name": "tag",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 7582,
											"end": 7727,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7772,
											"end": 7784,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "tag",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "tag",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7091,
											"end": 7816,
											"name": "tag",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 7091,
											"end": 7816,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7091,
											"end": 7816,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 7091,
											"end": 7816,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7091,
											"end": 7816,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7091,
											"end": 7816,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7091,
											"end": 7816,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7091,
											"end": 7816,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										}
									],
									".data": {
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
										"565F1A77334FC4792800921178C71E4521ACFFAB18FF9E7885B49377EE80AB4C": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
										"8FE07D1A7BC8ED40574AA57BEAE4FBD43367CC89459755C316997D76D102B27D": "496e76616c69642062616c616e63652c207761732074686520666c6173684c6f616e207375636365737366756c3f",
										"E11AD79D1E4A7F2E5F376964CB99E8E8F7904E3FC16A109F7A7ECB9AA7956DCD": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564"
									}
								}
							}
						},
						"methodIdentifiers": {
							"addressesProvider()": "c72c4d10",
							"executeOperation(address,uint256,uint256,bytes)": "ee872558",
							"flashloan()": "1b89b61a",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b",
							"withdraw(address)": "51cff8d9"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addressProvider\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_assetAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"LogWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"addressesProvider\",\"outputs\":[{\"internalType\":\"contract ILendingPoolAddressesProvider\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_reserve\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_params\",\"type\":\"bytes\"}],\"name\":\"executeOperation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"flashloan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_assetAddress\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdraw(address)\":{\"details\":\"Withdraw asset.\",\"params\":{\"_assetAddress\":\"Asset to be withdrawn.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Kyber-Jarvis.sol\":\"arbitragejeur\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Kyber-Jarvis.sol\":{\"keccak256\":\"0x24a281e82cb57e5df1e46046512581916ac5e76a18967149e9b85c5b8a35ee1d\",\"license\":\"dvdch.eth\",\"urls\":[\"bzz-raw://7416b97a7eba17032cc93fbca7cdc52abab9aaa7b754d9a8137b481c5e2083d6\",\"dweb:/ipfs/QmX7HkFZ236iaU2ge2nGqoudaieYAops6j2i1BPCfGcc5v\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":{\"keccak256\":\"0x15e2d5bd4c28a88548074c54d220e8086f638a71ed07e6b3ba5a70066fcf458d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90faf5851c02f9bd42c5bfb54d4f0421a2612f50ab80b2c4fa24fa3792071cc2\",\"dweb:/ipfs/QmRGM4F2PcGVF85aTfaA9YBhCHHDqrMhRjyp6fGeBTtirb\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xca0c2396dbeb3503b51abf4248ebf77a1461edad513c01529df51850a012bee3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://991b44ff44e0496e8554a90f4c0512c28faed45104d40430019f3c67ea67740e\",\"dweb:/ipfs/Qmc3nRapVbcctELoZS5qe17zLkFB3bETBfwzCTMF1CSuGE\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0xf12dfbe97e6276980b83d2830bb0eb75e0cf4f3e626c2471137f82158ae6a0fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a849c2d95e85463909e5b5c920b13e7a11216ca14127085e16d22b9379d52a\",\"dweb:/ipfs/QmUg3CZDbCCcQdroEpexBy5ZFd5vD1UWijWQq9qHZjtJNQ\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":{\"keccak256\":\"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://256c8c8af5eb072bc473226ab2b2187149b8fc04f5f4a4820db22527f5ce8e3c\",\"dweb:/ipfs/QmRvi5BhnL7Rxf85KrJhwM6RRhukm4tzoctRdgQEheNyiN\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]},\"https://github.com/aave/flashloan-box/blob/master/contracts/aave/FlashLoanReceiverBase.sol\":{\"keccak256\":\"0x06ade60296cb64d4bf6db0cb17690c374880673f07cb2fa8bd37d28007092368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://537781e9174d569d214fff8d7f43a85aa4b25a1279b3351190e1268c4f56e03a\",\"dweb:/ipfs/QmS6SPgmn35KeiiFFHP9GHUaB248sDRSTSdBZ5YcZipNVo\"]},\"https://github.com/aave/flashloan-box/blob/master/contracts/aave/IFlashLoanReceiver.sol\":{\"keccak256\":\"0xce893aec23c34acdc52e3dc1f9f1ea219fcc8876171197aec6242197dc5417e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1eead516bca0f2f3d397ce38384e667df968889cb22395787676e71a55690b2d\",\"dweb:/ipfs/QmbqU1DG4u8w44siE7Pnpoo5tuWmARRCd41NrxF8v3wV5S\"]},\"https://github.com/aave/flashloan-box/blob/master/contracts/aave/ILendingPoolAddressesProvider.sol\":{\"keccak256\":\"0x6c92630bf2e9c2daed9976ece3b50b46308f37348237264c80dbd1f36e1beeea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b753c322bb0043c79850ac0edea21de0aced423320d2d7911f030c744caa6325\",\"dweb:/ipfs/QmSTDeo9r7oNoBvLndFq7T6MuEzN87yxnAPuri4FcwsYoA\"]},\"https://github.com/aave/flashloan-box/blob/master/contracts/utils/Withdrawable.sol\":{\"keccak256\":\"0x0c88d4a5cb375c848a174dac6d2d739e08e1c20e4807ba48fae34eb4470c1ee3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://32c707fa70815b1eb4b79e633648103f7a383a87524479da252d5cb0d4e4de19\",\"dweb:/ipfs/QmXXVVoDkv513A1A8JHfo5wtD6nLfmukFtZTuopSKEr6FP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 91,
								"contract": "contracts/Kyber-Jarvis.sol:arbitragejeur",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 1684,
								"contract": "contracts/Kyber-Jarvis.sol:arbitragejeur",
								"label": "addressesProvider",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(ILendingPoolAddressesProvider)1815"
							},
							{
								"astId": 7,
								"contract": "contracts/Kyber-Jarvis.sol:arbitragejeur",
								"label": "recipientWallet",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(ILendingPoolAddressesProvider)1815": {
								"encoding": "inplace",
								"label": "contract ILendingPoolAddressesProvider",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":{\"keccak256\":\"0x15e2d5bd4c28a88548074c54d220e8086f638a71ed07e6b3ba5a70066fcf458d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90faf5851c02f9bd42c5bfb54d4f0421a2612f50ab80b2c4fa24fa3792071cc2\",\"dweb:/ipfs/QmRGM4F2PcGVF85aTfaA9YBhCHHDqrMhRjyp6fGeBTtirb\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 91,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/math/SafeMath.sol\":630:7224  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/math/SafeMath.sol\":630:7224  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220ddad934fb2023e32bb861ac768b484a77fb7f2ce3e6d452d5a9d9ceec0fb8de764736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ddad934fb2023e32bb861ac768b484a77fb7f2ce3e6d452d5a9d9ceec0fb8de764736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDD 0xAD SWAP4 0x4F 0xB2 MUL RETURNDATACOPY ORIGIN 0xBB DUP7 BYTE 0xC7 PUSH9 0xB484A77FB7F2CE3E6D GASLIMIT 0x2D GAS SWAP14 SWAP13 0xEE 0xC0 0xFB DUP14 0xE7 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "630:6594:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ddad934fb2023e32bb861ac768b484a77fb7f2ce3e6d452d5a9d9ceec0fb8de764736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDD 0xAD SWAP4 0x4F 0xB2 MUL RETURNDATACOPY ORIGIN 0xBB DUP7 BYTE 0xC7 PUSH9 0xB484A77FB7F2CE3E6D GASLIMIT 0x2D GAS SWAP14 SWAP13 0xEE 0xC0 0xFB DUP14 0xE7 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "630:6594:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "INVALID",
									"source": 2
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ddad934fb2023e32bb861ac768b484a77fb7f2ce3e6d452d5a9d9ceec0fb8de764736f6c634300060c0033",
									".code": [
										{
											"begin": 630,
											"end": 7224,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}, initializes {decimals} with a default value of 18. To select a different value for {decimals}, use {_setupDecimals}. All three of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":1321:10795  contract ERC20 is Context, IERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":1958:2103  constructor (string memory name_, string memory symbol_) public {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  0x40\n  dup2\n  lt\n  iszero\n  tag_2\n  jumpi\n  0x00\n  dup1\n  revert\ntag_2:\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n  0x0100000000\n  dup3\n  gt\n  iszero\n  tag_3\n  jumpi\n  0x00\n  dup1\n  revert\ntag_3:\n  dup4\n  dup3\n  add\n  swap2\n  pop\n  0x20\n  dup3\n  add\n  dup6\n  dup2\n  gt\n  iszero\n  tag_4\n  jumpi\n  0x00\n  dup1\n  revert\ntag_4:\n  dup3\n  mload\n  dup7\n  0x01\n  dup3\n  mul\n  dup4\n  add\n  gt\n  0x0100000000\n  dup3\n  gt\n  or\n  iszero\n  tag_5\n  jumpi\n  0x00\n  dup1\n  revert\ntag_5:\n  dup1\n  dup4\n  mstore\n  0x20\n  dup4\n  add\n  swap3\n  pop\n  pop\n  pop\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n  0x00\ntag_6:\n  dup4\n  dup2\n  lt\n  iszero\n  tag_8\n  jumpi\n  dup1\n  dup3\n  add\n  mload\n  dup2\n  dup5\n  add\n  mstore\n  0x20\n  dup2\n  add\n  swap1\n  pop\n  jump(tag_6)\ntag_8:\n  pop\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_9\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_9:\n  pop\n  0x40\n  mstore\n  0x20\n  add\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n  0x0100000000\n  dup3\n  gt\n  iszero\n  tag_10\n  jumpi\n  0x00\n  dup1\n  revert\ntag_10:\n  dup4\n  dup3\n  add\n  swap2\n  pop\n  0x20\n  dup3\n  add\n  dup6\n  dup2\n  gt\n  iszero\n  tag_11\n  jumpi\n  0x00\n  dup1\n  revert\ntag_11:\n  dup3\n  mload\n  dup7\n  0x01\n  dup3\n  mul\n  dup4\n  add\n  gt\n  0x0100000000\n  dup3\n  gt\n  or\n  iszero\n  tag_12\n  jumpi\n  0x00\n  dup1\n  revert\ntag_12:\n  dup1\n  dup4\n  mstore\n  0x20\n  dup4\n  add\n  swap3\n  pop\n  pop\n  pop\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n  0x00\ntag_13:\n  dup4\n  dup2\n  lt\n  iszero\n  tag_15\n  jumpi\n  dup1\n  dup3\n  add\n  mload\n  dup2\n  dup5\n  add\n  mstore\n  0x20\n  dup2\n  add\n  swap1\n  pop\n  jump(tag_13)\ntag_15:\n  pop\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_16\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_16:\n  pop\n  0x40\n  mstore\n  pop\n  pop\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":2040:2045  name_ */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":2032:2037  _name */\n  0x03\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":2032:2045  _name = name_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_19\n  swap3\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":2065:2072  symbol_ */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":2055:2062  _symbol */\n  0x04\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":2055:2072  _symbol = symbol_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_21\n  swap3\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_21:\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":2094:2096  18 */\n  0x12\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":2082:2091  _decimals */\n  0x05\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":2082:2096  _decimals = 18 */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":1958:2103  constructor (string memory name_, string memory symbol_) public {... */\n  pop\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":1321:10795  contract ERC20 is Context, IERC20 {... */\n  jump(tag_22)\ntag_20:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_24\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_23)\ntag_24:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_23\n  jumpi\n  swap2\n  dup3\n  add\ntag_25:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_26\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_25)\ntag_26:\ntag_23:\n  pop\n  swap1\n  pop\n  tag_27\n  swap2\n  swap1\n  tag_28\n  jump\t// in\ntag_27:\n  pop\n  swap1\n  jump\t// out\ntag_28:\ntag_29:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_30\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_29)\ntag_30:\n  pop\n  swap1\n  jump\t// out\ntag_22:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":1321:10795  contract ERC20 is Context, IERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":2168:2257  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_17:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_19\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_17)\n    tag_19:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_20\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_20:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":4244:4410  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_23\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":3235:3341  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":4877:5194  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_6:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x60\n      dup2\n      lt\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_28\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":3086:3175  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":5589:5804  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_33\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":3399:3524  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_36\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":2370:2463  function symbol() public view virtual returns (string memory) {... */\n    tag_10:\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_39:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_41\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_39)\n    tag_41:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_42\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_42:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":6291:6557  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_45\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":3727:3899  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_48\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":3957:4106  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_51\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":2168:2257  function name() public view virtual returns (string memory) {... */\n    tag_16:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":2213:2226  string memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":2245:2250  _name */\n      0x03\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":2238:2250  return _name */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_53\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_54\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_53)\n    tag_54:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_55:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_55\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_53:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":2168:2257  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":4244:4410  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_23:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":4327:4331  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":4343:4382  _approve(_msgSender(), spender, amount) */\n      tag_57\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":4352:4364  _msgSender() */\n      tag_58\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":4352:4362  _msgSender */\n      tag_59\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":4352:4364  _msgSender() */\n      jump\t// in\n    tag_58:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":4366:4373  spender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":4375:4381  amount */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":4343:4351  _approve */\n      tag_60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":4343:4382  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_57:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":4399:4403  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":4392:4403  return true */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":4244:4410  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":3235:3341  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_25:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":3296:3303  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":3322:3334  _totalSupply */\n      sload(0x02)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":3315:3334  return _totalSupply */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":3235:3341  function totalSupply() public view virtual override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":4877:5194  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_28:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":4983:4987  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":4999:5035  _transfer(sender, recipient, amount) */\n      tag_63\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":5009:5015  sender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":5017:5026  recipient */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":5028:5034  amount */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":4999:5008  _transfer */\n      tag_64\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":4999:5035  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_63:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":5045:5166  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      tag_65\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":5054:5060  sender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":5062:5074  _msgSender() */\n      tag_66\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":5062:5072  _msgSender */\n      tag_59\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":5062:5074  _msgSender() */\n      jump\t// in\n    tag_66:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":5076:5165  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      tag_67\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":5114:5120  amount */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":5076:5165  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330\n      0x28\n      swap2\n      codecopy\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":5076:5087  _allowances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":5076:5095  _allowances[sender] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":5088:5094  sender */\n      dup12\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":5076:5095  _allowances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":5076:5109  _allowances[sender][_msgSender()] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":5096:5108  _msgSender() */\n      tag_68\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":5096:5106  _msgSender */\n      tag_59\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":5096:5108  _msgSender() */\n      jump\t// in\n    tag_68:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":5076:5109  _allowances[sender][_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":5076:5113  _allowances[sender][_msgSender()].sub */\n      tag_69\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":5076:5165  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_67:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":5045:5053  _approve */\n      tag_60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":5045:5166  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      jump\t// in\n    tag_65:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":5183:5187  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":5176:5187  return true */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":4877:5194  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":3086:3175  function decimals() public view virtual returns (uint8) {... */\n    tag_30:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":3135:3140  uint8 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":3159:3168  _decimals */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":3152:3168  return _decimals */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":3086:3175  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":5589:5804  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_33:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":5677:5681  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":5693:5776  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      tag_72\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":5702:5714  _msgSender() */\n      tag_73\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":5702:5712  _msgSender */\n      tag_59\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":5702:5714  _msgSender() */\n      jump\t// in\n    tag_73:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":5716:5723  spender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":5725:5775  _allowances[_msgSender()][spender].add(addedValue) */\n      tag_74\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":5764:5774  addedValue */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":5725:5736  _allowances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":5725:5750  _allowances[_msgSender()] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":5737:5749  _msgSender() */\n      tag_75\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":5737:5747  _msgSender */\n      tag_59\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":5737:5749  _msgSender() */\n      jump\t// in\n    tag_75:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":5725:5750  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":5725:5759  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":5751:5758  spender */\n      dup10\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":5725:5759  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":5725:5763  _allowances[_msgSender()][spender].add */\n      tag_76\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":5725:5775  _allowances[_msgSender()][spender].add(addedValue) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_74:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":5693:5701  _approve */\n      tag_60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":5693:5776  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      jump\t// in\n    tag_72:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":5793:5797  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":5786:5797  return true */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":5589:5804  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":3399:3524  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_36:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":3473:3480  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":3499:3508  _balances */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":3499:3517  _balances[account] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":3509:3516  account */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":3499:3517  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":3492:3517  return _balances[account] */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":3399:3524  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":2370:2463  function symbol() public view virtual returns (string memory) {... */\n    tag_38:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":2417:2430  string memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":2449:2456  _symbol */\n      0x04\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":2442:2456  return _symbol */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_79\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_80\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_79)\n    tag_80:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_81:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_81\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_79:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":2370:2463  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":6291:6557  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_45:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":6384:6388  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":6400:6529  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\")) */\n      tag_83\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":6409:6421  _msgSender() */\n      tag_84\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":6409:6419  _msgSender */\n      tag_59\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":6409:6421  _msgSender() */\n      jump\t// in\n    tag_84:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":6423:6430  spender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":6432:6528  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_85\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":6471:6486  subtractedValue */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":6432:6528  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8\n      0x25\n      swap2\n      codecopy\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":6432:6443  _allowances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":6432:6457  _allowances[_msgSender()] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":6444:6456  _msgSender() */\n      tag_86\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":6444:6454  _msgSender */\n      tag_59\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":6444:6456  _msgSender() */\n      jump\t// in\n    tag_86:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":6432:6457  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":6432:6466  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":6458:6465  spender */\n      dup11\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":6432:6466  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":6432:6470  _allowances[_msgSender()][spender].sub */\n      tag_69\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":6432:6528  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_85:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":6400:6408  _approve */\n      tag_60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":6400:6529  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\")) */\n      jump\t// in\n    tag_83:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":6546:6550  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":6539:6550  return true */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":6291:6557  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":3727:3899  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_48:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":3813:3817  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":3829:3871  _transfer(_msgSender(), recipient, amount) */\n      tag_88\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":3839:3851  _msgSender() */\n      tag_89\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":3839:3849  _msgSender */\n      tag_59\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":3839:3851  _msgSender() */\n      jump\t// in\n    tag_89:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":3853:3862  recipient */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":3864:3870  amount */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":3829:3838  _transfer */\n      tag_64\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":3829:3871  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n    tag_88:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":3888:3892  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":3881:3892  return true */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":3727:3899  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":3957:4106  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_51:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":4046:4053  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":4072:4083  _allowances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":4072:4090  _allowances[owner] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":4084:4089  owner */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":4072:4090  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":4072:4099  _allowances[owner][spender] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":4091:4098  spender */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":4072:4099  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":4065:4099  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":3957:4106  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Context.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\n    tag_59:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Context.sol\":651:666  address payable */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Context.sol\":685:695  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Context.sol\":678:695  return msg.sender */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Context.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":9355:9695  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_60:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":9473:9474  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":9456:9475  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":9456:9461  owner */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":9456:9475  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":9448:9516  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_93\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_93:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":9553:9554  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":9534:9555  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":9534:9541  spender */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":9534:9555  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":9526:9594  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_94\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_94:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":9635:9641  amount */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":9605:9616  _allowances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":9605:9623  _allowances[owner] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":9617:9622  owner */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":9605:9623  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":9605:9632  _allowances[owner][spender] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":9624:9631  spender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":9605:9632  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":9605:9641  _allowances[owner][spender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":9672:9679  spender */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":9656:9688  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":9665:9670  owner */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":9656:9688  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":9681:9687  amount */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":9656:9688  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":9355:9695  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":7031:7561  function _transfer(address sender, address recipient, uint256 amount) internal virtual {... */\n    tag_64:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":7154:7155  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":7136:7156  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":7136:7142  sender */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":7136:7156  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":7128:7198  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_96\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_96:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":7237:7238  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":7216:7239  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":7216:7225  recipient */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":7216:7239  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":7208:7279  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_97\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_97:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":7290:7337  _beforeTokenTransfer(sender, recipient, amount) */\n      tag_98\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":7311:7317  sender */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":7319:7328  recipient */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":7330:7336  amount */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":7290:7310  _beforeTokenTransfer */\n      tag_99\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":7290:7337  _beforeTokenTransfer(sender, recipient, amount) */\n      jump\t// in\n    tag_98:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":7368:7439  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_100\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":7390:7396  amount */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":7368:7439  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6\n      0x26\n      swap2\n      codecopy\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":7368:7377  _balances */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":7368:7385  _balances[sender] */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":7378:7384  sender */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":7368:7385  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":7368:7389  _balances[sender].sub */\n      tag_69\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":7368:7439  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_100:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":7348:7357  _balances */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":7348:7365  _balances[sender] */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":7358:7364  sender */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":7348:7365  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":7348:7439  _balances[sender] = _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":7472:7504  _balances[recipient].add(amount) */\n      tag_101\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":7497:7503  amount */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":7472:7481  _balances */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":7472:7492  _balances[recipient] */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":7482:7491  recipient */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":7472:7492  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":7472:7496  _balances[recipient].add */\n      tag_76\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":7472:7504  _balances[recipient].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_101:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":7449:7458  _balances */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":7449:7469  _balances[recipient] */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":7459:7468  recipient */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":7449:7469  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":7449:7504  _balances[recipient] = _balances[recipient].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":7536:7545  recipient */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":7519:7554  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":7528:7534  sender */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":7519:7554  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":7547:7553  amount */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":7519:7554  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":7031:7561  function _transfer(address sender, address recipient, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/math/SafeMath.sol\":5432:5595  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_69:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/math/SafeMath.sol\":5518:5525  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/math/SafeMath.sol\":5550:5551  a */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/math/SafeMath.sol\":5545:5546  b */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/math/SafeMath.sol\":5545:5551  b <= a */\n      gt\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/math/SafeMath.sol\":5553:5565  errorMessage */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/math/SafeMath.sol\":5537:5566  require(b <= a, errorMessage) */\n      swap1\n      tag_103\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_104:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_106\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_104)\n    tag_106:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_107\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_107:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_103:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/math/SafeMath.sol\":5587:5588  b */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/math/SafeMath.sol\":5583:5584  a */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/math/SafeMath.sol\":5583:5588  a - b */\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/math/SafeMath.sol\":5576:5588  return a - b */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/math/SafeMath.sol\":5432:5595  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/math/SafeMath.sol\":2690:2865  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_76:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/math/SafeMath.sol\":2748:2755  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/math/SafeMath.sol\":2767:2776  uint256 c */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/math/SafeMath.sol\":2783:2784  b */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/math/SafeMath.sol\":2779:2780  a */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/math/SafeMath.sol\":2779:2784  a + b */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/math/SafeMath.sol\":2767:2784  uint256 c = a + b */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/math/SafeMath.sol\":2807:2808  a */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/math/SafeMath.sol\":2802:2803  c */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/math/SafeMath.sol\":2802:2808  c >= a */\n      lt\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/math/SafeMath.sol\":2794:2840  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_109:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/math/SafeMath.sol\":2857:2858  c */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/math/SafeMath.sol\":2850:2858  return c */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/math/SafeMath.sol\":2690:2865  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":10701:10793  function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { } */\n    tag_99:\n      pop\n      pop\n      pop\n      jump\t// out\n    stop\n    data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f 45524332303a207472616e7366657220746f20746865207a65726f2061646472657373\n    data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029 45524332303a20617070726f766520746f20746865207a65726f2061646472657373\n    data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6 45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330 45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea 45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373\n    data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208 45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373\n    data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8 45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n\n    auxdata: 0xa26469706673582212201c25515793d594d050682504d0d49e37f61c1dbfbec3740ea5fadd0191abf0ba64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506040516200139f3803806200139f833981810160405260408110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b838201915060208201858111156200006f57600080fd5b82518660018202830111640100000000821117156200008d57600080fd5b8083526020830192505050908051906020019080838360005b83811015620000c3578082015181840152602081019050620000a6565b50505050905090810190601f168015620000f15780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200011557600080fd5b838201915060208201858111156200012c57600080fd5b82518660018202830111640100000000821117156200014a57600080fd5b8083526020830192505050908051906020019080838360005b838110156200018057808201518184015260208101905062000163565b50505050905090810190601f168015620001ae5780820380516001836020036101000a031916815260200191505b506040525050508160039080519060200190620001cd9291906200020b565b508060049080519060200190620001e69291906200020b565b506012600560006101000a81548160ff021916908360ff1602179055505050620002b1565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200024e57805160ff19168380011785556200027f565b828001600101855582156200027f579182015b828111156200027e57825182559160200191906001019062000261565b5b5090506200028e919062000292565b5090565b5b80821115620002ad57600081600090555060010162000293565b5090565b6110de80620002c16000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461025857806370a08231146102bc57806395d89b4114610314578063a457c2d714610397578063a9059cbb146103fb578063dd62ed3e1461045f576100a9565b806306fdde03146100ae578063095ea7b31461013157806318160ddd1461019557806323b872dd146101b3578063313ce56714610237575b600080fd5b6100b66104d7565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100f65780820151818401526020810190506100db565b50505050905090810190601f1680156101235780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61017d6004803603604081101561014757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610579565b60405180821515815260200191505060405180910390f35b61019d610597565b6040518082815260200191505060405180910390f35b61021f600480360360608110156101c957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105a1565b60405180821515815260200191505060405180910390f35b61023f61067a565b604051808260ff16815260200191505060405180910390f35b6102a46004803603604081101561026e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610691565b60405180821515815260200191505060405180910390f35b6102fe600480360360208110156102d257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610744565b6040518082815260200191505060405180910390f35b61031c61078c565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561035c578082015181840152602081019050610341565b50505050905090810190601f1680156103895780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6103e3600480360360408110156103ad57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061082e565b60405180821515815260200191505060405180910390f35b6104476004803603604081101561041157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506108fb565b60405180821515815260200191505060405180910390f35b6104c16004803603604081101561047557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610919565b6040518082815260200191505060405180910390f35b606060038054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561056f5780601f106105445761010080835404028352916020019161056f565b820191906000526020600020905b81548152906001019060200180831161055257829003601f168201915b5050505050905090565b600061058d6105866109a0565b84846109a8565b6001905092915050565b6000600254905090565b60006105ae848484610b9f565b61066f846105ba6109a0565b61066a8560405180606001604052806028815260200161101360289139600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006106206109a0565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e609092919063ffffffff16565b6109a8565b600190509392505050565b6000600560009054906101000a900460ff16905090565b600061073a61069e6109a0565b8461073585600160006106af6109a0565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f1a90919063ffffffff16565b6109a8565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108245780601f106107f957610100808354040283529160200191610824565b820191906000526020600020905b81548152906001019060200180831161080757829003601f168201915b5050505050905090565b60006108f161083b6109a0565b846108ec8560405180606001604052806025815260200161108460259139600160006108656109a0565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e609092919063ffffffff16565b6109a8565b6001905092915050565b600061090f6109086109a0565b8484610b9f565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610a2e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806110606024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610ab4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180610fcb6022913960400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610c25576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602581526020018061103b6025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610cab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180610fa86023913960400191505060405180910390fd5b610cb6838383610fa2565b610d2181604051806060016040528060268152602001610fed602691396000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e609092919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610db4816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f1a90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000838311158290610f0d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610ed2578082015181840152602081019050610eb7565b50505050905090810190601f168015610eff5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5082840390509392505050565b600080828401905083811015610f98576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa26469706673582212201c25515793d594d050682504d0d49e37f61c1dbfbec3740ea5fadd0191abf0ba64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x139F CODESIZE SUB DUP1 PUSH3 0x139F DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x40 DUP2 LT ISZERO PUSH3 0x37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x1 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH3 0x8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP3 POP POP POP SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0xC3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0xA6 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0xF1 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE PUSH1 0x20 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x115 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x12C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x1 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH3 0x14A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP3 POP POP POP SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x180 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x163 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0x1AE JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE POP POP POP DUP2 PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x1CD SWAP3 SWAP2 SWAP1 PUSH3 0x20B JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x1E6 SWAP3 SWAP2 SWAP1 PUSH3 0x20B JUMP JUMPDEST POP PUSH1 0x12 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH3 0x2B1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x24E JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x27F JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x27F JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x27E JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x261 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x28E SWAP2 SWAP1 PUSH3 0x292 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x2AD JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x293 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0x10DE DUP1 PUSH3 0x2C1 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x314 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x397 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3FB JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x45F JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x237 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x4D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xDB JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x123 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x147 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x579 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19D PUSH2 0x597 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23F PUSH2 0x67A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x26E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x691 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x744 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31C PUSH2 0x78C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x35C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x341 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x389 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x82E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x447 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x411 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x8FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x475 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x919 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x56F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x544 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x56F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x552 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x58D PUSH2 0x586 PUSH2 0x9A0 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5AE DUP5 DUP5 DUP5 PUSH2 0xB9F JUMP JUMPDEST PUSH2 0x66F DUP5 PUSH2 0x5BA PUSH2 0x9A0 JUMP JUMPDEST PUSH2 0x66A DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1013 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x620 PUSH2 0x9A0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE60 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x73A PUSH2 0x69E PUSH2 0x9A0 JUMP JUMPDEST DUP5 PUSH2 0x735 DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x6AF PUSH2 0x9A0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF1A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x824 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7F9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x824 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x807 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8F1 PUSH2 0x83B PUSH2 0x9A0 JUMP JUMPDEST DUP5 PUSH2 0x8EC DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1084 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0x865 PUSH2 0x9A0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE60 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x90F PUSH2 0x908 PUSH2 0x9A0 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xB9F JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA2E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1060 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xAB4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xFCB PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC25 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x103B PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xCAB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xFA8 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCB6 DUP4 DUP4 DUP4 PUSH2 0xFA2 JUMP JUMPDEST PUSH2 0xD21 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFED PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x0 DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE60 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xDB4 DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF1A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0xF0D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xED2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xEB7 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xEFF JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP3 DUP5 SUB SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xF98 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636545524332303A20747261 PUSH15 0x736665722066726F6D20746865207A PUSH6 0x726F20616464 PUSH19 0x65737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x73582212201C25 MLOAD JUMPI SWAP4 0xD5 SWAP5 0xD0 POP PUSH9 0x2504D0D49E37F61C1D 0xBF 0xBE 0xC3 PUSH21 0xEA5FADD0191ABF0BA64736F6C634300060C003300 ",
							"sourceMap": "1321:9474:3:-:0;;;1958:145;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2040:5;2032;:13;;;;;;;;;;;;:::i;:::-;;2065:7;2055;:17;;;;;;;;;;;;:::i;:::-;;2094:2;2082:9;;:14;;;;;;;;;;;;;;;;;;1958:145;;1321:9474;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461025857806370a08231146102bc57806395d89b4114610314578063a457c2d714610397578063a9059cbb146103fb578063dd62ed3e1461045f576100a9565b806306fdde03146100ae578063095ea7b31461013157806318160ddd1461019557806323b872dd146101b3578063313ce56714610237575b600080fd5b6100b66104d7565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100f65780820151818401526020810190506100db565b50505050905090810190601f1680156101235780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61017d6004803603604081101561014757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610579565b60405180821515815260200191505060405180910390f35b61019d610597565b6040518082815260200191505060405180910390f35b61021f600480360360608110156101c957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105a1565b60405180821515815260200191505060405180910390f35b61023f61067a565b604051808260ff16815260200191505060405180910390f35b6102a46004803603604081101561026e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610691565b60405180821515815260200191505060405180910390f35b6102fe600480360360208110156102d257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610744565b6040518082815260200191505060405180910390f35b61031c61078c565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561035c578082015181840152602081019050610341565b50505050905090810190601f1680156103895780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6103e3600480360360408110156103ad57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061082e565b60405180821515815260200191505060405180910390f35b6104476004803603604081101561041157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506108fb565b60405180821515815260200191505060405180910390f35b6104c16004803603604081101561047557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610919565b6040518082815260200191505060405180910390f35b606060038054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561056f5780601f106105445761010080835404028352916020019161056f565b820191906000526020600020905b81548152906001019060200180831161055257829003601f168201915b5050505050905090565b600061058d6105866109a0565b84846109a8565b6001905092915050565b6000600254905090565b60006105ae848484610b9f565b61066f846105ba6109a0565b61066a8560405180606001604052806028815260200161101360289139600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006106206109a0565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e609092919063ffffffff16565b6109a8565b600190509392505050565b6000600560009054906101000a900460ff16905090565b600061073a61069e6109a0565b8461073585600160006106af6109a0565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f1a90919063ffffffff16565b6109a8565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108245780601f106107f957610100808354040283529160200191610824565b820191906000526020600020905b81548152906001019060200180831161080757829003601f168201915b5050505050905090565b60006108f161083b6109a0565b846108ec8560405180606001604052806025815260200161108460259139600160006108656109a0565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e609092919063ffffffff16565b6109a8565b6001905092915050565b600061090f6109086109a0565b8484610b9f565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610a2e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806110606024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610ab4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180610fcb6022913960400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610c25576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602581526020018061103b6025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610cab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180610fa86023913960400191505060405180910390fd5b610cb6838383610fa2565b610d2181604051806060016040528060268152602001610fed602691396000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e609092919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610db4816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f1a90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000838311158290610f0d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610ed2578082015181840152602081019050610eb7565b50505050905090810190601f168015610eff5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5082840390509392505050565b600080828401905083811015610f98576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa26469706673582212201c25515793d594d050682504d0d49e37f61c1dbfbec3740ea5fadd0191abf0ba64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x314 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x397 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3FB JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x45F JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x237 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x4D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xDB JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x123 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x147 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x579 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19D PUSH2 0x597 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23F PUSH2 0x67A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x26E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x691 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x744 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31C PUSH2 0x78C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x35C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x341 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x389 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x82E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x447 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x411 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x8FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x475 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x919 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x56F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x544 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x56F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x552 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x58D PUSH2 0x586 PUSH2 0x9A0 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5AE DUP5 DUP5 DUP5 PUSH2 0xB9F JUMP JUMPDEST PUSH2 0x66F DUP5 PUSH2 0x5BA PUSH2 0x9A0 JUMP JUMPDEST PUSH2 0x66A DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1013 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x620 PUSH2 0x9A0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE60 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x73A PUSH2 0x69E PUSH2 0x9A0 JUMP JUMPDEST DUP5 PUSH2 0x735 DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x6AF PUSH2 0x9A0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF1A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x824 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7F9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x824 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x807 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8F1 PUSH2 0x83B PUSH2 0x9A0 JUMP JUMPDEST DUP5 PUSH2 0x8EC DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1084 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0x865 PUSH2 0x9A0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE60 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x90F PUSH2 0x908 PUSH2 0x9A0 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xB9F JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA2E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1060 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xAB4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xFCB PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC25 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x103B PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xCAB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xFA8 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCB6 DUP4 DUP4 DUP4 PUSH2 0xFA2 JUMP JUMPDEST PUSH2 0xD21 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFED PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x0 DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE60 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xDB4 DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF1A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0xF0D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xED2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xEB7 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xEFF JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP3 DUP5 SUB SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xF98 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636545524332303A20747261 PUSH15 0x736665722066726F6D20746865207A PUSH6 0x726F20616464 PUSH19 0x65737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x73582212201C25 MLOAD JUMPI SWAP4 0xD5 SWAP5 0xD0 POP PUSH9 0x2504D0D49E37F61C1D 0xBF 0xBE 0xC3 PUSH21 0xEA5FADD0191ABF0BA64736F6C634300060C003300 ",
							"sourceMap": "1321:9474:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2168:89;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4244:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3235:106;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4877:317;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3086:89;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;5589:215;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3399:125;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2370:93;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6291:266;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3727:172;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3957:149;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2168:89;2213:13;2245:5;2238:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2168:89;:::o;4244:166::-;4327:4;4343:39;4352:12;:10;:12::i;:::-;4366:7;4375:6;4343:8;:39::i;:::-;4399:4;4392:11;;4244:166;;;;:::o;3235:106::-;3296:7;3322:12;;3315:19;;3235:106;:::o;4877:317::-;4983:4;4999:36;5009:6;5017:9;5028:6;4999:9;:36::i;:::-;5045:121;5054:6;5062:12;:10;:12::i;:::-;5076:89;5114:6;5076:89;;;;;;;;;;;;;;;;;:11;:19;5088:6;5076:19;;;;;;;;;;;;;;;:33;5096:12;:10;:12::i;:::-;5076:33;;;;;;;;;;;;;;;;:37;;:89;;;;;:::i;:::-;5045:8;:121::i;:::-;5183:4;5176:11;;4877:317;;;;;:::o;3086:89::-;3135:5;3159:9;;;;;;;;;;;3152:16;;3086:89;:::o;5589:215::-;5677:4;5693:83;5702:12;:10;:12::i;:::-;5716:7;5725:50;5764:10;5725:11;:25;5737:12;:10;:12::i;:::-;5725:25;;;;;;;;;;;;;;;:34;5751:7;5725:34;;;;;;;;;;;;;;;;:38;;:50;;;;:::i;:::-;5693:8;:83::i;:::-;5793:4;5786:11;;5589:215;;;;:::o;3399:125::-;3473:7;3499:9;:18;3509:7;3499:18;;;;;;;;;;;;;;;;3492:25;;3399:125;;;:::o;2370:93::-;2417:13;2449:7;2442:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2370:93;:::o;6291:266::-;6384:4;6400:129;6409:12;:10;:12::i;:::-;6423:7;6432:96;6471:15;6432:96;;;;;;;;;;;;;;;;;:11;:25;6444:12;:10;:12::i;:::-;6432:25;;;;;;;;;;;;;;;:34;6458:7;6432:34;;;;;;;;;;;;;;;;:38;;:96;;;;;:::i;:::-;6400:8;:129::i;:::-;6546:4;6539:11;;6291:266;;;;:::o;3727:172::-;3813:4;3829:42;3839:12;:10;:12::i;:::-;3853:9;3864:6;3829:9;:42::i;:::-;3888:4;3881:11;;3727:172;;;;:::o;3957:149::-;4046:7;4072:11;:18;4084:5;4072:18;;;;;;;;;;;;;;;:27;4091:7;4072:27;;;;;;;;;;;;;;;;4065:34;;3957:149;;;;:::o;598:104:7:-;651:15;685:10;678:17;;598:104;:::o;9355:340:3:-;9473:1;9456:19;;:5;:19;;;;9448:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9553:1;9534:21;;:7;:21;;;;9526:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9635:6;9605:11;:18;9617:5;9605:18;;;;;;;;;;;;;;;:27;9624:7;9605:27;;;;;;;;;;;;;;;:36;;;;9672:7;9656:32;;9665:5;9656:32;;;9681:6;9656:32;;;;;;;;;;;;;;;;;;9355:340;;;:::o;7031:530::-;7154:1;7136:20;;:6;:20;;;;7128:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7237:1;7216:23;;:9;:23;;;;7208:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7290:47;7311:6;7319:9;7330:6;7290:20;:47::i;:::-;7368:71;7390:6;7368:71;;;;;;;;;;;;;;;;;:9;:17;7378:6;7368:17;;;;;;;;;;;;;;;;:21;;:71;;;;;:::i;:::-;7348:9;:17;7358:6;7348:17;;;;;;;;;;;;;;;:91;;;;7472:32;7497:6;7472:9;:20;7482:9;7472:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;7449:9;:20;7459:9;7449:20;;;;;;;;;;;;;;;:55;;;;7536:9;7519:35;;7528:6;7519:35;;;7547:6;7519:35;;;;;;;;;;;;;;;;;;7031:530;;;:::o;5432:163:2:-;5518:7;5550:1;5545;:6;;5553:12;5537:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5587:1;5583;:5;5576:12;;5432:163;;;;;:::o;2690:175::-;2748:7;2767:9;2783:1;2779;:5;2767:17;;2807:1;2802;:6;;2794:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2857:1;2850:8;;;2690:175;;;;:::o;10701:92:3:-;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "863600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "1431",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "1218",
								"decimals()": "1144",
								"decreaseAllowance(address,uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "1058",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "15",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_setupDecimals(uint8)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "CODESIZE",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "tag",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "100000000"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "tag",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "tag",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "100000000"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "tag",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "tag",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "tag",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "tag",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "100000000"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "tag",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "tag",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "100000000"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "tag",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "tag",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "tag",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "tag",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2040,
									"end": 2045,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2032,
									"end": 2037,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "tag",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2065,
									"end": 2072,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2062,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "tag",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2094,
									"end": 2096,
									"name": "PUSH",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 2082,
									"end": 2091,
									"name": "PUSH",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 2082,
									"end": 2091,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "PUSH",
									"source": 3,
									"value": "FF"
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "PUSH",
									"source": 3,
									"value": "FF"
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "tag",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DIV",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DIV",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 3,
									"value": "FF"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "tag",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "tag",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "26"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "tag",
									"source": 3,
									"value": "26"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "tag",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "tag",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "tag",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "tag",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "tag",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "tag",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201c25515793d594d050682504d0d49e37f61c1dbfbec3740ea5fadd0191abf0ba64736f6c634300060c0033",
									".code": [
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 3,
											"value": "39509351"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 3,
											"value": "39509351"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 3,
											"value": "70A08231"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 3,
											"value": "95D89B41"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 3,
											"value": "A457C2D7"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 3,
											"value": "A9059CBB"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 3,
											"value": "DD62ED3E"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 3,
											"value": "6FDDE03"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 3,
											"value": "95EA7B3"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 3,
											"value": "18160DDD"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 3,
											"value": "23B872DD"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 3,
											"value": "313CE567"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2213,
											"end": 2226,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2245,
											"end": 2250,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4327,
											"end": 4331,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4343,
											"end": 4382,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 4352,
											"end": 4364,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 4352,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 4352,
											"end": 4364,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4352,
											"end": 4364,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 4352,
											"end": 4364,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4366,
											"end": 4373,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4375,
											"end": 4381,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4343,
											"end": 4351,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 4343,
											"end": 4382,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4343,
											"end": 4382,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 4343,
											"end": 4382,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4399,
											"end": 4403,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4392,
											"end": 4403,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4392,
											"end": 4403,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3303,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3322,
											"end": 3334,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 3322,
											"end": 3334,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3334,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3334,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4983,
											"end": 4987,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4999,
											"end": 5035,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 5009,
											"end": 5015,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5017,
											"end": 5026,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5028,
											"end": 5034,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4999,
											"end": 5008,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 4999,
											"end": 5035,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4999,
											"end": 5035,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 4999,
											"end": 5035,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5045,
											"end": 5166,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 5054,
											"end": 5060,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5062,
											"end": 5074,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 5062,
											"end": 5072,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 5062,
											"end": 5074,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5062,
											"end": 5074,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 5062,
											"end": 5074,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 5114,
											"end": 5120,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH data",
											"source": 3,
											"value": "974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "CODECOPY",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5087,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5088,
											"end": 5094,
											"name": "DUP12",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5096,
											"end": 5108,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 5096,
											"end": 5106,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 5096,
											"end": 5108,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5096,
											"end": 5108,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 5096,
											"end": 5108,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5113,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 5076,
											"end": 5113,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5045,
											"end": 5053,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 5045,
											"end": 5166,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5045,
											"end": 5166,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 5045,
											"end": 5166,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5183,
											"end": 5187,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 5176,
											"end": 5187,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5176,
											"end": 5187,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3135,
											"end": 3140,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3152,
											"end": 3168,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3152,
											"end": 3168,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5677,
											"end": 5681,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5693,
											"end": 5776,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 5702,
											"end": 5714,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 5702,
											"end": 5712,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 5702,
											"end": 5714,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5702,
											"end": 5714,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 5702,
											"end": 5714,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5716,
											"end": 5723,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5775,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 5764,
											"end": 5774,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5736,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5737,
											"end": 5749,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 5737,
											"end": 5747,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 5737,
											"end": 5749,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5737,
											"end": 5749,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 5737,
											"end": 5749,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5751,
											"end": 5758,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5763,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 5725,
											"end": 5763,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5775,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5775,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5775,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5725,
											"end": 5775,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5775,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5725,
											"end": 5775,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 5725,
											"end": 5775,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5693,
											"end": 5701,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 5693,
											"end": 5776,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5693,
											"end": 5776,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 5693,
											"end": 5776,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5793,
											"end": 5797,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 5786,
											"end": 5797,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5786,
											"end": 5797,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3473,
											"end": 3480,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3499,
											"end": 3508,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3509,
											"end": 3516,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3492,
											"end": 3517,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3492,
											"end": 3517,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2417,
											"end": 2430,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2449,
											"end": 2456,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6384,
											"end": 6388,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6400,
											"end": 6529,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 6409,
											"end": 6421,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 6409,
											"end": 6419,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 6409,
											"end": 6421,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6409,
											"end": 6421,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 6409,
											"end": 6421,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6423,
											"end": 6430,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 6471,
											"end": 6486,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH data",
											"source": 3,
											"value": "F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "CODECOPY",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6443,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6444,
											"end": 6456,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 6444,
											"end": 6454,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 6444,
											"end": 6456,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6444,
											"end": 6456,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 6444,
											"end": 6456,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6458,
											"end": 6465,
											"name": "DUP11",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6470,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 6432,
											"end": 6470,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6400,
											"end": 6408,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 6400,
											"end": 6529,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6400,
											"end": 6529,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 6400,
											"end": 6529,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6546,
											"end": 6550,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 6539,
											"end": 6550,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6539,
											"end": 6550,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3813,
											"end": 3817,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 3839,
											"end": 3851,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 3839,
											"end": 3849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 3839,
											"end": 3851,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3839,
											"end": 3851,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 3839,
											"end": 3851,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3853,
											"end": 3862,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3864,
											"end": 3870,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3829,
											"end": 3838,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3888,
											"end": 3892,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3881,
											"end": 3892,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3881,
											"end": 3892,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4046,
											"end": 4053,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4072,
											"end": 4083,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4084,
											"end": 4089,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4098,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4065,
											"end": 4099,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4065,
											"end": 4099,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 598,
											"end": 702,
											"name": "tag",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 598,
											"end": 702,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 651,
											"end": 666,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 685,
											"end": 695,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 678,
											"end": 695,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 678,
											"end": 695,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 598,
											"end": 702,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 598,
											"end": 702,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 9355,
											"end": 9695,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 9355,
											"end": 9695,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9473,
											"end": 9474,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9456,
											"end": 9475,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9456,
											"end": 9475,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9456,
											"end": 9461,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9456,
											"end": 9475,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9456,
											"end": 9475,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9456,
											"end": 9475,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 9456,
											"end": 9475,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH data",
											"source": 3,
											"value": "C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "CODECOPY",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9553,
											"end": 9554,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9534,
											"end": 9555,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9534,
											"end": 9555,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9534,
											"end": 9541,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9534,
											"end": 9555,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9534,
											"end": 9555,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9534,
											"end": 9555,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 9534,
											"end": 9555,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH data",
											"source": 3,
											"value": "24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "CODECOPY",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9635,
											"end": 9641,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 9616,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9617,
											"end": 9622,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9624,
											"end": 9631,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 9641,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 9641,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 9641,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 9605,
											"end": 9641,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9672,
											"end": 9679,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9665,
											"end": 9670,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "PUSH",
											"source": 3,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 9681,
											"end": 9687,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 9355,
											"end": 9695,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9355,
											"end": 9695,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9355,
											"end": 9695,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9355,
											"end": 9695,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7031,
											"end": 7561,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 7031,
											"end": 7561,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7154,
											"end": 7155,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7136,
											"end": 7156,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7136,
											"end": 7156,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7136,
											"end": 7142,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7136,
											"end": 7156,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7136,
											"end": 7156,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7136,
											"end": 7156,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 7136,
											"end": 7156,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH data",
											"source": 3,
											"value": "BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "CODECOPY",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7237,
											"end": 7238,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7216,
											"end": 7239,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7216,
											"end": 7239,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7216,
											"end": 7225,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7216,
											"end": 7239,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7216,
											"end": 7239,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7216,
											"end": 7239,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 7216,
											"end": 7239,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH data",
											"source": 3,
											"value": "557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "CODECOPY",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "tag",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7290,
											"end": 7337,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 7311,
											"end": 7317,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7319,
											"end": 7328,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7330,
											"end": 7336,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7290,
											"end": 7310,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 7290,
											"end": 7337,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7290,
											"end": 7337,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 7290,
											"end": 7337,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 7390,
											"end": 7396,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH data",
											"source": 3,
											"value": "4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "CODECOPY",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7377,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7378,
											"end": 7384,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7389,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 7368,
											"end": 7389,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7348,
											"end": 7357,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7358,
											"end": 7364,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7348,
											"end": 7439,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7348,
											"end": 7439,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7348,
											"end": 7439,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7348,
											"end": 7439,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 7497,
											"end": 7503,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7472,
											"end": 7481,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7482,
											"end": 7491,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7472,
											"end": 7496,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 7472,
											"end": 7496,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7449,
											"end": 7458,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7459,
											"end": 7468,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7449,
											"end": 7504,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7449,
											"end": 7504,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7449,
											"end": 7504,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7449,
											"end": 7504,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7536,
											"end": 7545,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7528,
											"end": 7534,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7547,
											"end": 7553,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 7031,
											"end": 7561,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7031,
											"end": 7561,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7031,
											"end": 7561,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7031,
											"end": 7561,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5525,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5550,
											"end": 5551,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5545,
											"end": 5546,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5545,
											"end": 5551,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 5545,
											"end": 5551,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5553,
											"end": 5565,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5587,
											"end": 5588,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5583,
											"end": 5584,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5583,
											"end": 5588,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5576,
											"end": 5588,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5576,
											"end": 5588,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2748,
											"end": 2755,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2767,
											"end": 2776,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2783,
											"end": 2784,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2779,
											"end": 2780,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2779,
											"end": 2784,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2767,
											"end": 2784,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2767,
											"end": 2784,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2807,
											"end": 2808,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2802,
											"end": 2803,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2802,
											"end": 2808,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2802,
											"end": 2808,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 2,
											"value": "1B"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 2,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2857,
											"end": 2858,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2858,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2858,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2858,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 10701,
											"end": 10793,
											"name": "tag",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 10701,
											"end": 10793,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10701,
											"end": 10793,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10701,
											"end": 10793,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10701,
											"end": 10793,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10701,
											"end": 10793,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										}
									],
									".data": {
										"24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
										"4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
										"974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
										"C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
										"F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f"
									}
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}, initializes {decimals} with a default value of 18. To select a different value for {decimals}, use {_setupDecimals}. All three of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xca0c2396dbeb3503b51abf4248ebf77a1461edad513c01529df51850a012bee3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://991b44ff44e0496e8554a90f4c0512c28faed45104d40430019f3c67ea67740e\",\"dweb:/ipfs/Qmc3nRapVbcctELoZS5qe17zLkFB3bETBfwzCTMF1CSuGE\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 565,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 571,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 573,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 575,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 577,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 579,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_decimals",
								"offset": 0,
								"slot": "5",
								"type": "t_uint8"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/SafeERC20.sol\":616:3720  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/SafeERC20.sol\":616:3720  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220234ff4b8f3d36e2fca2edba9b4936d440367c77a52eada5e1dc218d3b673ae4464736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220234ff4b8f3d36e2fca2edba9b4936d440367c77a52eada5e1dc218d3b673ae4464736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x23 0x4F DELEGATECALL 0xB8 RETURN 0xD3 PUSH15 0x2FCA2EDBA9B4936D440367C77A52EA 0xDA 0x5E SAR 0xC2 XOR 0xD3 0xB6 PUSH20 0xAE4464736F6C634300060C003300000000000000 ",
							"sourceMap": "616:3104:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220234ff4b8f3d36e2fca2edba9b4936d440367c77a52eada5e1dc218d3b673ae4464736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x23 0x4F DELEGATECALL 0xB8 RETURN 0xD3 PUSH15 0x2FCA2EDBA9B4936D440367C77A52EA 0xDA 0x5E SAR 0xC2 XOR 0xD3 0xB6 PUSH20 0xAE4464736F6C634300060C003300000000000000 ",
							"sourceMap": "616:3104:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 616,
									"end": 3720,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "INVALID",
									"source": 5
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220234ff4b8f3d36e2fca2edba9b4936d440367c77a52eada5e1dc218d3b673ae4464736f6c634300060c0033",
									".code": [
										{
											"begin": 616,
											"end": 3720,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 616,
											"end": 3720,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 616,
											"end": 3720,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 616,
											"end": 3720,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 616,
											"end": 3720,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 616,
											"end": 3720,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 616,
											"end": 3720,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 616,
											"end": 3720,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 616,
											"end": 3720,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0xf12dfbe97e6276980b83d2830bb0eb75e0cf4f3e626c2471137f82158ae6a0fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a849c2d95e85463909e5b5c920b13e7a11216ca14127085e16d22b9379d52a\",\"dweb:/ipfs/QmUg3CZDbCCcQdroEpexBy5ZFd5vD1UWijWQq9qHZjtJNQ\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":{\"keccak256\":\"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://256c8c8af5eb072bc473226ab2b2187149b8fc04f5f4a4820db22527f5ce8e3c\",\"dweb:/ipfs/QmRvi5BhnL7Rxf85KrJhwM6RRhukm4tzoctRdgQEheNyiN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":134:7818  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":134:7818  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122086a150bc815069041961b15647571ee4697cea9a6410f41b5af3cb6b9223759264736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122086a150bc815069041961b15647571ee4697cea9a6410f41b5af3cb6b9223759264736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 LOG1 POP 0xBC DUP2 POP PUSH10 0x41961B15647571EE469 PUSH29 0xEA9A6410F41B5AF3CB6B9223759264736F6C634300060C003300000000 ",
							"sourceMap": "134:7684:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122086a150bc815069041961b15647571ee4697cea9a6410f41b5af3cb6b9223759264736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 LOG1 POP 0xBC DUP2 POP PUSH10 0x41961B15647571EE469 PUSH29 0xEA9A6410F41B5AF3CB6B9223759264736F6C634300060C003300000000 ",
							"sourceMap": "134:7684:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "INVALID",
									"source": 6
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122086a150bc815069041961b15647571ee4697cea9a6410f41b5af3cb6b9223759264736f6c634300060c0033",
									".code": [
										{
											"begin": 134,
											"end": 7818,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":{\"keccak256\":\"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://256c8c8af5eb072bc473226ab2b2187149b8fc04f5f4a4820db22527f5ce8e3c\",\"dweb:/ipfs/QmRvi5BhnL7Rxf85KrJhwM6RRhukm4tzoctRdgQEheNyiN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/aave/flashloan-box/blob/master/contracts/aave/FlashLoanReceiverBase.sol": {
				"FlashLoanReceiverBase": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_addressProvider",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_assetAddress",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "LogWithdraw",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "addressesProvider",
							"outputs": [
								{
									"internalType": "contract ILendingPoolAddressesProvider",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_reserve",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_fee",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_params",
									"type": "bytes"
								}
							],
							"name": "executeOperation",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_assetAddress",
									"type": "address"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"withdraw(address)": {
								"details": "Withdraw asset.",
								"params": {
									"_assetAddress": "Asset to be withdrawn."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addressesProvider()": "c72c4d10",
							"executeOperation(address,uint256,uint256,bytes)": "ee872558",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b",
							"withdraw(address)": "51cff8d9"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addressProvider\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_assetAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"LogWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"addressesProvider\",\"outputs\":[{\"internalType\":\"contract ILendingPoolAddressesProvider\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_reserve\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_params\",\"type\":\"bytes\"}],\"name\":\"executeOperation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_assetAddress\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdraw(address)\":{\"details\":\"Withdraw asset.\",\"params\":{\"_assetAddress\":\"Asset to be withdrawn.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/aave/flashloan-box/blob/master/contracts/aave/FlashLoanReceiverBase.sol\":\"FlashLoanReceiverBase\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":{\"keccak256\":\"0x15e2d5bd4c28a88548074c54d220e8086f638a71ed07e6b3ba5a70066fcf458d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90faf5851c02f9bd42c5bfb54d4f0421a2612f50ab80b2c4fa24fa3792071cc2\",\"dweb:/ipfs/QmRGM4F2PcGVF85aTfaA9YBhCHHDqrMhRjyp6fGeBTtirb\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xca0c2396dbeb3503b51abf4248ebf77a1461edad513c01529df51850a012bee3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://991b44ff44e0496e8554a90f4c0512c28faed45104d40430019f3c67ea67740e\",\"dweb:/ipfs/Qmc3nRapVbcctELoZS5qe17zLkFB3bETBfwzCTMF1CSuGE\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0xf12dfbe97e6276980b83d2830bb0eb75e0cf4f3e626c2471137f82158ae6a0fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a849c2d95e85463909e5b5c920b13e7a11216ca14127085e16d22b9379d52a\",\"dweb:/ipfs/QmUg3CZDbCCcQdroEpexBy5ZFd5vD1UWijWQq9qHZjtJNQ\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":{\"keccak256\":\"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://256c8c8af5eb072bc473226ab2b2187149b8fc04f5f4a4820db22527f5ce8e3c\",\"dweb:/ipfs/QmRvi5BhnL7Rxf85KrJhwM6RRhukm4tzoctRdgQEheNyiN\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]},\"https://github.com/aave/flashloan-box/blob/master/contracts/aave/FlashLoanReceiverBase.sol\":{\"keccak256\":\"0x06ade60296cb64d4bf6db0cb17690c374880673f07cb2fa8bd37d28007092368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://537781e9174d569d214fff8d7f43a85aa4b25a1279b3351190e1268c4f56e03a\",\"dweb:/ipfs/QmS6SPgmn35KeiiFFHP9GHUaB248sDRSTSdBZ5YcZipNVo\"]},\"https://github.com/aave/flashloan-box/blob/master/contracts/aave/IFlashLoanReceiver.sol\":{\"keccak256\":\"0xce893aec23c34acdc52e3dc1f9f1ea219fcc8876171197aec6242197dc5417e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1eead516bca0f2f3d397ce38384e667df968889cb22395787676e71a55690b2d\",\"dweb:/ipfs/QmbqU1DG4u8w44siE7Pnpoo5tuWmARRCd41NrxF8v3wV5S\"]},\"https://github.com/aave/flashloan-box/blob/master/contracts/aave/ILendingPoolAddressesProvider.sol\":{\"keccak256\":\"0x6c92630bf2e9c2daed9976ece3b50b46308f37348237264c80dbd1f36e1beeea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b753c322bb0043c79850ac0edea21de0aced423320d2d7911f030c744caa6325\",\"dweb:/ipfs/QmSTDeo9r7oNoBvLndFq7T6MuEzN87yxnAPuri4FcwsYoA\"]},\"https://github.com/aave/flashloan-box/blob/master/contracts/utils/Withdrawable.sol\":{\"keccak256\":\"0x0c88d4a5cb375c848a174dac6d2d739e08e1c20e4807ba48fae34eb4470c1ee3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://32c707fa70815b1eb4b79e633648103f7a383a87524479da252d5cb0d4e4de19\",\"dweb:/ipfs/QmXXVVoDkv513A1A8JHfo5wtD6nLfmukFtZTuopSKEr6FP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 91,
								"contract": "https://github.com/aave/flashloan-box/blob/master/contracts/aave/FlashLoanReceiverBase.sol:FlashLoanReceiverBase",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 1684,
								"contract": "https://github.com/aave/flashloan-box/blob/master/contracts/aave/FlashLoanReceiverBase.sol:FlashLoanReceiverBase",
								"label": "addressesProvider",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(ILendingPoolAddressesProvider)1815"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(ILendingPoolAddressesProvider)1815": {
								"encoding": "inplace",
								"label": "contract ILendingPoolAddressesProvider",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/aave/flashloan-box/blob/master/contracts/aave/IFlashLoanReceiver.sol": {
				"IFlashLoanReceiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_reserve",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_fee",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_params",
									"type": "bytes"
								}
							],
							"name": "executeOperation",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Aave",
						"details": "implement this interface to develop a flashloan-compatible flashLoanReceiver contract*",
						"kind": "dev",
						"methods": {},
						"title": "IFlashLoanReceiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"executeOperation(address,uint256,uint256,bytes)": "ee872558"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_reserve\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_params\",\"type\":\"bytes\"}],\"name\":\"executeOperation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Aave\",\"details\":\"implement this interface to develop a flashloan-compatible flashLoanReceiver contract*\",\"kind\":\"dev\",\"methods\":{},\"title\":\"IFlashLoanReceiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Interface for the Aave fee IFlashLoanReceiver.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/aave/flashloan-box/blob/master/contracts/aave/IFlashLoanReceiver.sol\":\"IFlashLoanReceiver\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/aave/flashloan-box/blob/master/contracts/aave/IFlashLoanReceiver.sol\":{\"keccak256\":\"0xce893aec23c34acdc52e3dc1f9f1ea219fcc8876171197aec6242197dc5417e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1eead516bca0f2f3d397ce38384e667df968889cb22395787676e71a55690b2d\",\"dweb:/ipfs/QmbqU1DG4u8w44siE7Pnpoo5tuWmARRCd41NrxF8v3wV5S\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Interface for the Aave fee IFlashLoanReceiver.",
						"version": 1
					}
				}
			},
			"https://github.com/aave/flashloan-box/blob/master/contracts/aave/ILendingPoolAddressesProvider.sol": {
				"ILendingPoolAddressesProvider": {
					"abi": [
						{
							"inputs": [],
							"name": "getLendingPool",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getLendingPoolCore",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "ILendingPoolAddressesProvider interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getLendingPool()": "0261bf8b",
							"getLendingPoolCore()": "ed6ff760"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getLendingPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLendingPoolCore\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"ILendingPoolAddressesProvider interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"provides the interface to fetch the LendingPoolCore address\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/aave/flashloan-box/blob/master/contracts/aave/ILendingPoolAddressesProvider.sol\":\"ILendingPoolAddressesProvider\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/aave/flashloan-box/blob/master/contracts/aave/ILendingPoolAddressesProvider.sol\":{\"keccak256\":\"0x6c92630bf2e9c2daed9976ece3b50b46308f37348237264c80dbd1f36e1beeea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b753c322bb0043c79850ac0edea21de0aced423320d2d7911f030c744caa6325\",\"dweb:/ipfs/QmSTDeo9r7oNoBvLndFq7T6MuEzN87yxnAPuri4FcwsYoA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "provides the interface to fetch the LendingPoolCore address",
						"version": 1
					}
				}
			},
			"https://github.com/aave/flashloan-box/blob/master/contracts/utils/Withdrawable.sol": {
				"Withdrawable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_assetAddress",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "LogWithdraw",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_assetAddress",
									"type": "address"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"withdraw(address)": {
								"details": "Withdraw asset.",
								"params": {
									"_assetAddress": "Asset to be withdrawn."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/aave/flashloan-box/blob/master/contracts/utils/Withdrawable.sol\":712:1585  contract Withdrawable is Ownable {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":884:901  address msgSender */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":904:916  _msgSender() */\n  tag_4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":904:914  _msgSender */\n  shl(0x20, tag_5)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":904:916  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_4:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":884:916  address msgSender = _msgSender() */\n  swap1\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":935:944  msgSender */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":926:932  _owner */\n  0x00\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":926:944  _owner = msgSender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":992:1001  msgSender */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":959:1002  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":988:989  0 */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":959:1002  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":850:1009  constructor () internal {... */\n  pop\n    /* \"https://github.com/aave/flashloan-box/blob/master/contracts/utils/Withdrawable.sol\":712:1585  contract Withdrawable is Ownable {... */\n  jump(tag_6)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Context.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\ntag_5:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Context.sol\":651:666  address payable */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Context.sol\":685:695  msg.sender */\n  caller\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Context.sol\":678:695  return msg.sender */\n  swap1\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Context.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\n  swap1\n  jump\t// out\n    /* \"https://github.com/aave/flashloan-box/blob/master/contracts/utils/Withdrawable.sol\":712:1585  contract Withdrawable is Ownable {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/utils/Withdrawable.sol\":712:1585  contract Withdrawable is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x51cff8d9\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/utils/Withdrawable.sol\":1040:1583  function withdraw(address _assetAddress) public onlyOwner {... */\n    tag_3:\n      tag_7\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_8\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_8:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_9\n      jump\t// in\n    tag_7:\n      stop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":1717:1862  function renounceOwnership() public virtual onlyOwner {... */\n    tag_4:\n      tag_10\n      tag_11\n      jump\t// in\n    tag_10:\n      stop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":1085:1170  function owner() public view virtual returns (address) {... */\n    tag_5:\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":2011:2251  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_6:\n      tag_14\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_16\n      jump\t// in\n    tag_14:\n      stop\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/utils/Withdrawable.sol\":1040:1583  function withdraw(address _assetAddress) public onlyOwner {... */\n    tag_9:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":1308:1320  _msgSender() */\n      tag_18\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":1308:1318  _msgSender */\n      tag_19\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":1308:1320  _msgSender() */\n      jump\t// in\n    tag_18:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":1297:1320  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":1297:1304  owner() */\n      tag_20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":1297:1302  owner */\n      tag_13\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":1297:1304  owner() */\n      jump\t// in\n    tag_20:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":1297:1320  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":1289:1357  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_21\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_21:\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/utils/Withdrawable.sol\":1108:1125  uint assetBalance */\n      0x00\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/utils/Withdrawable.sol\":815:816  0 */\n      dup1\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/utils/Withdrawable.sol\":1139:1161  _assetAddress == ETHER */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/utils/Withdrawable.sol\":1139:1152  _assetAddress */\n      dup3\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/utils/Withdrawable.sol\":1139:1161  _assetAddress == ETHER */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/utils/Withdrawable.sol\":1135:1510  if (_assetAddress == ETHER) {... */\n      iszero\n      tag_23\n      jumpi\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/utils/Withdrawable.sol\":1177:1189  address self */\n      0x00\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/utils/Withdrawable.sol\":1200:1204  this */\n      address\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/utils/Withdrawable.sol\":1177:1205  address self = address(this) */\n      swap1\n      pop\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/utils/Withdrawable.sol\":1276:1280  self */\n      dup1\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/utils/Withdrawable.sol\":1276:1288  self.balance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      balance\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/utils/Withdrawable.sol\":1261:1288  assetBalance = self.balance */\n      swap2\n      pop\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/utils/Withdrawable.sol\":1302:1312  msg.sender */\n      caller\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/utils/Withdrawable.sol\":1302:1321  msg.sender.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/utils/Withdrawable.sol\":1302:1335  msg.sender.transfer(assetBalance) */\n      0x08fc\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/utils/Withdrawable.sol\":1322:1334  assetBalance */\n      dup4\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/utils/Withdrawable.sol\":1302:1335  msg.sender.transfer(assetBalance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_25\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_25:\n      pop\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/utils/Withdrawable.sol\":1135:1510  if (_assetAddress == ETHER) {... */\n      pop\n      jump(tag_26)\n    tag_23:\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/utils/Withdrawable.sol\":1387:1400  _assetAddress */\n      dup2\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/utils/Withdrawable.sol\":1381:1411  ERC20(_assetAddress).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/utils/Withdrawable.sol\":1420:1424  this */\n      address\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/utils/Withdrawable.sol\":1381:1426  ERC20(_assetAddress).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_29\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_29:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/utils/Withdrawable.sol\":1366:1426  assetBalance = ERC20(_assetAddress).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/utils/Withdrawable.sol\":1440:1499  ERC20(_assetAddress).safeTransfer(msg.sender, assetBalance) */\n      tag_31\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/utils/Withdrawable.sol\":1474:1484  msg.sender */\n      caller\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/utils/Withdrawable.sol\":1486:1498  assetBalance */\n      dup3\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/utils/Withdrawable.sol\":1446:1459  _assetAddress */\n      dup5\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/utils/Withdrawable.sol\":1440:1473  ERC20(_assetAddress).safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_32\n      swap1\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/utils/Withdrawable.sol\":1440:1499  ERC20(_assetAddress).safeTransfer(msg.sender, assetBalance) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_31:\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/utils/Withdrawable.sol\":1135:1510  if (_assetAddress == ETHER) {... */\n    tag_26:\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/utils/Withdrawable.sol\":1548:1561  _assetAddress */\n      dup2\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/utils/Withdrawable.sol\":1524:1576  LogWithdraw(msg.sender, _assetAddress, assetBalance) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/utils/Withdrawable.sol\":1536:1546  msg.sender */\n      caller\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/utils/Withdrawable.sol\":1524:1576  LogWithdraw(msg.sender, _assetAddress, assetBalance) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x9207361cc2a04b9c7a06691df1eb87c6a63957ae88bf01d0d18c81e3d1272099\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/utils/Withdrawable.sol\":1563:1575  assetBalance */\n      dup4\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/utils/Withdrawable.sol\":1524:1576  LogWithdraw(msg.sender, _assetAddress, assetBalance) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":1367:1368  _ */\n      pop\n        /* \"https://github.com/aave/flashloan-box/blob/master/contracts/utils/Withdrawable.sol\":1040:1583  function withdraw(address _assetAddress) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":1717:1862  function renounceOwnership() public virtual onlyOwner {... */\n    tag_11:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":1308:1320  _msgSender() */\n      tag_34\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":1308:1318  _msgSender */\n      tag_19\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":1308:1320  _msgSender() */\n      jump\t// in\n    tag_34:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":1297:1320  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":1297:1304  owner() */\n      tag_35\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":1297:1302  owner */\n      tag_13\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":1297:1304  owner() */\n      jump\t// in\n    tag_35:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":1297:1320  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":1289:1357  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_36\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_36:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":1823:1824  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":1786:1826  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":1807:1813  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":1786:1826  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":1853:1854  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":1836:1842  _owner */\n      dup1\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":1836:1855  _owner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":1717:1862  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":1085:1170  function owner() public view virtual returns (address) {... */\n    tag_13:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":1131:1138  address */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":1157:1163  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":1150:1163  return _owner */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":1085:1170  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":2011:2251  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_16:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":1308:1320  _msgSender() */\n      tag_40\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":1308:1318  _msgSender */\n      tag_19\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":1308:1320  _msgSender() */\n      jump\t// in\n    tag_40:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":1297:1320  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":1297:1304  owner() */\n      tag_41\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":1297:1302  owner */\n      tag_13\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":1297:1304  owner() */\n      jump\t// in\n    tag_41:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":1297:1320  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":1289:1357  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_42\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_42:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":2119:2120  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":2099:2121  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":2099:2107  newOwner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":2099:2121  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":2091:2164  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_44\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_44:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":2208:2216  newOwner */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":2179:2217  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":2200:2206  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":2179:2217  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":2236:2244  newOwner */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":2227:2233  _owner */\n      0x00\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":2227:2244  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":2011:2251  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Context.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\n    tag_19:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Context.sol\":651:666  address payable */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Context.sol\":685:695  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Context.sol\":678:695  return msg.sender */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Context.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/SafeERC20.sol\":704:879  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_32:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/SafeERC20.sol\":786:872  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_47\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/SafeERC20.sol\":806:811  token */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/SafeERC20.sol\":836:859  token.transfer.selector */\n      shl(0xe0, 0xa9059cbb)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/SafeERC20.sol\":861:863  to */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/SafeERC20.sol\":865:870  value */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/SafeERC20.sol\":813:871  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      add(0x24, mload(0x40))\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/SafeERC20.sol\":786:805  _callOptionalReturn */\n      tag_48\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/SafeERC20.sol\":786:872  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n    tag_47:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/SafeERC20.sol\":704:879  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/SafeERC20.sol\":2967:3718  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_48:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/SafeERC20.sol\":3386:3409  bytes memory returndata */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/SafeERC20.sol\":3412:3481  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_50\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/SafeERC20.sol\":3440:3444  data */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/SafeERC20.sol\":3412:3481  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/SafeERC20.sol\":3420:3425  token */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/SafeERC20.sol\":3412:3439  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_51\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/SafeERC20.sol\":3412:3481  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_50:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/SafeERC20.sol\":3386:3481  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/SafeERC20.sol\":3515:3516  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/SafeERC20.sol\":3495:3505  returndata */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/SafeERC20.sol\":3495:3512  returndata.length */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/SafeERC20.sol\":3495:3516  returndata.length > 0 */\n      gt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/SafeERC20.sol\":3491:3712  if (returndata.length > 0) { // Return data is optional... */\n      iszero\n      tag_52\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/SafeERC20.sol\":3635:3645  returndata */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/SafeERC20.sol\":3624:3654  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      0x20\n      dup2\n      lt\n      iszero\n      tag_53\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_53:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/SafeERC20.sol\":3616:3701  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_54\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd\n      0x2a\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_54:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/SafeERC20.sol\":3491:3712  if (returndata.length > 0) { // Return data is optional... */\n    tag_52:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/SafeERC20.sol\":2967:3718  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":3581:3774  function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {... */\n    tag_51:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":3684:3696  bytes memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":3715:3767  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_56\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":3737:3743  target */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":3745:3749  data */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":3751:3752  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":3754:3766  errorMessage */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":3715:3736  functionCallWithValue */\n      tag_57\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":3715:3767  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_56:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":3708:3767  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":3581:3774  function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":4608:5131  function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {... */\n    tag_57:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":4735:4747  bytes memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":4792:4797  value */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":4767:4788  address(this).balance */\n      selfbalance\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":4767:4797  address(this).balance >= value */\n      lt\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":4759:4840  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_59\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_59:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":4858:4876  isContract(target) */\n      tag_60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":4869:4875  target */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":4858:4868  isContract */\n      tag_61\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":4858:4876  isContract(target) */\n      jump\t// in\n    tag_60:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":4850:4910  require(isContract(target), \"Address: call to non-contract\") */\n      tag_62\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1d\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_62:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":4981:4993  bool success */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":4995:5018  bytes memory returndata */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":5022:5028  target */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":5022:5033  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":5042:5047  value */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":5050:5054  data */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":5022:5055  target.call{ value: value }(data) */\n      mload(0x40)\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n    tag_63:\n      0x20\n      dup4\n      lt\n      tag_65\n      jumpi\n      dup1\n      mload\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      swap2\n      pop\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      0x20\n      dup4\n      sub\n      swap3\n      pop\n      jump(tag_63)\n    tag_65:\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      dup1\n      not\n      dup3\n      mload\n      and\n      dup2\n      dup5\n      mload\n      and\n      dup1\n      dup3\n      or\n      dup6\n      mstore\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_68\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_67)\n    tag_68:\n      0x60\n      swap2\n      pop\n    tag_67:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":4980:5055  (bool success, bytes memory returndata) = target.call{ value: value }(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":5072:5124  _verifyCallResult(success, returndata, errorMessage) */\n      tag_69\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":5090:5097  success */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":5099:5109  returndata */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":5111:5123  errorMessage */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":5072:5089  _verifyCallResult */\n      tag_70\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":5072:5124  _verifyCallResult(success, returndata, errorMessage) */\n      jump\t// in\n    tag_69:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":5065:5124  return _verifyCallResult(success, returndata, errorMessage) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":4608:5131  function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":726:1139  function isContract(address account) internal view returns (bool) {... */\n    tag_61:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":786:790  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":989:1001  uint256 size */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":1098:1105  account */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":1086:1106  extcodesize(account) */\n      extcodesize\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":1078:1106  size := extcodesize(account) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":1131:1132  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":1124:1128  size */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":1124:1132  size > 0 */\n      gt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":1117:1132  return size > 0 */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":726:1139  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":7091:7816  function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {... */\n    tag_70:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":7206:7218  bytes memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":7234:7241  success */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":7230:7810  if (success) {... */\n      iszero\n      tag_73\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":7264:7274  returndata */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":7257:7274  return returndata */\n      swap1\n      pop\n      jump(tag_72)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":7230:7810  if (success) {... */\n    tag_73:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":7395:7396  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":7375:7385  returndata */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":7375:7392  returndata.length */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":7375:7396  returndata.length > 0 */\n      gt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":7371:7800  if (returndata.length > 0) {... */\n      iszero\n      tag_75\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":7633:7643  returndata */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":7627:7644  mload(returndata) */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":7693:7708  returndata_size */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":7680:7690  returndata */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":7676:7678  32 */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":7672:7691  add(32, returndata) */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":7665:7709  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":7582:7727  {... */\n    tag_75:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":7772:7784  errorMessage */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":7765:7785  revert(errorMessage) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_77:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_79\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_77)\n    tag_79:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_80\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_80:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":7091:7816  function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {... */\n    tag_72:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n    stop\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c 416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c\n    data_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd 5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564\n\n    auxdata: 0xa26469706673582212206a67255754b0f80b86dcd3390416dd2a5ebfe47b9648c59de75864186fbd7fb764736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060006100216100c460201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3506100cc565b600033905090565b610c0e806100db6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806351cff8d914610051578063715018a6146100955780638da5cb5b1461009f578063f2fde38b146100d3575b600080fd5b6100936004803603602081101561006757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610117565b005b61009d6103a1565b005b6100a761050e565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610115600480360360208110156100e957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610537565b005b61011f610729565b73ffffffffffffffffffffffffffffffffffffffff1661013d61050e565b73ffffffffffffffffffffffffffffffffffffffff16146101c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156102685760003090508073ffffffffffffffffffffffffffffffffffffffff163191503373ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050158015610261573d6000803e3d6000fd5b5050610338565b8173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156102cf57600080fd5b505afa1580156102e3573d6000803e3d6000fd5b505050506040513d60208110156102f957600080fd5b8101908080519060200190929190505050905061033733828473ffffffffffffffffffffffffffffffffffffffff166107319092919063ffffffff16565b5b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f9207361cc2a04b9c7a06691df1eb87c6a63957ae88bf01d0d18c81e3d1272099836040518082815260200191505060405180910390a35050565b6103a9610729565b73ffffffffffffffffffffffffffffffffffffffff166103c761050e565b73ffffffffffffffffffffffffffffffffffffffff1614610450576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61053f610729565b73ffffffffffffffffffffffffffffffffffffffff1661055d61050e565b73ffffffffffffffffffffffffffffffffffffffff16146105e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561066c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180610b636026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b6107ce8363a9059cbb60e01b8484604051602401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506107d3565b505050565b6060610835826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166108c29092919063ffffffff16565b90506000815111156108bd5780806020019051602081101561085657600080fd5b81019080805190602001909291905050506108bc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180610baf602a913960400191505060405180910390fd5b5b505050565b60606108d184846000856108da565b90509392505050565b606082471015610935576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180610b896026913960400191505060405180910390fd5b61093e85610a83565b6109b0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000081525060200191505060405180910390fd5b600060608673ffffffffffffffffffffffffffffffffffffffff1685876040518082805190602001908083835b60208310610a0057805182526020820191506020810190506020830392506109dd565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114610a62576040519150601f19603f3d011682016040523d82523d6000602084013e610a67565b606091505b5091509150610a77828286610a96565b92505050949350505050565b600080823b905060008111915050919050565b60608315610aa657829050610b5b565b600083511115610ab95782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610b20578082015181840152602081019050610b05565b50505050905090810190601f168015610b4d5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b939250505056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a26469706673582212206a67255754b0f80b86dcd3390416dd2a5ebfe47b9648c59de75864186fbd7fb764736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH2 0x21 PUSH2 0xC4 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH2 0xCC JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xC0E DUP1 PUSH2 0xDB PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x51CFF8D9 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xD3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x93 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x117 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9D PUSH2 0x3A1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA7 PUSH2 0x50E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x115 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x537 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11F PUSH2 0x729 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x13D PUSH2 0x50E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1C6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x268 JUMPI PUSH1 0x0 ADDRESS SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE SWAP2 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP4 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x261 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH2 0x338 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2E3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH2 0x337 CALLER DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x731 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9207361CC2A04B9C7A06691DF1EB87C6A63957AE88BF01D0D18C81E3D1272099 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x3A9 PUSH2 0x729 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3C7 PUSH2 0x50E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x450 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x53F PUSH2 0x729 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x55D PUSH2 0x50E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5E6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x66C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xB63 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7CE DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x7D3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x835 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8C2 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x8BD JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x856 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x8BC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xBAF PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x8D1 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x8DA JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x935 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xB89 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x93E DUP6 PUSH2 0xA83 JUMP JUMPDEST PUSH2 0x9B0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0xA00 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x9DD JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xA62 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xA67 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0xA77 DUP3 DUP3 DUP7 PUSH2 0xA96 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0xAA6 JUMPI DUP3 SWAP1 POP PUSH2 0xB5B JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0xAB9 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xB20 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xB05 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xB4D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F2061646472657373416464726573733A20696E7375666669 PUSH4 0x69656E74 KECCAK256 PUSH3 0x616C61 PUSH15 0x636520666F722063616C6C53616665 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x756363656564A26469706673582212206A672557 SLOAD 0xB0 0xF8 SIGNEXTEND DUP7 0xDC 0xD3 CODECOPY DIV AND 0xDD 0x2A 0x5E 0xBF 0xE4 PUSH28 0x9648C59DE75864186FBD7FB764736F6C634300060C00330000000000 ",
							"sourceMap": "712:873:11:-:0;;;;;;;;;;;;;884:17:1;904:12;:10;;;:12;;:::i;:::-;884:32;;935:9;926:6;;:18;;;;;;;;;;;;;;;;;;992:9;959:43;;988:1;959:43;;;;;;;;;;;;850:159;712:873:11;;598:104:7;651:15;685:10;678:17;;598:104;:::o;712:873:11:-;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061004c5760003560e01c806351cff8d914610051578063715018a6146100955780638da5cb5b1461009f578063f2fde38b146100d3575b600080fd5b6100936004803603602081101561006757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610117565b005b61009d6103a1565b005b6100a761050e565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610115600480360360208110156100e957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610537565b005b61011f610729565b73ffffffffffffffffffffffffffffffffffffffff1661013d61050e565b73ffffffffffffffffffffffffffffffffffffffff16146101c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156102685760003090508073ffffffffffffffffffffffffffffffffffffffff163191503373ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050158015610261573d6000803e3d6000fd5b5050610338565b8173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156102cf57600080fd5b505afa1580156102e3573d6000803e3d6000fd5b505050506040513d60208110156102f957600080fd5b8101908080519060200190929190505050905061033733828473ffffffffffffffffffffffffffffffffffffffff166107319092919063ffffffff16565b5b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f9207361cc2a04b9c7a06691df1eb87c6a63957ae88bf01d0d18c81e3d1272099836040518082815260200191505060405180910390a35050565b6103a9610729565b73ffffffffffffffffffffffffffffffffffffffff166103c761050e565b73ffffffffffffffffffffffffffffffffffffffff1614610450576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61053f610729565b73ffffffffffffffffffffffffffffffffffffffff1661055d61050e565b73ffffffffffffffffffffffffffffffffffffffff16146105e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561066c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180610b636026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b6107ce8363a9059cbb60e01b8484604051602401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506107d3565b505050565b6060610835826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166108c29092919063ffffffff16565b90506000815111156108bd5780806020019051602081101561085657600080fd5b81019080805190602001909291905050506108bc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180610baf602a913960400191505060405180910390fd5b5b505050565b60606108d184846000856108da565b90509392505050565b606082471015610935576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180610b896026913960400191505060405180910390fd5b61093e85610a83565b6109b0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000081525060200191505060405180910390fd5b600060608673ffffffffffffffffffffffffffffffffffffffff1685876040518082805190602001908083835b60208310610a0057805182526020820191506020810190506020830392506109dd565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114610a62576040519150601f19603f3d011682016040523d82523d6000602084013e610a67565b606091505b5091509150610a77828286610a96565b92505050949350505050565b600080823b905060008111915050919050565b60608315610aa657829050610b5b565b600083511115610ab95782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610b20578082015181840152602081019050610b05565b50505050905090810190601f168015610b4d5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b939250505056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a26469706673582212206a67255754b0f80b86dcd3390416dd2a5ebfe47b9648c59de75864186fbd7fb764736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x51CFF8D9 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xD3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x93 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x117 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9D PUSH2 0x3A1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA7 PUSH2 0x50E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x115 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x537 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11F PUSH2 0x729 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x13D PUSH2 0x50E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1C6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x268 JUMPI PUSH1 0x0 ADDRESS SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE SWAP2 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP4 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x261 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH2 0x338 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2E3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH2 0x337 CALLER DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x731 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9207361CC2A04B9C7A06691DF1EB87C6A63957AE88BF01D0D18C81E3D1272099 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x3A9 PUSH2 0x729 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3C7 PUSH2 0x50E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x450 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x53F PUSH2 0x729 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x55D PUSH2 0x50E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5E6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x66C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xB63 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7CE DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x7D3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x835 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8C2 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x8BD JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x856 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x8BC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xBAF PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x8D1 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x8DA JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x935 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xB89 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x93E DUP6 PUSH2 0xA83 JUMP JUMPDEST PUSH2 0x9B0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0xA00 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x9DD JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xA62 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xA67 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0xA77 DUP3 DUP3 DUP7 PUSH2 0xA96 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0xAA6 JUMPI DUP3 SWAP1 POP PUSH2 0xB5B JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0xAB9 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xB20 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xB05 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xB4D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F2061646472657373416464726573733A20696E7375666669 PUSH4 0x69656E74 KECCAK256 PUSH3 0x616C61 PUSH15 0x636520666F722063616C6C53616665 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x756363656564A26469706673582212206A672557 SLOAD 0xB0 0xF8 SIGNEXTEND DUP7 0xDC 0xD3 CODECOPY DIV AND 0xDD 0x2A 0x5E 0xBF 0xE4 PUSH28 0x9648C59DE75864186FBD7FB764736F6C634300060C00330000000000 ",
							"sourceMap": "712:873:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1040:543;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1717:145:1;;;:::i;:::-;;1085:85;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;2011:240;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1040:543:11;1308:12:1;:10;:12::i;:::-;1297:23;;:7;:5;:7::i;:::-;:23;;;1289:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1108:17:11::1;815:1:::0;1139:22:::1;;:13;:22;;;1135:375;;;1177:12;1200:4;1177:28;;1276:4;:12;;;1261:27;;1302:10;:19;;:33;1322:12;1302:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;1135:375;;;;1387:13;1381:30;;;1420:4;1381:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;1366:60;;1440:59;1474:10;1486:12;1446:13;1440:33;;;;:59;;;;;:::i;:::-;1135:375;1548:13;1524:52;;1536:10;1524:52;;;1563:12;1524:52;;;;;;;;;;;;;;;;;;1367:1:1;1040:543:11::0;:::o;1717:145:1:-;1308:12;:10;:12::i;:::-;1297:23;;:7;:5;:7::i;:::-;:23;;;1289:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1823:1:::1;1786:40;;1807:6;::::0;::::1;;;;;;;;1786:40;;;;;;;;;;;;1853:1;1836:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;1717:145::o:0;1085:85::-;1131:7;1157:6;;;;;;;;;;;1150:13;;1085:85;:::o;2011:240::-;1308:12;:10;:12::i;:::-;1297:23;;:7;:5;:7::i;:::-;:23;;;1289:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2119:1:::1;2099:22;;:8;:22;;;;2091:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2208:8;2179:38;;2200:6;::::0;::::1;;;;;;;;2179:38;;;;;;;;;;;;2236:8;2227:6;::::0;:17:::1;;;;;;;;;;;;;;;;;;2011:240:::0;:::o;598:104:7:-;651:15;685:10;678:17;;598:104;:::o;704:175:5:-;786:86;806:5;836:23;;;861:2;865:5;813:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;786:19;:86::i;:::-;704:175;;;:::o;2967:751::-;3386:23;3412:69;3440:4;3412:69;;;;;;;;;;;;;;;;;3420:5;3412:27;;;;:69;;;;;:::i;:::-;3386:95;;3515:1;3495:10;:17;:21;3491:221;;;3635:10;3624:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3616:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3491:221;2967:751;;;:::o;3581:193:6:-;3684:12;3715:52;3737:6;3745:4;3751:1;3754:12;3715:21;:52::i;:::-;3708:59;;3581:193;;;;;:::o;4608:523::-;4735:12;4792:5;4767:21;:30;;4759:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4858:18;4869:6;4858:10;:18::i;:::-;4850:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4981:12;4995:23;5022:6;:11;;5042:5;5050:4;5022:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4980:75;;;;5072:52;5090:7;5099:10;5111:12;5072:17;:52::i;:::-;5065:59;;;;4608:523;;;;;;:::o;726:413::-;786:4;989:12;1098:7;1086:20;1078:28;;1131:1;1124:4;:8;1117:15;;;726:413;;;:::o;7091:725::-;7206:12;7234:7;7230:580;;;7264:10;7257:17;;;;7230:580;7395:1;7375:10;:17;:21;7371:429;;;7633:10;7627:17;7693:15;7680:10;7676:2;7672:19;7665:44;7582:145;7772:12;7765:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7091:725;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "617200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"owner()": "1077",
								"renounceOwnership()": "24329",
								"transferOwnership(address)": "infinite",
								"withdraw(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 712,
									"end": 1585,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 712,
									"end": 1585,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 712,
									"end": 1585,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 712,
									"end": 1585,
									"name": "CALLVALUE",
									"source": 11
								},
								{
									"begin": 712,
									"end": 1585,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 712,
									"end": 1585,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 712,
									"end": 1585,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 712,
									"end": 1585,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 712,
									"end": 1585,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 712,
									"end": 1585,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 712,
									"end": 1585,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 712,
									"end": 1585,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 712,
									"end": 1585,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 712,
									"end": 1585,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 884,
									"end": 901,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 904,
									"end": 916,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 904,
									"end": 914,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 904,
									"end": 914,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 904,
									"end": 914,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 904,
									"end": 916,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 904,
									"end": 916,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 904,
									"end": 916,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 904,
									"end": 916,
									"name": "tag",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 904,
									"end": 916,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 884,
									"end": 916,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 884,
									"end": 916,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 935,
									"end": 944,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 926,
									"end": 932,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 932,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 926,
									"end": 944,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 926,
									"end": 944,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 926,
									"end": 944,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 926,
									"end": 944,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 926,
									"end": 944,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 926,
									"end": 944,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 926,
									"end": 944,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 926,
									"end": 944,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 926,
									"end": 944,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 926,
									"end": 944,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 926,
									"end": 944,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 926,
									"end": 944,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 926,
									"end": 944,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 926,
									"end": 944,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 926,
									"end": 944,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 992,
									"end": 1001,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 959,
									"end": 1002,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 959,
									"end": 1002,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 988,
									"end": 989,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 959,
									"end": 1002,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 959,
									"end": 1002,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 959,
									"end": 1002,
									"name": "PUSH",
									"source": 1,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 959,
									"end": 1002,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 959,
									"end": 1002,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 959,
									"end": 1002,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 959,
									"end": 1002,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 959,
									"end": 1002,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 959,
									"end": 1002,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 959,
									"end": 1002,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 959,
									"end": 1002,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 959,
									"end": 1002,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 850,
									"end": 1009,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 712,
									"end": 1585,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "6"
								},
								{
									"begin": 712,
									"end": 1585,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 598,
									"end": 702,
									"name": "tag",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 598,
									"end": 702,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 651,
									"end": 666,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 685,
									"end": 695,
									"name": "CALLER",
									"source": 7
								},
								{
									"begin": 678,
									"end": 695,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 678,
									"end": 695,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 598,
									"end": 702,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 598,
									"end": 702,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 712,
									"end": 1585,
									"name": "tag",
									"source": 11,
									"value": "6"
								},
								{
									"begin": 712,
									"end": 1585,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 712,
									"end": 1585,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 712,
									"end": 1585,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 712,
									"end": 1585,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 712,
									"end": 1585,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 712,
									"end": 1585,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 712,
									"end": 1585,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 712,
									"end": 1585,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206a67255754b0f80b86dcd3390416dd2a5ebfe47b9648c59de75864186fbd7fb764736f6c634300060c0033",
									".code": [
										{
											"begin": 712,
											"end": 1585,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 712,
											"end": 1585,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 712,
											"end": 1585,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 712,
											"end": 1585,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 712,
											"end": 1585,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 712,
											"end": 1585,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 712,
											"end": 1585,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 712,
											"end": 1585,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 712,
											"end": 1585,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 712,
											"end": 1585,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 712,
											"end": 1585,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 712,
											"end": 1585,
											"name": "tag",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 712,
											"end": 1585,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 712,
											"end": 1585,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 712,
											"end": 1585,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 712,
											"end": 1585,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 712,
											"end": 1585,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 712,
											"end": 1585,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 712,
											"end": 1585,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 712,
											"end": 1585,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 712,
											"end": 1585,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 712,
											"end": 1585,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 712,
											"end": 1585,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 712,
											"end": 1585,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 712,
											"end": 1585,
											"name": "PUSH",
											"source": 11,
											"value": "51CFF8D9"
										},
										{
											"begin": 712,
											"end": 1585,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 712,
											"end": 1585,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 712,
											"end": 1585,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 712,
											"end": 1585,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 712,
											"end": 1585,
											"name": "PUSH",
											"source": 11,
											"value": "715018A6"
										},
										{
											"begin": 712,
											"end": 1585,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 712,
											"end": 1585,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 712,
											"end": 1585,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 712,
											"end": 1585,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 712,
											"end": 1585,
											"name": "PUSH",
											"source": 11,
											"value": "8DA5CB5B"
										},
										{
											"begin": 712,
											"end": 1585,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 712,
											"end": 1585,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 712,
											"end": 1585,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 712,
											"end": 1585,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 712,
											"end": 1585,
											"name": "PUSH",
											"source": 11,
											"value": "F2FDE38B"
										},
										{
											"begin": 712,
											"end": 1585,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 712,
											"end": 1585,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 712,
											"end": 1585,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 712,
											"end": 1585,
											"name": "tag",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 712,
											"end": 1585,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 712,
											"end": 1585,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 712,
											"end": 1585,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 712,
											"end": 1585,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1040,
											"end": 1583,
											"name": "tag",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 1040,
											"end": 1583,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1040,
											"end": 1583,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 1040,
											"end": 1583,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1040,
											"end": 1583,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1040,
											"end": 1583,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 1040,
											"end": 1583,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1040,
											"end": 1583,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1040,
											"end": 1583,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1040,
											"end": 1583,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 1040,
											"end": 1583,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1040,
											"end": 1583,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 1040,
											"end": 1583,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1040,
											"end": 1583,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1040,
											"end": 1583,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1040,
											"end": 1583,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1040,
											"end": 1583,
											"name": "tag",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 1040,
											"end": 1583,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1040,
											"end": 1583,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1040,
											"end": 1583,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1040,
											"end": 1583,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1040,
											"end": 1583,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1040,
											"end": 1583,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1040,
											"end": 1583,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 1040,
											"end": 1583,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1040,
											"end": 1583,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1040,
											"end": 1583,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1040,
											"end": 1583,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1040,
											"end": 1583,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1040,
											"end": 1583,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1040,
											"end": 1583,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1040,
											"end": 1583,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1040,
											"end": 1583,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1040,
											"end": 1583,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1040,
											"end": 1583,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1040,
											"end": 1583,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1040,
											"end": 1583,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 1040,
											"end": 1583,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1040,
											"end": 1583,
											"name": "tag",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 1040,
											"end": 1583,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1040,
											"end": 1583,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1040,
											"end": 1583,
											"name": "tag",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 1040,
											"end": 1583,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1308,
											"end": 1318,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1297,
											"end": 1302,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1125,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 815,
											"end": 816,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1139,
											"end": 1161,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1139,
											"end": 1161,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1139,
											"end": 1152,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1139,
											"end": 1161,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1139,
											"end": 1161,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1139,
											"end": 1161,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1135,
											"end": 1510,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1135,
											"end": 1510,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 1135,
											"end": 1510,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1177,
											"end": 1189,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1200,
											"end": 1204,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 1177,
											"end": 1205,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1177,
											"end": 1205,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1276,
											"end": 1280,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1276,
											"end": 1288,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1276,
											"end": 1288,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1276,
											"end": 1288,
											"name": "BALANCE",
											"source": 11
										},
										{
											"begin": 1261,
											"end": 1288,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1261,
											"end": 1288,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1312,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1321,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1302,
											"end": 1321,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1335,
											"name": "PUSH",
											"source": 11,
											"value": "8FC"
										},
										{
											"begin": 1322,
											"end": 1334,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1335,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1335,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1335,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1335,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1335,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1335,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1302,
											"end": 1335,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1335,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1302,
											"end": 1335,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1302,
											"end": 1335,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1335,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1335,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1335,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1335,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1335,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1335,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1335,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1335,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1335,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1335,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1335,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1335,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1335,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1335,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1335,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1335,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1335,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 1302,
											"end": 1335,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1335,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1335,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1302,
											"end": 1335,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1335,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1335,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1335,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1302,
											"end": 1335,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1335,
											"name": "tag",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 1302,
											"end": 1335,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1335,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1135,
											"end": 1510,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1135,
											"end": 1510,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 1135,
											"end": 1510,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1135,
											"end": 1510,
											"name": "tag",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 1135,
											"end": 1510,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1387,
											"end": 1400,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1411,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1381,
											"end": 1411,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1411,
											"name": "PUSH",
											"source": 11,
											"value": "70A08231"
										},
										{
											"begin": 1420,
											"end": 1424,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "EXTCODESIZE",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "tag",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "tag",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "tag",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1426,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1366,
											"end": 1426,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1366,
											"end": 1426,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1440,
											"end": 1499,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 1474,
											"end": 1484,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 1486,
											"end": 1498,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1446,
											"end": 1459,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1440,
											"end": 1473,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1440,
											"end": 1473,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1440,
											"end": 1473,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 1440,
											"end": 1473,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1440,
											"end": 1499,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1440,
											"end": 1499,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1440,
											"end": 1499,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1440,
											"end": 1499,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1440,
											"end": 1499,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1440,
											"end": 1499,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1440,
											"end": 1499,
											"name": "tag",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 1440,
											"end": 1499,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1135,
											"end": 1510,
											"name": "tag",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 1135,
											"end": 1510,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1548,
											"end": 1561,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1524,
											"end": 1576,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1524,
											"end": 1576,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1536,
											"end": 1546,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 1524,
											"end": 1576,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1524,
											"end": 1576,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1524,
											"end": 1576,
											"name": "PUSH",
											"source": 11,
											"value": "9207361CC2A04B9C7A06691DF1EB87C6A63957AE88BF01D0D18C81E3D1272099"
										},
										{
											"begin": 1563,
											"end": 1575,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1524,
											"end": 1576,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1524,
											"end": 1576,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1524,
											"end": 1576,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1524,
											"end": 1576,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1524,
											"end": 1576,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1524,
											"end": 1576,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1524,
											"end": 1576,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1524,
											"end": 1576,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1524,
											"end": 1576,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1524,
											"end": 1576,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1524,
											"end": 1576,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1524,
											"end": 1576,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1524,
											"end": 1576,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1524,
											"end": 1576,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1524,
											"end": 1576,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1524,
											"end": 1576,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1524,
											"end": 1576,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1524,
											"end": 1576,
											"name": "LOG3",
											"source": 11
										},
										{
											"begin": 1367,
											"end": 1368,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1040,
											"end": 1583,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1040,
											"end": 1583,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1308,
											"end": 1318,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1297,
											"end": 1302,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1823,
											"end": 1824,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1786,
											"end": 1826,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1786,
											"end": 1826,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1807,
											"end": 1813,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1807,
											"end": 1813,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1807,
											"end": 1813,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1807,
											"end": 1813,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1807,
											"end": 1813,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1807,
											"end": 1813,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1807,
											"end": 1813,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1807,
											"end": 1813,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1807,
											"end": 1813,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1807,
											"end": 1813,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1786,
											"end": 1826,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1786,
											"end": 1826,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1786,
											"end": 1826,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1786,
											"end": 1826,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1786,
											"end": 1826,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1786,
											"end": 1826,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1786,
											"end": 1826,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1786,
											"end": 1826,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1786,
											"end": 1826,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1786,
											"end": 1826,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1786,
											"end": 1826,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1786,
											"end": 1826,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 1853,
											"end": 1854,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1836,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1836,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1131,
											"end": 1138,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1157,
											"end": 1163,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1157,
											"end": 1163,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1157,
											"end": 1163,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1157,
											"end": 1163,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1157,
											"end": 1163,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1157,
											"end": 1163,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1157,
											"end": 1163,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1157,
											"end": 1163,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1157,
											"end": 1163,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1157,
											"end": 1163,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1157,
											"end": 1163,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1150,
											"end": 1163,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1150,
											"end": 1163,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1308,
											"end": 1318,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1297,
											"end": 1302,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2119,
											"end": 2120,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2099,
											"end": 2121,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2099,
											"end": 2121,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2099,
											"end": 2107,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2099,
											"end": 2121,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2099,
											"end": 2121,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2099,
											"end": 2121,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2099,
											"end": 2121,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "PUSH data",
											"source": 1,
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2208,
											"end": 2216,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2200,
											"end": 2206,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2200,
											"end": 2206,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2200,
											"end": 2206,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2200,
											"end": 2206,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2200,
											"end": 2206,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2200,
											"end": 2206,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2200,
											"end": 2206,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2200,
											"end": 2206,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2200,
											"end": 2206,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2200,
											"end": 2206,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 2236,
											"end": 2244,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2227,
											"end": 2233,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2227,
											"end": 2233,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 598,
											"end": 702,
											"name": "tag",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 598,
											"end": 702,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 651,
											"end": 666,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 685,
											"end": 695,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 678,
											"end": 695,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 678,
											"end": 695,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 598,
											"end": 702,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 598,
											"end": 702,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 704,
											"end": 879,
											"name": "tag",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 704,
											"end": 879,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 786,
											"end": 872,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 806,
											"end": 811,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 836,
											"end": 859,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 836,
											"end": 859,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 836,
											"end": 859,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 861,
											"end": 863,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 865,
											"end": 870,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 813,
											"end": 871,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 813,
											"end": 871,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 813,
											"end": 871,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 813,
											"end": 871,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 813,
											"end": 871,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 813,
											"end": 871,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 813,
											"end": 871,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 813,
											"end": 871,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 813,
											"end": 871,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 813,
											"end": 871,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 813,
											"end": 871,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 813,
											"end": 871,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 813,
											"end": 871,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 813,
											"end": 871,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 813,
											"end": 871,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 813,
											"end": 871,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 813,
											"end": 871,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 813,
											"end": 871,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 813,
											"end": 871,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 813,
											"end": 871,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 813,
											"end": 871,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 813,
											"end": 871,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 813,
											"end": 871,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 813,
											"end": 871,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 813,
											"end": 871,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 813,
											"end": 871,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 813,
											"end": 871,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 813,
											"end": 871,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 813,
											"end": 871,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 813,
											"end": 871,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 813,
											"end": 871,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 813,
											"end": 871,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 813,
											"end": 871,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 813,
											"end": 871,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 813,
											"end": 871,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 813,
											"end": 871,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 813,
											"end": 871,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 813,
											"end": 871,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 813,
											"end": 871,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 813,
											"end": 871,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 786,
											"end": 805,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 786,
											"end": 872,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 786,
											"end": 872,
											"name": "tag",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 786,
											"end": 872,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 704,
											"end": 879,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 704,
											"end": 879,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 704,
											"end": 879,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 704,
											"end": 879,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2967,
											"end": 3718,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 2967,
											"end": 3718,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3386,
											"end": 3409,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 3440,
											"end": 3444,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "PUSH",
											"source": 5,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3420,
											"end": 3425,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3412,
											"end": 3439,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3412,
											"end": 3439,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3412,
											"end": 3439,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 3412,
											"end": 3439,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3386,
											"end": 3481,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3386,
											"end": 3481,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3515,
											"end": 3516,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3495,
											"end": 3505,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3495,
											"end": 3512,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3495,
											"end": 3516,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 3491,
											"end": 3712,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3491,
											"end": 3712,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 3491,
											"end": 3712,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3635,
											"end": 3645,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH",
											"source": 5,
											"value": "2A"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH data",
											"source": 5,
											"value": "E11AD79D1E4A7F2E5F376964CB99E8E8F7904E3FC16A109F7A7ECB9AA7956DCD"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH",
											"source": 5,
											"value": "2A"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "CODECOPY",
											"source": 5
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3491,
											"end": 3712,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 3491,
											"end": 3712,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2967,
											"end": 3718,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2967,
											"end": 3718,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2967,
											"end": 3718,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2967,
											"end": 3718,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3581,
											"end": 3774,
											"name": "tag",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 3581,
											"end": 3774,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3684,
											"end": 3696,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3715,
											"end": 3767,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 3737,
											"end": 3743,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3745,
											"end": 3749,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3751,
											"end": 3752,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3754,
											"end": 3766,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3715,
											"end": 3736,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 3715,
											"end": 3767,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3715,
											"end": 3767,
											"name": "tag",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 3715,
											"end": 3767,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3708,
											"end": 3767,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3708,
											"end": 3767,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3581,
											"end": 3774,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3581,
											"end": 3774,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3581,
											"end": 3774,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3581,
											"end": 3774,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3581,
											"end": 3774,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3581,
											"end": 3774,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4608,
											"end": 5131,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 4608,
											"end": 5131,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4735,
											"end": 4747,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 4792,
											"end": 4797,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4767,
											"end": 4788,
											"name": "SELFBALANCE",
											"source": 6
										},
										{
											"begin": 4767,
											"end": 4797,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4767,
											"end": 4797,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH data",
											"source": 6,
											"value": "565F1A77334FC4792800921178C71E4521ACFFAB18FF9E7885B49377EE80AB4C"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "CODECOPY",
											"source": 6
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4858,
											"end": 4876,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 4869,
											"end": 4875,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4858,
											"end": 4868,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 4858,
											"end": 4876,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4858,
											"end": 4876,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 4858,
											"end": 4876,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH",
											"source": 6,
											"value": "1D"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH",
											"source": 6,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "tag",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4981,
											"end": 4993,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4995,
											"end": 5018,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 5022,
											"end": 5028,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5033,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5022,
											"end": 5033,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5042,
											"end": 5047,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5050,
											"end": 5054,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "tag",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 6,
											"value": "3F"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4980,
											"end": 5055,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4980,
											"end": 5055,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4980,
											"end": 5055,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4980,
											"end": 5055,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5072,
											"end": 5124,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 5090,
											"end": 5097,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5099,
											"end": 5109,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5111,
											"end": 5123,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5072,
											"end": 5089,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 5072,
											"end": 5124,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5072,
											"end": 5124,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 5072,
											"end": 5124,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5065,
											"end": 5124,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5065,
											"end": 5124,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5065,
											"end": 5124,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5065,
											"end": 5124,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4608,
											"end": 5131,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 4608,
											"end": 5131,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 4608,
											"end": 5131,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4608,
											"end": 5131,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4608,
											"end": 5131,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4608,
											"end": 5131,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4608,
											"end": 5131,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 726,
											"end": 1139,
											"name": "tag",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 726,
											"end": 1139,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 786,
											"end": 790,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 989,
											"end": 1001,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1098,
											"end": 1105,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1086,
											"end": 1106,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 1078,
											"end": 1106,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1078,
											"end": 1106,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1131,
											"end": 1132,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1124,
											"end": 1128,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1124,
											"end": 1132,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1117,
											"end": 1132,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1117,
											"end": 1132,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1117,
											"end": 1132,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 726,
											"end": 1139,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 726,
											"end": 1139,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 726,
											"end": 1139,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 726,
											"end": 1139,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 7091,
											"end": 7816,
											"name": "tag",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 7091,
											"end": 7816,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7206,
											"end": 7218,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 7234,
											"end": 7241,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7230,
											"end": 7810,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7230,
											"end": 7810,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 7230,
											"end": 7810,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7264,
											"end": 7274,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7257,
											"end": 7274,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7257,
											"end": 7274,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7257,
											"end": 7274,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 7257,
											"end": 7274,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7230,
											"end": 7810,
											"name": "tag",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 7230,
											"end": 7810,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7395,
											"end": 7396,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7375,
											"end": 7385,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7375,
											"end": 7392,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7375,
											"end": 7396,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 7371,
											"end": 7800,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7371,
											"end": 7800,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 7371,
											"end": 7800,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7633,
											"end": 7643,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7627,
											"end": 7644,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7693,
											"end": 7708,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7680,
											"end": 7690,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7676,
											"end": 7678,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7672,
											"end": 7691,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7665,
											"end": 7709,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7582,
											"end": 7727,
											"name": "tag",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 7582,
											"end": 7727,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7772,
											"end": 7784,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "tag",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "tag",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7091,
											"end": 7816,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 7091,
											"end": 7816,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7091,
											"end": 7816,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 7091,
											"end": 7816,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7091,
											"end": 7816,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7091,
											"end": 7816,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7091,
											"end": 7816,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7091,
											"end": 7816,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										}
									],
									".data": {
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
										"565F1A77334FC4792800921178C71E4521ACFFAB18FF9E7885B49377EE80AB4C": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
										"E11AD79D1E4A7F2E5F376964CB99E8E8F7904E3FC16A109F7A7ECB9AA7956DCD": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564"
									}
								}
							}
						},
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b",
							"withdraw(address)": "51cff8d9"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_assetAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"LogWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_assetAddress\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdraw(address)\":{\"details\":\"Withdraw asset.\",\"params\":{\"_assetAddress\":\"Asset to be withdrawn.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Ensures that any contract that inherits from this contract is able to withdraw funds that are accidentally received or stuck.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/aave/flashloan-box/blob/master/contracts/utils/Withdrawable.sol\":\"Withdrawable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol\":{\"keccak256\":\"0x15e2d5bd4c28a88548074c54d220e8086f638a71ed07e6b3ba5a70066fcf458d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90faf5851c02f9bd42c5bfb54d4f0421a2612f50ab80b2c4fa24fa3792071cc2\",\"dweb:/ipfs/QmRGM4F2PcGVF85aTfaA9YBhCHHDqrMhRjyp6fGeBTtirb\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xca0c2396dbeb3503b51abf4248ebf77a1461edad513c01529df51850a012bee3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://991b44ff44e0496e8554a90f4c0512c28faed45104d40430019f3c67ea67740e\",\"dweb:/ipfs/Qmc3nRapVbcctELoZS5qe17zLkFB3bETBfwzCTMF1CSuGE\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0xf12dfbe97e6276980b83d2830bb0eb75e0cf4f3e626c2471137f82158ae6a0fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a849c2d95e85463909e5b5c920b13e7a11216ca14127085e16d22b9379d52a\",\"dweb:/ipfs/QmUg3CZDbCCcQdroEpexBy5ZFd5vD1UWijWQq9qHZjtJNQ\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol\":{\"keccak256\":\"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://256c8c8af5eb072bc473226ab2b2187149b8fc04f5f4a4820db22527f5ce8e3c\",\"dweb:/ipfs/QmRvi5BhnL7Rxf85KrJhwM6RRhukm4tzoctRdgQEheNyiN\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]},\"https://github.com/aave/flashloan-box/blob/master/contracts/utils/Withdrawable.sol\":{\"keccak256\":\"0x0c88d4a5cb375c848a174dac6d2d739e08e1c20e4807ba48fae34eb4470c1ee3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://32c707fa70815b1eb4b79e633648103f7a383a87524479da252d5cb0d4e4de19\",\"dweb:/ipfs/QmXXVVoDkv513A1A8JHfo5wtD6nLfmukFtZTuopSKEr6FP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 91,
								"contract": "https://github.com/aave/flashloan-box/blob/master/contracts/utils/Withdrawable.sol:Withdrawable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Ensures that any contract that inherits from this contract is able to withdraw funds that are accidentally received or stuck.",
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2837",
				"formattedMessage": "contracts/Kyber-Jarvis.sol:37:17: Warning: Only state variables can have a docstring. This will be disallowed in 0.7.0.\n        address receiver = address(this); // Can also be a separate contract\n                ^------^\n",
				"message": "Only state variables can have a docstring. This will be disallowed in 0.7.0.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1254,
					"file": "contracts/Kyber-Jarvis.sol",
					"start": 1246
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "contracts/Kyber-Jarvis.sol:17:9: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n        bytes calldata _params\n        ^--------------------^\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 672,
					"file": "contracts/Kyber-Jarvis.sol",
					"start": 650
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "contracts/Kyber-Jarvis.sol:37:9: Warning: Unused local variable.\n        address receiver = address(this); // Can also be a separate contract\n        ^--------------^\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1254,
					"file": "contracts/Kyber-Jarvis.sol",
					"start": 1238
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "contracts/Kyber-Jarvis.sol:38:9: Warning: Unused local variable.\n        address asset = 0x6B175474E89094C44Da98b954EedeAC495271d0F; // Dai\n        ^-----------^\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1329,
					"file": "contracts/Kyber-Jarvis.sol",
					"start": 1316
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "contracts/Kyber-Jarvis.sol:39:9: Warning: Unused local variable.\n        uint256 amount = 1000 * 1e18;\n        ^------------^\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1406,
					"file": "contracts/Kyber-Jarvis.sol",
					"start": 1392
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "contracts/Kyber-Jarvis.sol:42:9: Warning: Unused local variable.\n        bytes memory params = \"\";\n        ^-----------------^\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1518,
					"file": "contracts/Kyber-Jarvis.sol",
					"start": 1499
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "contracts/Kyber-Jarvis.sol:33:5: Warning: Function state mutability can be restricted to view\n    function flashloan() public onlyOwner {\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "Function state mutability can be restricted to view",
				"severity": "warning",
				"sourceLocation": {
					"end": 1865,
					"file": "contracts/Kyber-Jarvis.sol",
					"start": 1130
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/Kyber-Jarvis.sol": {
				"ast": {
					"absolutePath": "contracts/Kyber-Jarvis.sol",
					"exportedSymbols": {
						"arbitragejeur": [
							83
						]
					},
					"id": 84,
					"license": "dvdch.eth",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:0"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 84,
							"sourceUnit": 194,
							"src": "125:107:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/aave/flashloan-box/blob/master/contracts/aave/FlashLoanReceiverBase.sol",
							"file": "https://github.com/aave/flashloan-box/blob/master/contracts/aave/FlashLoanReceiverBase.sol",
							"id": 3,
							"nodeType": "ImportDirective",
							"scope": 84,
							"sourceUnit": 1787,
							"src": "234:100:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 4,
										"name": "FlashLoanReceiverBase",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1786,
										"src": "377:21:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_FlashLoanReceiverBase_$1786",
											"typeString": "contract FlashLoanReceiverBase"
										}
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "377:21:0"
								}
							],
							"contractDependencies": [
								193,
								1661,
								1786,
								1801,
								1907
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 83,
							"linearizedBaseContracts": [
								83,
								1786,
								1907,
								193,
								1661,
								1801
							],
							"name": "arbitragejeur",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "recipientWallet",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 83,
									"src": "407:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "407:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 15,
										"nodeType": "Block",
										"src": "524:2:0",
										"statements": []
									},
									"documentation": null,
									"id": 16,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"id": 12,
													"name": "_addressProvider",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 9,
													"src": "499:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 13,
											"modifierName": {
												"argumentTypes": null,
												"id": 11,
												"name": "FlashLoanReceiverBase",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1786,
												"src": "477:21:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_FlashLoanReceiverBase_$1786_$",
													"typeString": "type(contract FlashLoanReceiverBase)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "477:39:0"
										}
									],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "_addressProvider",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 16,
												"src": "451:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "451:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "450:26:0"
									},
									"returnParameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "524:0:0"
									},
									"scope": 83,
									"src": "439:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1800
									],
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "721:401:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 37,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 29,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 20,
																"src": "740:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 33,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -28,
																				"src": "778:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_arbitragejeur_$83",
																					"typeString": "contract arbitragejeur"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_arbitragejeur_$83",
																					"typeString": "contract arbitragejeur"
																				}
																			],
																			"id": 32,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "770:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 31,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "770:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": null,
																					"typeString": null
																				}
																			}
																		},
																		"id": 34,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "770:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 35,
																		"name": "_reserve",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 18,
																		"src": "785:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 30,
																	"name": "getBalanceInternal",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1785,
																	"src": "751:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view returns (uint256)"
																	}
																},
																"id": 36,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "751:43:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "740:54:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "496e76616c69642062616c616e63652c207761732074686520666c6173684c6f616e207375636365737366756c3f",
															"id": 38,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "796:48:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8fe07d1a7bc8ed40574aa57beae4fbd43367cc89459755c316997d76d102b27d",
																"typeString": "literal_string \"Invalid balance, was the flashLoan successful?\""
															},
															"value": "Invalid balance, was the flashLoan successful?"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8fe07d1a7bc8ed40574aa57beae4fbd43367cc89459755c316997d76d102b27d",
																"typeString": "literal_string \"Invalid balance, was the flashLoan successful?\""
															}
														],
														"id": 28,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "732:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 39,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "732:113:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 40,
												"nodeType": "ExpressionStatement",
												"src": "732:113:0"
											},
											{
												"assignments": [
													42
												],
												"declarations": [
													{
														"constant": false,
														"id": 42,
														"mutability": "mutable",
														"name": "totalDebt",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 53,
														"src": "1017:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 41,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1017:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 47,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 45,
															"name": "_fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 22,
															"src": "1046:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 43,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 20,
															"src": "1034:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 44,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 375,
														"src": "1034:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 46,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1034:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1017:34:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 49,
															"name": "_reserve",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 18,
															"src": "1094:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 50,
															"name": "totalDebt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 42,
															"src": "1104:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 48,
														"name": "transferFundsBackToPoolInternal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1720,
														"src": "1062:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1062:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1062:52:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "ee872558",
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "executeOperation",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 26,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "707:8:0"
									},
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "_reserve",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 54,
												"src": "574:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 17,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "574:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 20,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 54,
												"src": "601:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 19,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "_fee",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 54,
												"src": "627:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 21,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "627:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "_params",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 54,
												"src": "650:22:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 23,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "650:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "563:116:0"
									},
									"returnParameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "721:0:0"
									},
									"scope": 83,
									"src": "538:584:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 81,
										"nodeType": "Block",
										"src": "1168:697:0",
										"statements": [
											{
												"assignments": [
													61
												],
												"declarations": [
													{
														"constant": false,
														"id": 61,
														"mutability": "mutable",
														"name": "receiver",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 81,
														"src": "1238:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 60,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1238:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 66,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 64,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -28,
															"src": "1265:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_arbitragejeur_$83",
																"typeString": "contract arbitragejeur"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_arbitragejeur_$83",
																"typeString": "contract arbitragejeur"
															}
														],
														"id": 63,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1257:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 62,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1257:7:0",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1257:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1238:32:0"
											},
											{
												"assignments": [
													68
												],
												"declarations": [
													{
														"constant": false,
														"id": 68,
														"mutability": "mutable",
														"name": "asset",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 81,
														"src": "1316:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 67,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1316:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 70,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "307836423137353437344538393039344334344461393862393534456564654143343935323731643046",
													"id": 69,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1332:42:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													},
													"value": "0x6B175474E89094C44Da98b954EedeAC495271d0F"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1316:58:0"
											},
											{
												"assignments": [
													72
												],
												"declarations": [
													{
														"constant": false,
														"id": 72,
														"mutability": "mutable",
														"name": "amount",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 81,
														"src": "1392:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 71,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1392:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 76,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_rational_1000000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000000"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"hexValue": "31303030",
														"id": 73,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1409:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000_by_1",
															"typeString": "int_const 1000"
														},
														"value": "1000"
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "31653138",
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1416:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														},
														"value": "1e18"
													},
													"src": "1409:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000000"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1392:28:0"
											},
											{
												"assignments": [
													78
												],
												"declarations": [
													{
														"constant": false,
														"id": 78,
														"mutability": "mutable",
														"name": "params",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 81,
														"src": "1499:19:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 77,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1499:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 80,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "",
													"id": 79,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1521:2:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1499:24:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "1b89b61a",
									"id": 82,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 57,
											"modifierName": {
												"argumentTypes": null,
												"id": 56,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 142,
												"src": "1158:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1158:9:0"
										}
									],
									"name": "flashloan",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1148:2:0"
									},
									"returnParameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1168:0:0"
									},
									"scope": 83,
									"src": "1130:735:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 84,
							"src": "338:1530:0"
						}
					],
					"src": "39:1831:0"
				},
				"id": 0
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Ownable": [
							193
						]
					},
					"id": 194,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 85,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:1"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 86,
							"nodeType": "ImportDirective",
							"scope": 194,
							"sourceUnit": 1662,
							"src": "66:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 88,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1661,
										"src": "621:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$1661",
											"typeString": "contract Context"
										}
									},
									"id": 89,
									"nodeType": "InheritanceSpecifier",
									"src": "621:7:1"
								}
							],
							"contractDependencies": [
								1661
							],
							"contractKind": "contract",
							"documentation": {
								"id": 87,
								"nodeType": "StructuredDocumentation",
								"src": "97:494:1",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 193,
							"linearizedBaseContracts": [
								193,
								1661
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 91,
									"mutability": "mutable",
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 193,
									"src": "635:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 90,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "635:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 97,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 97,
												"src": "691:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "691:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 97,
												"src": "722:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 94,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "722:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "690:57:1"
									},
									"src": "664:84:1"
								},
								{
									"body": {
										"id": 118,
										"nodeType": "Block",
										"src": "874:135:1",
										"statements": [
											{
												"assignments": [
													102
												],
												"declarations": [
													{
														"constant": false,
														"id": 102,
														"mutability": "mutable",
														"name": "msgSender",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 118,
														"src": "884:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 101,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "884:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 105,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 103,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1649,
														"src": "904:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "904:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "884:32:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 106,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 91,
														"src": "926:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 107,
														"name": "msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 102,
														"src": "935:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "926:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 109,
												"nodeType": "ExpressionStatement",
												"src": "926:18:1"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 113,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "988:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 112,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "980:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 111,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "980:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 114,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "980:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 115,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 102,
															"src": "992:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 110,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 97,
														"src": "959:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "959:43:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 117,
												"nodeType": "EmitStatement",
												"src": "954:48:1"
											}
										]
									},
									"documentation": {
										"id": 98,
										"nodeType": "StructuredDocumentation",
										"src": "754:91:1",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 119,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "862:2:1"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "874:0:1"
									},
									"scope": 193,
									"src": "850:159:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "1140:30:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 125,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 91,
													"src": "1157:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 124,
												"id": 126,
												"nodeType": "Return",
												"src": "1150:13:1"
											}
										]
									},
									"documentation": {
										"id": 120,
										"nodeType": "StructuredDocumentation",
										"src": "1015:65:1",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1099:2:1"
									},
									"returnParameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 128,
												"src": "1131:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1131:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1130:9:1"
									},
									"scope": 193,
									"src": "1085:85:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 141,
										"nodeType": "Block",
										"src": "1279:96:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 136,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 132,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 128,
																	"src": "1297:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 133,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1297:7:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 134,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1649,
																	"src": "1308:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 135,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1308:12:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1297:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 137,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1322:34:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 131,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1289:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1289:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "1289:68:1"
											},
											{
												"id": 140,
												"nodeType": "PlaceholderStatement",
												"src": "1367:1:1"
											}
										]
									},
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "1176:77:1",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 142,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1276:2:1"
									},
									"src": "1258:117:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 163,
										"nodeType": "Block",
										"src": "1771:91:1",
										"statements": [
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 149,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 91,
															"src": "1807:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 152,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1823:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 151,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1815:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 150,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1815:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 153,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1815:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 148,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 97,
														"src": "1786:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1786:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 155,
												"nodeType": "EmitStatement",
												"src": "1781:45:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 156,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 91,
														"src": "1836:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 159,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1853:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 158,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1845:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 157,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1845:7:1",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 160,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1845:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "1836:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 162,
												"nodeType": "ExpressionStatement",
												"src": "1836:19:1"
											}
										]
									},
									"documentation": {
										"id": 143,
										"nodeType": "StructuredDocumentation",
										"src": "1381:331:1",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 164,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 146,
											"modifierName": {
												"argumentTypes": null,
												"id": 145,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 142,
												"src": "1761:9:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1761:9:1"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1743:2:1"
									},
									"returnParameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1771:0:1"
									},
									"scope": 193,
									"src": "1717:145:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 191,
										"nodeType": "Block",
										"src": "2081:170:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 178,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 173,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 167,
																"src": "2099:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 176,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2119:1:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 175,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2111:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 174,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2111:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 177,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2111:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "2099:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 179,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2123:40:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 172,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2091:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2091:73:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 181,
												"nodeType": "ExpressionStatement",
												"src": "2091:73:1"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 183,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 91,
															"src": "2200:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 184,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "2208:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 182,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 97,
														"src": "2179:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2179:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 186,
												"nodeType": "EmitStatement",
												"src": "2174:43:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 187,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 91,
														"src": "2227:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 188,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 167,
														"src": "2236:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2227:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 190,
												"nodeType": "ExpressionStatement",
												"src": "2227:17:1"
											}
										]
									},
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "1868:138:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 192,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 170,
											"modifierName": {
												"argumentTypes": null,
												"id": 169,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 142,
												"src": "2071:9:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2071:9:1"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 192,
												"src": "2038:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2038:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2037:18:1"
									},
									"returnParameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2081:0:1"
									},
									"scope": 193,
									"src": "2011:240:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 194,
							"src": "592:1661:1"
						}
					],
					"src": "33:2221:1"
				},
				"id": 1
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							548
						]
					},
					"id": 549,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 195,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 196,
								"nodeType": "StructuredDocumentation",
								"src": "66:563:2",
								"text": " @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 548,
							"linearizedBaseContracts": [
								548
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 226,
										"nodeType": "Block",
										"src": "865:98:2",
										"statements": [
											{
												"assignments": [
													209
												],
												"declarations": [
													{
														"constant": false,
														"id": 209,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 226,
														"src": "875:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 208,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "875:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 213,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 210,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 199,
														"src": "887:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 211,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 201,
														"src": "891:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "887:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "875:17:2"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 214,
														"name": "c",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 209,
														"src": "906:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 215,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 199,
														"src": "910:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "906:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 221,
												"nodeType": "IfStatement",
												"src": "902:28:2",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 217,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "921:5:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 218,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "928:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 219,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "920:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 207,
													"id": 220,
													"nodeType": "Return",
													"src": "913:17:2"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 222,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "948:4:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"id": 223,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 209,
															"src": "954:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 224,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "947:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 207,
												"id": 225,
												"nodeType": "Return",
												"src": "940:16:2"
											}
										]
									},
									"documentation": {
										"id": 197,
										"nodeType": "StructuredDocumentation",
										"src": "653:131:2",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 227,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 227,
												"src": "805:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "805:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 227,
												"src": "816:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 200,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "816:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "804:22:2"
									},
									"returnParameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 227,
												"src": "850:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 203,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "850:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 227,
												"src": "856:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "856:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "849:15:2"
									},
									"scope": 548,
									"src": "789:174:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 253,
										"nodeType": "Block",
										"src": "1185:75:2",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 239,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 232,
														"src": "1199:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"id": 240,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 230,
														"src": "1203:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1199:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 246,
												"nodeType": "IfStatement",
												"src": "1195:28:2",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 242,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1214:5:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 243,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1221:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 244,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1213:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 238,
													"id": 245,
													"nodeType": "Return",
													"src": "1206:17:2"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 247,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1241:4:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 250,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 248,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 230,
																"src": "1247:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"argumentTypes": null,
																"id": 249,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 232,
																"src": "1251:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1247:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 251,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1240:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 238,
												"id": 252,
												"nodeType": "Return",
												"src": "1233:20:2"
											}
										]
									},
									"documentation": {
										"id": 228,
										"nodeType": "StructuredDocumentation",
										"src": "969:135:2",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 254,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 254,
												"src": "1125:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1125:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 254,
												"src": "1136:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 231,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1136:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1124:22:2"
									},
									"returnParameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 254,
												"src": "1170:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 234,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1170:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 254,
												"src": "1176:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1176:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1169:15:2"
									},
									"scope": 548,
									"src": "1109:151:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 294,
										"nodeType": "Block",
										"src": "1484:359:2",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 266,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 257,
														"src": "1716:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 267,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1721:1:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1716:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 273,
												"nodeType": "IfStatement",
												"src": "1712:28:2",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "74727565",
																"id": 269,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1732:4:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 270,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1738:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 271,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1731:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 265,
													"id": 272,
													"nodeType": "Return",
													"src": "1724:16:2"
												}
											},
											{
												"assignments": [
													275
												],
												"declarations": [
													{
														"constant": false,
														"id": 275,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 294,
														"src": "1750:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 274,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1750:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 279,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 276,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 257,
														"src": "1762:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 277,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 259,
														"src": "1766:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1762:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1750:17:2"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 282,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 280,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 275,
															"src": "1781:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"argumentTypes": null,
															"id": 281,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 257,
															"src": "1785:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1781:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"id": 283,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 259,
														"src": "1790:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1781:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 289,
												"nodeType": "IfStatement",
												"src": "1777:33:2",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 285,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1801:5:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1808:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 287,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1800:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 265,
													"id": 288,
													"nodeType": "Return",
													"src": "1793:17:2"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 290,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1828:4:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"id": 291,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 275,
															"src": "1834:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 292,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1827:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 265,
												"id": 293,
												"nodeType": "Return",
												"src": "1820:16:2"
											}
										]
									},
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "1266:137:2",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 295,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 295,
												"src": "1424:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 256,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1424:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 295,
												"src": "1435:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1435:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1423:22:2"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 295,
												"src": "1469:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 261,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1469:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 295,
												"src": "1475:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 263,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1475:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1468:15:2"
									},
									"scope": 548,
									"src": "1408:435:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 321,
										"nodeType": "Block",
										"src": "2068:76:2",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 307,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 300,
														"src": "2082:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 308,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2087:1:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2082:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 314,
												"nodeType": "IfStatement",
												"src": "2078:29:2",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 310,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2098:5:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 311,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2105:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 312,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2097:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 306,
													"id": 313,
													"nodeType": "Return",
													"src": "2090:17:2"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 315,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2125:4:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 318,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 316,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 298,
																"src": "2131:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"argumentTypes": null,
																"id": 317,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 300,
																"src": "2135:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2131:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 319,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2124:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 306,
												"id": 320,
												"nodeType": "Return",
												"src": "2117:20:2"
											}
										]
									},
									"documentation": {
										"id": 296,
										"nodeType": "StructuredDocumentation",
										"src": "1849:138:2",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 322,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 322,
												"src": "2008:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 297,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 322,
												"src": "2019:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 299,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2019:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2007:22:2"
									},
									"returnParameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 322,
												"src": "2053:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 302,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2053:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 322,
												"src": "2059:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 304,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2059:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2052:15:2"
									},
									"scope": 548,
									"src": "1992:152:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 348,
										"nodeType": "Block",
										"src": "2379:76:2",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 334,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 327,
														"src": "2393:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 335,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2398:1:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2393:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 341,
												"nodeType": "IfStatement",
												"src": "2389:29:2",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 337,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2409:5:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 338,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2416:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 339,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2408:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 333,
													"id": 340,
													"nodeType": "Return",
													"src": "2401:17:2"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 342,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2436:4:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 345,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 343,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 325,
																"src": "2442:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"argumentTypes": null,
																"id": 344,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 327,
																"src": "2446:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2442:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 346,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2435:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 333,
												"id": 347,
												"nodeType": "Return",
												"src": "2428:20:2"
											}
										]
									},
									"documentation": {
										"id": 323,
										"nodeType": "StructuredDocumentation",
										"src": "2150:148:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 349,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 349,
												"src": "2319:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 324,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2319:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 349,
												"src": "2330:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2330:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2318:22:2"
									},
									"returnParameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 349,
												"src": "2364:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 329,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2364:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 349,
												"src": "2370:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 331,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2370:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2363:15:2"
									},
									"scope": 548,
									"src": "2303:152:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 374,
										"nodeType": "Block",
										"src": "2757:108:2",
										"statements": [
											{
												"assignments": [
													360
												],
												"declarations": [
													{
														"constant": false,
														"id": 360,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 374,
														"src": "2767:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 359,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2767:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 364,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 361,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 352,
														"src": "2779:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 362,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 354,
														"src": "2783:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2779:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2767:17:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 368,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 366,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 360,
																"src": "2802:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 367,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 352,
																"src": "2807:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2802:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 369,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2810:29:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 365,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2794:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2794:46:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 371,
												"nodeType": "ExpressionStatement",
												"src": "2794:46:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 372,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 360,
													"src": "2857:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 358,
												"id": 373,
												"nodeType": "Return",
												"src": "2850:8:2"
											}
										]
									},
									"documentation": {
										"id": 350,
										"nodeType": "StructuredDocumentation",
										"src": "2461:224:2",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 375,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 375,
												"src": "2703:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 351,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2703:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 375,
												"src": "2714:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 353,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2714:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2702:22:2"
									},
									"returnParameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 375,
												"src": "2748:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 356,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2748:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2747:9:2"
									},
									"scope": 548,
									"src": "2690:175:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 396,
										"nodeType": "Block",
										"src": "3203:88:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 388,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 386,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 380,
																"src": "3221:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 387,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 378,
																"src": "3226:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3221:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 389,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3229:32:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 385,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3213:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3213:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 391,
												"nodeType": "ExpressionStatement",
												"src": "3213:49:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 392,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 378,
														"src": "3279:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 393,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 380,
														"src": "3283:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3279:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 384,
												"id": 395,
												"nodeType": "Return",
												"src": "3272:12:2"
											}
										]
									},
									"documentation": {
										"id": 376,
										"nodeType": "StructuredDocumentation",
										"src": "2871:260:2",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 397,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 397,
												"src": "3149:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3149:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 397,
												"src": "3160:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3160:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3148:22:2"
									},
									"returnParameters": {
										"id": 384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 383,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 397,
												"src": "3194:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 382,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3194:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3193:9:2"
									},
									"scope": 548,
									"src": "3136:155:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 430,
										"nodeType": "Block",
										"src": "3605:148:2",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 407,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 400,
														"src": "3619:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 408,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3624:1:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3619:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 412,
												"nodeType": "IfStatement",
												"src": "3615:20:2",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 410,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3634:1:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 406,
													"id": 411,
													"nodeType": "Return",
													"src": "3627:8:2"
												}
											},
											{
												"assignments": [
													414
												],
												"declarations": [
													{
														"constant": false,
														"id": 414,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 430,
														"src": "3645:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 413,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3645:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 418,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 415,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 400,
														"src": "3657:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 416,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 402,
														"src": "3661:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3657:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3645:17:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 424,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 422,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 420,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 414,
																	"src": "3680:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 421,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 400,
																	"src": "3684:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3680:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 423,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 402,
																"src": "3689:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3680:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 425,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3692:35:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 419,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3672:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3672:56:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 427,
												"nodeType": "ExpressionStatement",
												"src": "3672:56:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 428,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 414,
													"src": "3745:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 406,
												"id": 429,
												"nodeType": "Return",
												"src": "3738:8:2"
											}
										]
									},
									"documentation": {
										"id": 398,
										"nodeType": "StructuredDocumentation",
										"src": "3297:236:2",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 431,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 431,
												"src": "3551:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 399,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3551:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 431,
												"src": "3562:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 401,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3562:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3550:22:2"
									},
									"returnParameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 431,
												"src": "3596:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3596:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3595:9:2"
									},
									"scope": 548,
									"src": "3538:215:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 452,
										"nodeType": "Block",
										"src": "4284:83:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 444,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 442,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 436,
																"src": "4302:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 443,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4306:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4302:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 445,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4309:28:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 441,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4294:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4294:44:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 447,
												"nodeType": "ExpressionStatement",
												"src": "4294:44:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 448,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 434,
														"src": "4355:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 449,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 436,
														"src": "4359:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4355:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 440,
												"id": 451,
												"nodeType": "Return",
												"src": "4348:12:2"
											}
										]
									},
									"documentation": {
										"id": 432,
										"nodeType": "StructuredDocumentation",
										"src": "3759:453:2",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 453,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 453,
												"src": "4230:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 433,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4230:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 453,
												"src": "4241:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 435,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4241:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4229:22:2"
									},
									"returnParameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 453,
												"src": "4275:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 438,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4275:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4274:9:2"
									},
									"scope": 548,
									"src": "4217:150:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 474,
										"nodeType": "Block",
										"src": "4887:81:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 466,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 464,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 458,
																"src": "4905:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 465,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4909:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4905:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 467,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4912:26:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 463,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4897:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:42:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 469,
												"nodeType": "ExpressionStatement",
												"src": "4897:42:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 470,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 456,
														"src": "4956:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 471,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "4960:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4956:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 462,
												"id": 473,
												"nodeType": "Return",
												"src": "4949:12:2"
											}
										]
									},
									"documentation": {
										"id": 454,
										"nodeType": "StructuredDocumentation",
										"src": "4373:442:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 475,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 475,
												"src": "4833:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 455,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4833:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 475,
												"src": "4844:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 457,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4844:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4832:22:2"
									},
									"returnParameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 475,
												"src": "4878:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 460,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4878:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4877:9:2"
									},
									"scope": 548,
									"src": "4820:148:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 498,
										"nodeType": "Block",
										"src": "5527:68:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 490,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 488,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 480,
																"src": "5545:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 489,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 478,
																"src": "5550:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5545:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 491,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "5553:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 487,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5537:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5537:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 493,
												"nodeType": "ExpressionStatement",
												"src": "5537:29:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 494,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 478,
														"src": "5583:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 495,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 480,
														"src": "5587:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5583:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 486,
												"id": 497,
												"nodeType": "Return",
												"src": "5576:12:2"
											}
										]
									},
									"documentation": {
										"id": 476,
										"nodeType": "StructuredDocumentation",
										"src": "4974:453:2",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 499,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 499,
												"src": "5445:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5445:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 499,
												"src": "5456:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 479,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5456:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 499,
												"src": "5467:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 481,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5467:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5444:50:2"
									},
									"returnParameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 499,
												"src": "5518:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 484,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5518:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5517:9:2"
									},
									"scope": 548,
									"src": "5432:163:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 522,
										"nodeType": "Block",
										"src": "6347:67:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 514,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 512,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 504,
																"src": "6365:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 513,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6369:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6365:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 515,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 506,
															"src": "6372:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 511,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6357:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6357:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 517,
												"nodeType": "ExpressionStatement",
												"src": "6357:28:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 518,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 502,
														"src": "6402:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 519,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 504,
														"src": "6406:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6402:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 510,
												"id": 521,
												"nodeType": "Return",
												"src": "6395:12:2"
											}
										]
									},
									"documentation": {
										"id": 500,
										"nodeType": "StructuredDocumentation",
										"src": "5601:646:2",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryDiv}.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 523,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 502,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 523,
												"src": "6265:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 501,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6265:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 523,
												"src": "6276:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 503,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6276:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 523,
												"src": "6287:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 505,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6287:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6264:50:2"
									},
									"returnParameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 523,
												"src": "6338:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 508,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6338:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6337:9:2"
									},
									"scope": 548,
									"src": "6252:162:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 546,
										"nodeType": "Block",
										"src": "7155:67:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 536,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 528,
																"src": "7173:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 537,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7177:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7173:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 539,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 530,
															"src": "7180:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 535,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7165:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7165:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 541,
												"nodeType": "ExpressionStatement",
												"src": "7165:28:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 542,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 526,
														"src": "7210:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 543,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 528,
														"src": "7214:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7210:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 534,
												"id": 545,
												"nodeType": "Return",
												"src": "7203:12:2"
											}
										]
									},
									"documentation": {
										"id": 524,
										"nodeType": "StructuredDocumentation",
										"src": "6420:635:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 547,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 547,
												"src": "7073:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 525,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7073:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 547,
												"src": "7084:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7084:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 530,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 547,
												"src": "7095:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 529,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7095:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7072:50:2"
									},
									"returnParameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 547,
												"src": "7146:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 532,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7146:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7145:9:2"
									},
									"scope": 548,
									"src": "7060:162:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 549,
							"src": "630:6594:2"
						}
					],
					"src": "33:7192:2"
				},
				"id": 2
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"ERC20": [
							1051
						]
					},
					"id": 1052,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 550,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:3"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 551,
							"nodeType": "ImportDirective",
							"scope": 1052,
							"sourceUnit": 1662,
							"src": "66:33:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 552,
							"nodeType": "ImportDirective",
							"scope": 1052,
							"sourceUnit": 1130,
							"src": "100:22:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/math/SafeMath.sol",
							"file": "../../math/SafeMath.sol",
							"id": 553,
							"nodeType": "ImportDirective",
							"scope": 1052,
							"sourceUnit": 549,
							"src": "123:33:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 555,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1661,
										"src": "1339:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$1661",
											"typeString": "contract Context"
										}
									},
									"id": 556,
									"nodeType": "InheritanceSpecifier",
									"src": "1339:7:3"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 557,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1129,
										"src": "1348:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$1129",
											"typeString": "contract IERC20"
										}
									},
									"id": 558,
									"nodeType": "InheritanceSpecifier",
									"src": "1348:6:3"
								}
							],
							"contractDependencies": [
								1129,
								1661
							],
							"contractKind": "contract",
							"documentation": {
								"id": 554,
								"nodeType": "StructuredDocumentation",
								"src": "158:1162:3",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin guidelines: functions revert instead\n of returning `false` on failure. This behavior is nonetheless conventional\n and does not conflict with the expectations of ERC20 applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 1051,
							"linearizedBaseContracts": [
								1051,
								1129,
								1661
							],
							"name": "ERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 561,
									"libraryName": {
										"contractScope": null,
										"id": 559,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 548,
										"src": "1367:8:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$548",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "1361:27:3",
									"typeName": {
										"id": 560,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1380:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 565,
									"mutability": "mutable",
									"name": "_balances",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1051,
									"src": "1394:46:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 564,
										"keyType": {
											"id": 562,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1403:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1394:28:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 563,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1414:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 571,
									"mutability": "mutable",
									"name": "_allowances",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1051,
									"src": "1447:69:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 570,
										"keyType": {
											"id": 566,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1456:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1447:49:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 569,
											"keyType": {
												"id": 567,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1476:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1467:28:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 568,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1487:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 573,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1051,
									"src": "1523:28:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 572,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1523:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 575,
									"mutability": "mutable",
									"name": "_name",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1051,
									"src": "1558:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 574,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1558:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 577,
									"mutability": "mutable",
									"name": "_symbol",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1051,
									"src": "1584:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 576,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1584:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 579,
									"mutability": "mutable",
									"name": "_decimals",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1051,
									"src": "1612:23:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 578,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "1612:5:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 599,
										"nodeType": "Block",
										"src": "2022:81:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 587,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 575,
														"src": "2032:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 588,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 582,
														"src": "2040:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2032:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 590,
												"nodeType": "ExpressionStatement",
												"src": "2032:13:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 593,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 591,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 577,
														"src": "2055:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 592,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 584,
														"src": "2065:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2055:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 594,
												"nodeType": "ExpressionStatement",
												"src": "2055:17:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 597,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 595,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 579,
														"src": "2082:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "3138",
														"id": 596,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2094:2:3",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "2082:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 598,
												"nodeType": "ExpressionStatement",
												"src": "2082:14:3"
											}
										]
									},
									"documentation": {
										"id": 580,
										"nodeType": "StructuredDocumentation",
										"src": "1642:311:3",
										"text": " @dev Sets the values for {name} and {symbol}, initializes {decimals} with\n a default value of 18.\n To select a different value for {decimals}, use {_setupDecimals}.\n All three of these values are immutable: they can only be set once during\n construction."
									},
									"id": 600,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "name_",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 600,
												"src": "1971:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 581,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1971:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "symbol_",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 600,
												"src": "1992:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 583,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1992:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1970:44:3"
									},
									"returnParameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2022:0:3"
									},
									"scope": 1051,
									"src": "1958:145:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 608,
										"nodeType": "Block",
										"src": "2228:29:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 606,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 575,
													"src": "2245:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 605,
												"id": 607,
												"nodeType": "Return",
												"src": "2238:12:3"
											}
										]
									},
									"documentation": {
										"id": 601,
										"nodeType": "StructuredDocumentation",
										"src": "2109:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 609,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2181:2:3"
									},
									"returnParameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 609,
												"src": "2213:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 603,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2213:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2212:15:3"
									},
									"scope": 1051,
									"src": "2168:89:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 617,
										"nodeType": "Block",
										"src": "2432:31:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 615,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 577,
													"src": "2449:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 614,
												"id": 616,
												"nodeType": "Return",
												"src": "2442:14:3"
											}
										]
									},
									"documentation": {
										"id": 610,
										"nodeType": "StructuredDocumentation",
										"src": "2263:102:3",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 618,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2385:2:3"
									},
									"returnParameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 618,
												"src": "2417:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 612,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2417:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2416:15:3"
									},
									"scope": 1051,
									"src": "2370:93:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 626,
										"nodeType": "Block",
										"src": "3142:33:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 624,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 579,
													"src": "3159:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 623,
												"id": 625,
												"nodeType": "Return",
												"src": "3152:16:3"
											}
										]
									},
									"documentation": {
										"id": 619,
										"nodeType": "StructuredDocumentation",
										"src": "2469:612:3",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5,05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\n called.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 627,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3103:2:3"
									},
									"returnParameters": {
										"id": 623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 627,
												"src": "3135:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 621,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3135:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3134:7:3"
									},
									"scope": 1051,
									"src": "3086:89:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1060
									],
									"body": {
										"id": 636,
										"nodeType": "Block",
										"src": "3305:36:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 634,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 573,
													"src": "3322:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 633,
												"id": 635,
												"nodeType": "Return",
												"src": "3315:19:3"
											}
										]
									},
									"documentation": {
										"id": 628,
										"nodeType": "StructuredDocumentation",
										"src": "3181:49:3",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 637,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 630,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3278:8:3"
									},
									"parameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:2:3"
									},
									"returnParameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 637,
												"src": "3296:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 631,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3296:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3295:9:3"
									},
									"scope": 1051,
									"src": "3235:106:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1068
									],
									"body": {
										"id": 650,
										"nodeType": "Block",
										"src": "3482:42:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 646,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 565,
														"src": "3499:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 648,
													"indexExpression": {
														"argumentTypes": null,
														"id": 647,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 640,
														"src": "3509:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3499:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 645,
												"id": 649,
												"nodeType": "Return",
												"src": "3492:25:3"
											}
										]
									},
									"documentation": {
										"id": 638,
										"nodeType": "StructuredDocumentation",
										"src": "3347:47:3",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 651,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 642,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3455:8:3"
									},
									"parameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 651,
												"src": "3418:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 639,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3418:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3417:17:3"
									},
									"returnParameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 651,
												"src": "3473:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3473:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3472:9:3"
									},
									"scope": 1051,
									"src": "3399:125:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1078
									],
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "3819:80:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 663,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1649,
																"src": "3839:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 664,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3839:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 665,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 654,
															"src": "3853:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 666,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 656,
															"src": "3864:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 662,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 872,
														"src": "3829:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3829:42:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 668,
												"nodeType": "ExpressionStatement",
												"src": "3829:42:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3888:4:3",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 661,
												"id": 670,
												"nodeType": "Return",
												"src": "3881:11:3"
											}
										]
									},
									"documentation": {
										"id": 652,
										"nodeType": "StructuredDocumentation",
										"src": "3530:192:3",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 658,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3795:8:3"
									},
									"parameters": {
										"id": 657,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 672,
												"src": "3745:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 653,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3745:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 672,
												"src": "3764:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 655,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3764:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3744:35:3"
									},
									"returnParameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 672,
												"src": "3813:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 659,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3813:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3812:6:3"
									},
									"scope": 1051,
									"src": "3727:172:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1088
									],
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "4055:51:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 683,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 571,
															"src": "4072:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 685,
														"indexExpression": {
															"argumentTypes": null,
															"id": 684,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "4084:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4072:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 687,
													"indexExpression": {
														"argumentTypes": null,
														"id": 686,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 677,
														"src": "4091:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4072:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 682,
												"id": 688,
												"nodeType": "Return",
												"src": "4065:34:3"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "3905:47:3",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 679,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4028:8:3"
									},
									"parameters": {
										"id": 678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 690,
												"src": "3976:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3976:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 690,
												"src": "3991:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3991:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3975:32:3"
									},
									"returnParameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 690,
												"src": "4046:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 680,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4046:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4045:9:3"
									},
									"scope": 1051,
									"src": "3957:149:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1098
									],
									"body": {
										"id": 710,
										"nodeType": "Block",
										"src": "4333:77:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 702,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1649,
																"src": "4352:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 703,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4352:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 704,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 693,
															"src": "4366:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 705,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "4375:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 701,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1028,
														"src": "4343:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4343:39:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 707,
												"nodeType": "ExpressionStatement",
												"src": "4343:39:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 708,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4399:4:3",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 700,
												"id": 709,
												"nodeType": "Return",
												"src": "4392:11:3"
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "4112:127:3",
										"text": " @dev See {IERC20-approve}.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 711,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 697,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4309:8:3"
									},
									"parameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 711,
												"src": "4261:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4261:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 711,
												"src": "4278:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 694,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4278:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4260:33:3"
									},
									"returnParameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 711,
												"src": "4327:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4327:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4326:6:3"
									},
									"scope": 1051,
									"src": "4244:166:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1110
									],
									"body": {
										"id": 748,
										"nodeType": "Block",
										"src": "4989:205:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 725,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 714,
															"src": "5009:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 726,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 716,
															"src": "5017:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 727,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 718,
															"src": "5028:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 724,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 872,
														"src": "4999:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4999:36:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 729,
												"nodeType": "ExpressionStatement",
												"src": "4999:36:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 731,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 714,
															"src": "5054:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 732,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1649,
																"src": "5062:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 733,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5062:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 741,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 718,
																	"src": "5114:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 742,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5122:42:3",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																		"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
																	},
																	"value": "ERC20: transfer amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																		"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 734,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 571,
																			"src": "5076:11:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 736,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 735,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 714,
																			"src": "5088:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5076:19:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 739,
																	"indexExpression": {
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 737,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1649,
																			"src": "5096:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 738,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5096:12:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5076:33:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 740,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 499,
																"src": "5076:37:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 743,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5076:89:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 730,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1028,
														"src": "5045:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5045:121:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 745,
												"nodeType": "ExpressionStatement",
												"src": "5045:121:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 746,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5183:4:3",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 723,
												"id": 747,
												"nodeType": "Return",
												"src": "5176:11:3"
											}
										]
									},
									"documentation": {
										"id": 712,
										"nodeType": "StructuredDocumentation",
										"src": "4416:456:3",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for ``sender``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 749,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 720,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4965:8:3"
									},
									"parameters": {
										"id": 719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 749,
												"src": "4899:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 713,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4899:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 749,
												"src": "4915:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 715,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4915:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 718,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 749,
												"src": "4934:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 717,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4934:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4898:51:3"
									},
									"returnParameters": {
										"id": 723,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 749,
												"src": "4983:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 721,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4983:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4982:6:3"
									},
									"scope": 1051,
									"src": "4877:317:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 776,
										"nodeType": "Block",
										"src": "5683:121:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 760,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1649,
																"src": "5702:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 761,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5702:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 762,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 752,
															"src": "5716:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 770,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 754,
																	"src": "5764:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 763,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 571,
																			"src": "5725:11:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 766,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 764,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1649,
																				"src": "5737:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 765,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5737:12:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5725:25:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 768,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 767,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 752,
																		"src": "5751:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5725:34:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 769,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 375,
																"src": "5725:38:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5725:50:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 759,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1028,
														"src": "5693:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5693:83:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 773,
												"nodeType": "ExpressionStatement",
												"src": "5693:83:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 774,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5793:4:3",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 758,
												"id": 775,
												"nodeType": "Return",
												"src": "5786:11:3"
											}
										]
									},
									"documentation": {
										"id": 750,
										"nodeType": "StructuredDocumentation",
										"src": "5200:384:3",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 777,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 777,
												"src": "5616:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 751,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5616:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 754,
												"mutability": "mutable",
												"name": "addedValue",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 777,
												"src": "5633:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 753,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5633:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5615:37:3"
									},
									"returnParameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 777,
												"src": "5677:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 756,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5677:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5676:6:3"
									},
									"scope": 1051,
									"src": "5589:215:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 805,
										"nodeType": "Block",
										"src": "6390:167:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 788,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1649,
																"src": "6409:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 789,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6409:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 790,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 780,
															"src": "6423:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 798,
																	"name": "subtractedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 782,
																	"src": "6471:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 799,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6488:39:3",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																		"typeString": "literal_string \"ERC20: decreased allowance below zero\""
																	},
																	"value": "ERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																		"typeString": "literal_string \"ERC20: decreased allowance below zero\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 791,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 571,
																			"src": "6432:11:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 794,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 792,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1649,
																				"src": "6444:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 793,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6444:12:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6432:25:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 796,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 795,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 780,
																		"src": "6458:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6432:34:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 797,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 499,
																"src": "6432:38:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 800,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6432:96:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 787,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1028,
														"src": "6400:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 801,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6400:129:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 802,
												"nodeType": "ExpressionStatement",
												"src": "6400:129:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 803,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6546:4:3",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 786,
												"id": 804,
												"nodeType": "Return",
												"src": "6539:11:3"
											}
										]
									},
									"documentation": {
										"id": 778,
										"nodeType": "StructuredDocumentation",
										"src": "5810:476:3",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 806,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 780,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 806,
												"src": "6318:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 779,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6318:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 782,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 806,
												"src": "6335:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 781,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6335:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6317:42:3"
									},
									"returnParameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 806,
												"src": "6384:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 784,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6384:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6383:6:3"
									},
									"scope": 1051,
									"src": "6291:266:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 871,
										"nodeType": "Block",
										"src": "7118:443:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 822,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 817,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 809,
																"src": "7136:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 820,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7154:1:3",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 819,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7146:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 818,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7146:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 821,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7146:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "7136:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 823,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7158:39:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 816,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7128:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 824,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7128:70:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 825,
												"nodeType": "ExpressionStatement",
												"src": "7128:70:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 832,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 827,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 811,
																"src": "7216:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 830,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7237:1:3",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 829,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7229:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 828,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7229:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 831,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7229:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "7216:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 833,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7241:37:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 826,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7208:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 834,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7208:71:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 835,
												"nodeType": "ExpressionStatement",
												"src": "7208:71:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 837,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 809,
															"src": "7311:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 838,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 811,
															"src": "7319:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 839,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 813,
															"src": "7330:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 836,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1050,
														"src": "7290:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7290:47:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 841,
												"nodeType": "ExpressionStatement",
												"src": "7290:47:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 852,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 842,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 565,
															"src": "7348:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 844,
														"indexExpression": {
															"argumentTypes": null,
															"id": 843,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 809,
															"src": "7358:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7348:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 849,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 813,
																"src": "7390:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
																"id": 850,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7398:40:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
																},
																"value": "ERC20: transfer amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 845,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 565,
																	"src": "7368:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 847,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 846,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 809,
																	"src": "7378:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7368:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 848,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 499,
															"src": "7368:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 851,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7368:71:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7348:91:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 853,
												"nodeType": "ExpressionStatement",
												"src": "7348:91:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 863,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 854,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 565,
															"src": "7449:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 856,
														"indexExpression": {
															"argumentTypes": null,
															"id": 855,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 811,
															"src": "7459:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7449:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 861,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 813,
																"src": "7497:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 857,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 565,
																	"src": "7472:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 859,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 858,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 811,
																	"src": "7482:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7472:20:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 860,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 375,
															"src": "7472:24:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 862,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7472:32:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7449:55:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 864,
												"nodeType": "ExpressionStatement",
												"src": "7449:55:3"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 866,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 809,
															"src": "7528:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 867,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 811,
															"src": "7536:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 868,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 813,
															"src": "7547:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 865,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1119,
														"src": "7519:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 869,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7519:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 870,
												"nodeType": "EmitStatement",
												"src": "7514:40:3"
											}
										]
									},
									"documentation": {
										"id": 807,
										"nodeType": "StructuredDocumentation",
										"src": "6563:463:3",
										"text": " @dev Moves tokens `amount` from `sender` to `recipient`.\n This is internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
									},
									"id": 872,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 814,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 809,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 872,
												"src": "7050:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 808,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7050:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 811,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 872,
												"src": "7066:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 810,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7066:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 813,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 872,
												"src": "7085:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 812,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7085:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7049:51:3"
									},
									"returnParameters": {
										"id": 815,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7118:0:3"
									},
									"scope": 1051,
									"src": "7031:530:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 926,
										"nodeType": "Block",
										"src": "7897:305:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 886,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 881,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 875,
																"src": "7915:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 884,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7934:1:3",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 883,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7926:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 882,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7926:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 885,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7926:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "7915:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 887,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7938:33:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 880,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7907:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 888,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7907:65:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 889,
												"nodeType": "ExpressionStatement",
												"src": "7907:65:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 893,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8012:1:3",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 892,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8004:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 891,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8004:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 894,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8004:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 895,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 875,
															"src": "8016:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 896,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 877,
															"src": "8025:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 890,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1050,
														"src": "7983:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 897,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7983:49:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 898,
												"nodeType": "ExpressionStatement",
												"src": "7983:49:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 904,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 899,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 573,
														"src": "8043:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 902,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 877,
																"src": "8075:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 900,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 573,
																"src": "8058:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 901,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 375,
															"src": "8058:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 903,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8058:24:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8043:39:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 905,
												"nodeType": "ExpressionStatement",
												"src": "8043:39:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 906,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 565,
															"src": "8092:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 908,
														"indexExpression": {
															"argumentTypes": null,
															"id": 907,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 875,
															"src": "8102:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8092:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 913,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 877,
																"src": "8136:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 909,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 565,
																	"src": "8113:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 911,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 910,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 875,
																	"src": "8123:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8113:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 912,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 375,
															"src": "8113:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 914,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8113:30:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8092:51:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 916,
												"nodeType": "ExpressionStatement",
												"src": "8092:51:3"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 920,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8175:1:3",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 919,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8167:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 918,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8167:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 921,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8167:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 922,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 875,
															"src": "8179:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 923,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 877,
															"src": "8188:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 917,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1119,
														"src": "8158:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 924,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8158:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 925,
												"nodeType": "EmitStatement",
												"src": "8153:42:3"
											}
										]
									},
									"documentation": {
										"id": 873,
										"nodeType": "StructuredDocumentation",
										"src": "7567:260:3",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `to` cannot be the zero address."
									},
									"id": 927,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 927,
												"src": "7847:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 874,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7847:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 877,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 927,
												"src": "7864:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 876,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7864:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7846:33:3"
									},
									"returnParameters": {
										"id": 879,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7897:0:3"
									},
									"scope": 1051,
									"src": "7832:370:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 982,
										"nodeType": "Block",
										"src": "8587:345:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 941,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 936,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 930,
																"src": "8605:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 939,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8624:1:3",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 938,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8616:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 937,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8616:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 940,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8616:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "8605:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 942,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8628:35:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 935,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "8597:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 943,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8597:67:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 944,
												"nodeType": "ExpressionStatement",
												"src": "8597:67:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 946,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 930,
															"src": "8696:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 949,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8713:1:3",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 948,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8705:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 947,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8705:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 950,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8705:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 951,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 932,
															"src": "8717:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 945,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1050,
														"src": "8675:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8675:49:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 953,
												"nodeType": "ExpressionStatement",
												"src": "8675:49:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 964,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 954,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 565,
															"src": "8735:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 956,
														"indexExpression": {
															"argumentTypes": null,
															"id": 955,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 930,
															"src": "8745:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8735:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 961,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 932,
																"src": "8779:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
																"id": 962,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8787:36:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																	"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
																},
																"value": "ERC20: burn amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																	"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 957,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 565,
																	"src": "8756:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 959,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 958,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 930,
																	"src": "8766:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8756:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 960,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 499,
															"src": "8756:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 963,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8756:68:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8735:89:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 965,
												"nodeType": "ExpressionStatement",
												"src": "8735:89:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 971,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 966,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 573,
														"src": "8834:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 969,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 932,
																"src": "8866:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 967,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 573,
																"src": "8849:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 968,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 397,
															"src": "8849:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 970,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8849:24:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8834:39:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 972,
												"nodeType": "ExpressionStatement",
												"src": "8834:39:3"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 974,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 930,
															"src": "8897:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 977,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8914:1:3",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 976,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8906:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 975,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8906:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 978,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8906:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 979,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 932,
															"src": "8918:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 973,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1119,
														"src": "8888:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8888:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 981,
												"nodeType": "EmitStatement",
												"src": "8883:42:3"
											}
										]
									},
									"documentation": {
										"id": 928,
										"nodeType": "StructuredDocumentation",
										"src": "8208:309:3",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 983,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 983,
												"src": "8537:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 929,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8537:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 932,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 983,
												"src": "8554:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 931,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8554:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8536:33:3"
									},
									"returnParameters": {
										"id": 934,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8587:0:3"
									},
									"scope": 1051,
									"src": "8522:410:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1027,
										"nodeType": "Block",
										"src": "9438:257:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 999,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 994,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 986,
																"src": "9456:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 997,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9473:1:3",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 996,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9465:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 995,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9465:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 998,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9465:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "9456:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 1000,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9477:38:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 993,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "9448:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1001,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9448:68:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1002,
												"nodeType": "ExpressionStatement",
												"src": "9448:68:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1009,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1004,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 988,
																"src": "9534:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1007,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9553:1:3",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1006,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9545:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1005,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9545:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1008,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9545:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "9534:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 1010,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9557:36:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 1003,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "9526:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9526:68:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1012,
												"nodeType": "ExpressionStatement",
												"src": "9526:68:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1019,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 1013,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 571,
																"src": "9605:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1016,
															"indexExpression": {
																"argumentTypes": null,
																"id": 1014,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 986,
																"src": "9617:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9605:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1017,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1015,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 988,
															"src": "9624:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9605:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1018,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 990,
														"src": "9635:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9605:36:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1020,
												"nodeType": "ExpressionStatement",
												"src": "9605:36:3"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1022,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 986,
															"src": "9665:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1023,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 988,
															"src": "9672:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1024,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 990,
															"src": "9681:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1021,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1128,
														"src": "9656:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1025,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9656:32:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1026,
												"nodeType": "EmitStatement",
												"src": "9651:37:3"
											}
										]
									},
									"documentation": {
										"id": 984,
										"nodeType": "StructuredDocumentation",
										"src": "8938:412:3",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 1028,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 986,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1028,
												"src": "9373:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 985,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9373:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 988,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1028,
												"src": "9388:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 987,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9388:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 990,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1028,
												"src": "9405:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 989,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9405:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9372:48:3"
									},
									"returnParameters": {
										"id": 992,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9438:0:3"
									},
									"scope": 1051,
									"src": "9355:340:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1038,
										"nodeType": "Block",
										"src": "10076:38:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1036,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1034,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 579,
														"src": "10086:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1035,
														"name": "decimals_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1031,
														"src": "10098:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "10086:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 1037,
												"nodeType": "ExpressionStatement",
												"src": "10086:21:3"
											}
										]
									},
									"documentation": {
										"id": 1029,
										"nodeType": "StructuredDocumentation",
										"src": "9701:312:3",
										"text": " @dev Sets {decimals} to a value other than the default one of 18.\n WARNING: This function should only be called from the constructor. Most\n applications that interact with token contracts will not expect\n {decimals} to ever change, and may work incorrectly if it does."
									},
									"id": 1039,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setupDecimals",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1032,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1031,
												"mutability": "mutable",
												"name": "decimals_",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1039,
												"src": "10042:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1030,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "10042:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10041:17:3"
									},
									"returnParameters": {
										"id": 1033,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10076:0:3"
									},
									"scope": 1051,
									"src": "10018:96:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1049,
										"nodeType": "Block",
										"src": "10790:3:3",
										"statements": []
									},
									"documentation": {
										"id": 1040,
										"nodeType": "StructuredDocumentation",
										"src": "10120:576:3",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be to transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1050,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1047,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1042,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1050,
												"src": "10731:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1041,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10731:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1044,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1050,
												"src": "10745:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1043,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10745:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1046,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1050,
												"src": "10757:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1045,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10757:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10730:42:3"
									},
									"returnParameters": {
										"id": 1048,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10790:0:3"
									},
									"scope": 1051,
									"src": "10701:92:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1052,
							"src": "1321:9474:3"
						}
					],
					"src": "33:10763:3"
				},
				"id": 3
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1129
						]
					},
					"id": 1130,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1053,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1054,
								"nodeType": "StructuredDocumentation",
								"src": "66:70:4",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 1129,
							"linearizedBaseContracts": [
								1129
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 1055,
										"nodeType": "StructuredDocumentation",
										"src": "160:66:4",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1060,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1056,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "251:2:4"
									},
									"returnParameters": {
										"id": 1059,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1058,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1060,
												"src": "277:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1057,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "277:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "276:9:4"
									},
									"scope": 1129,
									"src": "231:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1061,
										"nodeType": "StructuredDocumentation",
										"src": "292:72:4",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1068,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1064,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1063,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1068,
												"src": "388:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1062,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "388:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "387:17:4"
									},
									"returnParameters": {
										"id": 1067,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1066,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1068,
												"src": "428:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1065,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "427:9:4"
									},
									"scope": 1129,
									"src": "369:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1069,
										"nodeType": "StructuredDocumentation",
										"src": "443:209:4",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1078,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1078,
												"src": "675:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1070,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "675:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1078,
												"src": "694:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1072,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "694:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "674:35:4"
									},
									"returnParameters": {
										"id": 1077,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1076,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1078,
												"src": "728:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1075,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "728:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "727:6:4"
									},
									"scope": 1129,
									"src": "657:77:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1079,
										"nodeType": "StructuredDocumentation",
										"src": "740:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1088,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1084,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1088,
												"src": "1028:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1080,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1028:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1088,
												"src": "1043:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1082,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1027:32:4"
									},
									"returnParameters": {
										"id": 1087,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1086,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1088,
												"src": "1083:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1085,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1083:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1082:9:4"
									},
									"scope": 1129,
									"src": "1009:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1089,
										"nodeType": "StructuredDocumentation",
										"src": "1098:642:4",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1098,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1094,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1098,
												"src": "1762:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1090,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1762:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1093,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1098,
												"src": "1779:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1092,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1779:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1761:33:4"
									},
									"returnParameters": {
										"id": 1097,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1096,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1098,
												"src": "1813:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1095,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1813:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1812:6:4"
									},
									"scope": 1129,
									"src": "1745:74:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1099,
										"nodeType": "StructuredDocumentation",
										"src": "1825:296:4",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1110,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1101,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1110,
												"src": "2148:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2148:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1103,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1110,
												"src": "2164:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2164:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1110,
												"src": "2183:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1104,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2183:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2147:51:4"
									},
									"returnParameters": {
										"id": 1109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1108,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1110,
												"src": "2217:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1107,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2217:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2216:6:4"
									},
									"scope": 1129,
									"src": "2126:97:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1111,
										"nodeType": "StructuredDocumentation",
										"src": "2229:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 1119,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1113,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1119,
												"src": "2407:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2407:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1115,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1119,
												"src": "2429:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1114,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2429:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1117,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1119,
												"src": "2449:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2449:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2406:57:4"
									},
									"src": "2392:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1120,
										"nodeType": "StructuredDocumentation",
										"src": "2470:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 1128,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1122,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1128,
												"src": "2638:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1121,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2638:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1124,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1128,
												"src": "2661:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1123,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2661:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1126,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1128,
												"src": "2686:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1125,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2686:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2637:63:4"
									},
									"src": "2623:78:4"
								}
							],
							"scope": 1130,
							"src": "137:2566:4"
						}
					],
					"src": "33:2671:4"
				},
				"id": 4
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/SafeERC20.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/SafeERC20.sol",
					"exportedSymbols": {
						"SafeERC20": [
							1342
						]
					},
					"id": 1343,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1131,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:5"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 1132,
							"nodeType": "ImportDirective",
							"scope": 1343,
							"sourceUnit": 1130,
							"src": "66:22:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/math/SafeMath.sol",
							"file": "../../math/SafeMath.sol",
							"id": 1133,
							"nodeType": "ImportDirective",
							"scope": 1343,
							"sourceUnit": 549,
							"src": "89:33:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 1134,
							"nodeType": "ImportDirective",
							"scope": 1343,
							"sourceUnit": 1639,
							"src": "123:33:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1135,
								"nodeType": "StructuredDocumentation",
								"src": "158:457:5",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 1342,
							"linearizedBaseContracts": [
								1342
							],
							"name": "SafeERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1138,
									"libraryName": {
										"contractScope": null,
										"id": 1136,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 548,
										"src": "646:8:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$548",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "640:27:5",
									"typeName": {
										"id": 1137,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "659:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 1141,
									"libraryName": {
										"contractScope": null,
										"id": 1139,
										"name": "Address",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1638,
										"src": "678:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Address_$1638",
											"typeString": "library Address"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "672:26:5",
									"typeName": {
										"id": 1140,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "690:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 1162,
										"nodeType": "Block",
										"src": "776:103:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1151,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1143,
															"src": "806:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1129",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1154,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1143,
																			"src": "836:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$1129",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1155,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1078,
																		"src": "836:14:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1156,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "836:23:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1157,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1145,
																	"src": "861:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1158,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1147,
																	"src": "865:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1152,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "813:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1153,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "813:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1159,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "813:58:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$1129",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1150,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1341,
														"src": "786:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1129_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "786:86:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1161,
												"nodeType": "ExpressionStatement",
												"src": "786:86:5"
											}
										]
									},
									"documentation": null,
									"id": 1163,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1143,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1163,
												"src": "726:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1129",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 1142,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1129,
													"src": "726:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1129",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1145,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1163,
												"src": "740:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "740:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1163,
												"src": "752:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "752:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "725:41:5"
									},
									"returnParameters": {
										"id": 1149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "776:0:5"
									},
									"scope": 1342,
									"src": "704:175:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1187,
										"nodeType": "Block",
										"src": "975:113:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1175,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1165,
															"src": "1005:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1129",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1178,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1165,
																			"src": "1035:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$1129",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1179,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1110,
																		"src": "1035:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1180,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1035:27:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1181,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1167,
																	"src": "1064:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1182,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1169,
																	"src": "1070:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1183,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1171,
																	"src": "1074:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1176,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "1012:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1177,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1012:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1184,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1012:68:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$1129",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1174,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1341,
														"src": "985:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1129_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "985:96:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1186,
												"nodeType": "ExpressionStatement",
												"src": "985:96:5"
											}
										]
									},
									"documentation": null,
									"id": 1188,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1165,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1188,
												"src": "911:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1129",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 1164,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1129,
													"src": "911:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1129",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1167,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1188,
												"src": "925:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "925:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1169,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1188,
												"src": "939:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "939:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1171,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1188,
												"src": "951:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "951:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "910:55:5"
									},
									"returnParameters": {
										"id": 1173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "975:0:5"
									},
									"scope": 1342,
									"src": "885:203:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1230,
										"nodeType": "Block",
										"src": "1424:537:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1214,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1201,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 1199,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1195,
																			"src": "1713:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 1200,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1722:1:5",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1713:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1202,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1712:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1212,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 1207,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": -28,
																							"src": "1753:4:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$1342",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$1342",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 1206,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1745:7:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1205,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1745:7:5",
																							"typeDescriptions": {
																								"typeIdentifier": null,
																								"typeString": null
																							}
																						}
																					},
																					"id": 1208,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1745:13:5",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 1209,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1193,
																					"src": "1760:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 1203,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1191,
																					"src": "1729:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$1129",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 1204,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1088,
																				"src": "1729:15:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 1210,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1729:39:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 1211,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1772:1:5",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1729:44:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1213,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1728:46:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1712:62:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 1215,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1788:56:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 1198,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1704:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1704:150:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1217,
												"nodeType": "ExpressionStatement",
												"src": "1704:150:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1219,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1191,
															"src": "1884:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1129",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1222,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1191,
																			"src": "1914:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$1129",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1223,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1098,
																		"src": "1914:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1224,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1914:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1225,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1193,
																	"src": "1938:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1226,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1195,
																	"src": "1947:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1220,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "1891:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1221,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1891:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1227,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1891:62:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$1129",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1218,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1341,
														"src": "1864:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1129_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1864:90:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1229,
												"nodeType": "ExpressionStatement",
												"src": "1864:90:5"
											}
										]
									},
									"documentation": {
										"id": 1189,
										"nodeType": "StructuredDocumentation",
										"src": "1094:249:5",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 1231,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1191,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1231,
												"src": "1369:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1129",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 1190,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1129,
													"src": "1369:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1129",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1193,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1231,
												"src": "1383:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1383:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1195,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1231,
												"src": "1400:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1400:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1368:46:5"
									},
									"returnParameters": {
										"id": 1197,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1424:0:5"
									},
									"scope": 1342,
									"src": "1348:613:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1266,
										"nodeType": "Block",
										"src": "2053:197:5",
										"statements": [
											{
												"assignments": [
													1241
												],
												"declarations": [
													{
														"constant": false,
														"id": 1241,
														"mutability": "mutable",
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1266,
														"src": "2063:20:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1240,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2063:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1253,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1251,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1237,
															"src": "2130:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1246,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "2110:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1342",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1342",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 1245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2102:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1244,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2102:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 1247,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2102:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1248,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1235,
																	"src": "2117:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1242,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1233,
																	"src": "2086:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1129",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1243,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1088,
																"src": "2086:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 1249,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2086:39:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1250,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 375,
														"src": "2086:43:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2086:50:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2063:73:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1255,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1233,
															"src": "2166:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1129",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1258,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1233,
																			"src": "2196:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$1129",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1259,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1098,
																		"src": "2196:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1260,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "2196:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1261,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1235,
																	"src": "2220:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1262,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1241,
																	"src": "2229:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1256,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "2173:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1257,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2173:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1263,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2173:69:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$1129",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1254,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1341,
														"src": "2146:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1129_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2146:97:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1265,
												"nodeType": "ExpressionStatement",
												"src": "2146:97:5"
											}
										]
									},
									"documentation": null,
									"id": 1267,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1233,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1267,
												"src": "1998:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1129",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 1232,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1129,
													"src": "1998:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1129",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1235,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1267,
												"src": "2012:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2012:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1237,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1267,
												"src": "2029:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2029:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1997:46:5"
									},
									"returnParameters": {
										"id": 1239,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2053:0:5"
									},
									"scope": 1342,
									"src": "1967:283:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1303,
										"nodeType": "Block",
										"src": "2342:242:5",
										"statements": [
											{
												"assignments": [
													1277
												],
												"declarations": [
													{
														"constant": false,
														"id": 1277,
														"mutability": "mutable",
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1303,
														"src": "2352:20:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1276,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2352:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1290,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1287,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1273,
															"src": "2419:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 1288,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2426:43:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
															},
															"value": "SafeERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1282,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "2399:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1342",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1342",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 1281,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2391:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1280,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2391:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 1283,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2391:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1284,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1271,
																	"src": "2406:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1278,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1269,
																	"src": "2375:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1129",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1279,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1088,
																"src": "2375:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 1285,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2375:39:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1286,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 499,
														"src": "2375:43:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 1289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2375:95:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2352:118:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1292,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1269,
															"src": "2500:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1129",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1295,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1269,
																			"src": "2530:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$1129",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1296,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1098,
																		"src": "2530:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1297,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "2530:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1298,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1271,
																	"src": "2554:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1299,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1277,
																	"src": "2563:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1293,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "2507:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1294,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2507:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1300,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2507:69:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$1129",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1291,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1341,
														"src": "2480:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1129_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2480:97:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1302,
												"nodeType": "ExpressionStatement",
												"src": "2480:97:5"
											}
										]
									},
									"documentation": null,
									"id": 1304,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1269,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1304,
												"src": "2287:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1129",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 1268,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1129,
													"src": "2287:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1129",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1271,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1304,
												"src": "2301:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1270,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2301:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1273,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1304,
												"src": "2318:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1272,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2318:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2286:46:5"
									},
									"returnParameters": {
										"id": 1275,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2342:0:5"
									},
									"scope": 1342,
									"src": "2256:328:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1340,
										"nodeType": "Block",
										"src": "3037:681:5",
										"statements": [
											{
												"assignments": [
													1313
												],
												"declarations": [
													{
														"constant": false,
														"id": 1313,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1340,
														"src": "3386:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1312,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3386:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1322,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1319,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1309,
															"src": "3440:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1320,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3446:34:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1316,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1307,
																	"src": "3420:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1129",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$1129",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1315,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3412:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1314,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3412:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1317,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3412:14:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1318,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1433,
														"src": "3412:27:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3412:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3386:95:5"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1323,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1313,
															"src": "3495:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1324,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "3495:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1325,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3515:1:5",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3495:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1339,
												"nodeType": "IfStatement",
												"src": "3491:221:5",
												"trueBody": {
													"id": 1338,
													"nodeType": "Block",
													"src": "3518:194:5",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1330,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1313,
																				"src": "3635:10:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"argumentTypes": null,
																				"components": [
																					{
																						"argumentTypes": null,
																						"id": 1332,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3648:4:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 1331,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "3648:4:5",
																							"typeDescriptions": {
																								"typeIdentifier": null,
																								"typeString": null
																							}
																						}
																					}
																				],
																				"id": 1333,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3647:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 1328,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -1,
																				"src": "3624:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1329,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "3624:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1334,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3624:30:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 1335,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3656:44:5",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 1327,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		-18,
																		-18
																	],
																	"referencedDeclaration": -18,
																	"src": "3616:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1336,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3616:85:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1337,
															"nodeType": "ExpressionStatement",
															"src": "3616:85:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1305,
										"nodeType": "StructuredDocumentation",
										"src": "2590:372:5",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 1341,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1307,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1341,
												"src": "2996:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1129",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 1306,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1129,
													"src": "2996:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1129",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1309,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1341,
												"src": "3010:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1308,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3010:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2995:33:5"
									},
									"returnParameters": {
										"id": 1311,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3037:0:5"
									},
									"scope": 1342,
									"src": "2967:751:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1343,
							"src": "616:3104:5"
						}
					],
					"src": "33:3688:5"
				},
				"id": 5
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1638
						]
					},
					"id": 1639,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1344,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1345,
								"nodeType": "StructuredDocumentation",
								"src": "66:67:6",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1638,
							"linearizedBaseContracts": [
								1638
							],
							"name": "Address",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1361,
										"nodeType": "Block",
										"src": "792:347:6",
										"statements": [
											{
												"assignments": [
													1354
												],
												"declarations": [
													{
														"constant": false,
														"id": 1354,
														"mutability": "mutable",
														"name": "size",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1361,
														"src": "989:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1353,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "989:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1355,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "989:12:6"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1076:32:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1078:28:6",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1098:7:6"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "1086:11:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1086:20:6"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1078:4:6"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1348,
														"isOffset": false,
														"isSlot": false,
														"src": "1098:7:6",
														"valueSize": 1
													},
													{
														"declaration": 1354,
														"isOffset": false,
														"isSlot": false,
														"src": "1078:4:6",
														"valueSize": 1
													}
												],
												"id": 1356,
												"nodeType": "InlineAssembly",
												"src": "1067:41:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1357,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1354,
														"src": "1124:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1358,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1131:1:6",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1124:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1352,
												"id": 1360,
												"nodeType": "Return",
												"src": "1117:15:6"
											}
										]
									},
									"documentation": {
										"id": 1346,
										"nodeType": "StructuredDocumentation",
										"src": "156:565:6",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 1362,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1348,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1362,
												"src": "746:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1347,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "746:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "745:17:6"
									},
									"returnParameters": {
										"id": 1352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1351,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1362,
												"src": "786:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1350,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "786:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "785:6:6"
									},
									"scope": 1638,
									"src": "726:413:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1395,
										"nodeType": "Block",
										"src": "2127:320:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1377,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1373,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "2153:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1638",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1638",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1372,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2145:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1371,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2145:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 1374,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2145:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1375,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2145:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1376,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1367,
																"src": "2170:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2145:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1378,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2178:31:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1370,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2137:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2137:73:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1380,
												"nodeType": "ExpressionStatement",
												"src": "2137:73:6"
											},
											{
												"assignments": [
													1382,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1382,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1395,
														"src": "2299:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1381,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2299:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													null
												],
												"id": 1389,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "",
															"id": 1387,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2349:2:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 1383,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1365,
																"src": "2317:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2317:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1386,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"argumentTypes": null,
																"id": 1385,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1367,
																"src": "2340:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2317:31:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2317:35:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2298:54:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1391,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1382,
															"src": "2370:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1392,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2379:60:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1390,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2362:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2362:78:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1394,
												"nodeType": "ExpressionStatement",
												"src": "2362:78:6"
											}
										]
									},
									"documentation": {
										"id": 1363,
										"nodeType": "StructuredDocumentation",
										"src": "1145:906:6",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1396,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1365,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1396,
												"src": "2075:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1364,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2075:15:6",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1367,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1396,
												"src": "2102:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2102:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2074:43:6"
									},
									"returnParameters": {
										"id": 1369,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2127:0:6"
									},
									"scope": 1638,
									"src": "2056:391:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1412,
										"nodeType": "Block",
										"src": "3277:82:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1407,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1399,
															"src": "3305:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1408,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1401,
															"src": "3313:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1409,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3319:32:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1406,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1413,
															1433
														],
														"referencedDeclaration": 1433,
														"src": "3292:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3292:60:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1405,
												"id": 1411,
												"nodeType": "Return",
												"src": "3285:67:6"
											}
										]
									},
									"documentation": {
										"id": 1397,
										"nodeType": "StructuredDocumentation",
										"src": "2453:730:6",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain`call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1413,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1399,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1413,
												"src": "3210:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1398,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1401,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1413,
												"src": "3226:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1400,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3226:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3209:35:6"
									},
									"returnParameters": {
										"id": 1405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1404,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1413,
												"src": "3263:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1403,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3263:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3262:14:6"
									},
									"scope": 1638,
									"src": "3188:171:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1432,
										"nodeType": "Block",
										"src": "3698:76:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1426,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1416,
															"src": "3737:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1427,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1418,
															"src": "3745:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1428,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3751:1:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"argumentTypes": null,
															"id": 1429,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1420,
															"src": "3754:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1425,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1453,
															1503
														],
														"referencedDeclaration": 1503,
														"src": "3715:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3715:52:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1424,
												"id": 1431,
												"nodeType": "Return",
												"src": "3708:59:6"
											}
										]
									},
									"documentation": {
										"id": 1414,
										"nodeType": "StructuredDocumentation",
										"src": "3365:211:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1433,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1416,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1433,
												"src": "3603:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3603:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1418,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1433,
												"src": "3619:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1417,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3619:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1420,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1433,
												"src": "3638:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1419,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3638:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3602:63:6"
									},
									"returnParameters": {
										"id": 1424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1423,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1433,
												"src": "3684:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1422,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3684:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3683:14:6"
									},
									"scope": 1638,
									"src": "3581:193:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1452,
										"nodeType": "Block",
										"src": "4249:111:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1446,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1436,
															"src": "4288:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1447,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1438,
															"src": "4296:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 1448,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1440,
															"src": "4302:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1449,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4309:43:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1445,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1453,
															1503
														],
														"referencedDeclaration": 1503,
														"src": "4266:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4266:87:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1444,
												"id": 1451,
												"nodeType": "Return",
												"src": "4259:94:6"
											}
										]
									},
									"documentation": {
										"id": 1434,
										"nodeType": "StructuredDocumentation",
										"src": "3780:351:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1453,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1436,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1453,
												"src": "4167:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1435,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4167:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1438,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1453,
												"src": "4183:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1437,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4183:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1440,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1453,
												"src": "4202:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1439,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4202:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4166:50:6"
									},
									"returnParameters": {
										"id": 1444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1443,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1453,
												"src": "4235:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1442,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4235:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4234:14:6"
									},
									"scope": 1638,
									"src": "4136:224:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1502,
										"nodeType": "Block",
										"src": "4749:382:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1474,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1470,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "4775:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1638",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1638",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1469,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4767:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1468,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4767:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 1471,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4767:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1472,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "4767:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1473,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1460,
																"src": "4792:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4767:30:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1475,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4799:40:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1467,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4759:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4759:81:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1477,
												"nodeType": "ExpressionStatement",
												"src": "4759:81:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1480,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1456,
																	"src": "4869:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1479,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1362,
																"src": "4858:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1481,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4858:18:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1482,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4878:31:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 1478,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4850:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4850:60:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1484,
												"nodeType": "ExpressionStatement",
												"src": "4850:60:6"
											},
											{
												"assignments": [
													1486,
													1488
												],
												"declarations": [
													{
														"constant": false,
														"id": 1486,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1502,
														"src": "4981:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1485,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4981:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1488,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1502,
														"src": "4995:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1487,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4995:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1495,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1493,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1458,
															"src": "5050:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 1489,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1456,
																"src": "5022:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1490,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "5022:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1492,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"argumentTypes": null,
																"id": 1491,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1460,
																"src": "5042:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5022:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5022:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4980:75:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1497,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1486,
															"src": "5090:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 1498,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1488,
															"src": "5099:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 1499,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1462,
															"src": "5111:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1496,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1637,
														"src": "5072:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5072:52:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1466,
												"id": 1501,
												"nodeType": "Return",
												"src": "5065:59:6"
											}
										]
									},
									"documentation": {
										"id": 1454,
										"nodeType": "StructuredDocumentation",
										"src": "4366:237:6",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1503,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1456,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1503,
												"src": "4639:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1455,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4639:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1458,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1503,
												"src": "4655:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1457,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4655:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1460,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1503,
												"src": "4674:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1459,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4674:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1462,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1503,
												"src": "4689:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1461,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4689:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4638:78:6"
									},
									"returnParameters": {
										"id": 1466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1465,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1503,
												"src": "4735:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1464,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4735:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4734:14:6"
									},
									"scope": 1638,
									"src": "4608:523:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1519,
										"nodeType": "Block",
										"src": "5408:97:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1514,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1506,
															"src": "5444:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1515,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1508,
															"src": "5452:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1516,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5458:39:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1513,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1520,
															1555
														],
														"referencedDeclaration": 1555,
														"src": "5425:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1517,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5425:73:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1512,
												"id": 1518,
												"nodeType": "Return",
												"src": "5418:80:6"
											}
										]
									},
									"documentation": {
										"id": 1504,
										"nodeType": "StructuredDocumentation",
										"src": "5137:166:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1520,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1506,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1520,
												"src": "5336:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1505,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5336:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1508,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1520,
												"src": "5352:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1507,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5352:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5335:35:6"
									},
									"returnParameters": {
										"id": 1512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1511,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1520,
												"src": "5394:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1510,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5394:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5393:14:6"
									},
									"scope": 1638,
									"src": "5308:197:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1554,
										"nodeType": "Block",
										"src": "5817:288:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1534,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1523,
																	"src": "5846:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1533,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1362,
																"src": "5835:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1535,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5835:18:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1536,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5855:38:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 1532,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5827:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5827:67:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1538,
												"nodeType": "ExpressionStatement",
												"src": "5827:67:6"
											},
											{
												"assignments": [
													1540,
													1542
												],
												"declarations": [
													{
														"constant": false,
														"id": 1540,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1554,
														"src": "5965:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1539,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5965:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1542,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1554,
														"src": "5979:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1541,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5979:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1547,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1545,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1525,
															"src": "6024:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1543,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1523,
															"src": "6006:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1544,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "6006:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6006:23:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5964:65:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1549,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1540,
															"src": "6064:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 1550,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1542,
															"src": "6073:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 1551,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1527,
															"src": "6085:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1548,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1637,
														"src": "6046:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6046:52:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1531,
												"id": 1553,
												"nodeType": "Return",
												"src": "6039:59:6"
											}
										]
									},
									"documentation": {
										"id": 1521,
										"nodeType": "StructuredDocumentation",
										"src": "5511:173:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1555,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1523,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1555,
												"src": "5717:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1522,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5717:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1525,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1555,
												"src": "5733:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1524,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5733:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1527,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1555,
												"src": "5752:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1526,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5752:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5716:63:6"
									},
									"returnParameters": {
										"id": 1531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1530,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1555,
												"src": "5803:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1529,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5803:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5802:14:6"
									},
									"scope": 1638,
									"src": "5689:416:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1571,
										"nodeType": "Block",
										"src": "6381:101:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1566,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1558,
															"src": "6419:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1567,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1560,
															"src": "6427:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1568,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6433:41:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 1565,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1572,
															1607
														],
														"referencedDeclaration": 1607,
														"src": "6398:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6398:77:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1564,
												"id": 1570,
												"nodeType": "Return",
												"src": "6391:84:6"
											}
										]
									},
									"documentation": {
										"id": 1556,
										"nodeType": "StructuredDocumentation",
										"src": "6111:168:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1572,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1558,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1572,
												"src": "6314:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1557,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1560,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1572,
												"src": "6330:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1559,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6330:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6313:35:6"
									},
									"returnParameters": {
										"id": 1564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1563,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1572,
												"src": "6367:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1562,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6367:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6366:14:6"
									},
									"scope": 1638,
									"src": "6284:198:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1606,
										"nodeType": "Block",
										"src": "6793:292:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1586,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1575,
																	"src": "6822:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1585,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1362,
																"src": "6811:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1587,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6811:18:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1588,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6831:40:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 1584,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6803:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6803:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1590,
												"nodeType": "ExpressionStatement",
												"src": "6803:69:6"
											},
											{
												"assignments": [
													1592,
													1594
												],
												"declarations": [
													{
														"constant": false,
														"id": 1592,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1606,
														"src": "6943:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1591,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6943:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1594,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1606,
														"src": "6957:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1593,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6957:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1599,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1597,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1577,
															"src": "7004:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1595,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1575,
															"src": "6984:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1596,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "6984:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6984:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6942:67:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1601,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1592,
															"src": "7044:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 1602,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1594,
															"src": "7053:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 1603,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1579,
															"src": "7065:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1600,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1637,
														"src": "7026:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1604,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7026:52:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1583,
												"id": 1605,
												"nodeType": "Return",
												"src": "7019:59:6"
											}
										]
									},
									"documentation": {
										"id": 1573,
										"nodeType": "StructuredDocumentation",
										"src": "6488:175:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1607,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1575,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1607,
												"src": "6698:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1574,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6698:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1577,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1607,
												"src": "6714:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1576,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6714:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1579,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1607,
												"src": "6733:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1578,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6733:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6697:63:6"
									},
									"returnParameters": {
										"id": 1583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1582,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1607,
												"src": "6779:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1581,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6779:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6778:14:6"
									},
									"scope": 1638,
									"src": "6668:417:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1636,
										"nodeType": "Block",
										"src": "7220:596:6",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"id": 1618,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1609,
													"src": "7234:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1634,
													"nodeType": "Block",
													"src": "7291:519:6",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1622,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1611,
																		"src": "7375:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1623,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "7375:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1624,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7395:1:6",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7375:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1632,
																"nodeType": "Block",
																"src": "7747:53:6",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1629,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1613,
																					"src": "7772:12:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 1628,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					-19,
																					-19
																				],
																				"referencedDeclaration": -19,
																				"src": "7765:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 1630,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7765:20:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1631,
																		"nodeType": "ExpressionStatement",
																		"src": "7765:20:6"
																	}
																]
															},
															"id": 1633,
															"nodeType": "IfStatement",
															"src": "7371:429:6",
															"trueBody": {
																"id": 1627,
																"nodeType": "Block",
																"src": "7398:343:6",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "7582:145:6",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "7604:40:6",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "7633:10:6"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "7627:5:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7627:17:6"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "7608:15:6",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7676:2:6",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "7680:10:6"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7672:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7672:19:6"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "7693:15:6"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "7665:6:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7665:44:6"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7665:44:6"
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 1611,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7633:10:6",
																				"valueSize": 1
																			},
																			{
																				"declaration": 1611,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7680:10:6",
																				"valueSize": 1
																			}
																		],
																		"id": 1626,
																		"nodeType": "InlineAssembly",
																		"src": "7573:154:6"
																	}
																]
															}
														}
													]
												},
												"id": 1635,
												"nodeType": "IfStatement",
												"src": "7230:580:6",
												"trueBody": {
													"id": 1621,
													"nodeType": "Block",
													"src": "7243:42:6",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1619,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1611,
																"src": "7264:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1617,
															"id": 1620,
															"nodeType": "Return",
															"src": "7257:17:6"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 1637,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_verifyCallResult",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1609,
												"mutability": "mutable",
												"name": "success",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1637,
												"src": "7118:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1608,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7118:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1611,
												"mutability": "mutable",
												"name": "returndata",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1637,
												"src": "7132:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1610,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7132:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1613,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1637,
												"src": "7157:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1612,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7157:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7117:67:6"
									},
									"returnParameters": {
										"id": 1617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1616,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1637,
												"src": "7206:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1615,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7206:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7205:14:6"
									},
									"scope": 1638,
									"src": "7091:725:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1639,
							"src": "134:7684:6"
						}
					],
					"src": "33:7786:6"
				},
				"id": 6
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1661
						]
					},
					"id": 1662,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1640,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1661,
							"linearizedBaseContracts": [
								1661
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1648,
										"nodeType": "Block",
										"src": "668:34:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 1645,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "685:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "685:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 1644,
												"id": 1647,
												"nodeType": "Return",
												"src": "678:17:7"
											}
										]
									},
									"documentation": null,
									"id": 1649,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1641,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "617:2:7"
									},
									"returnParameters": {
										"id": 1644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1643,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1649,
												"src": "651:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "651:15:7",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "650:17:7"
									},
									"scope": 1661,
									"src": "598:104:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1659,
										"nodeType": "Block",
										"src": "773:165:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1654,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": -28,
													"src": "783:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$1661",
														"typeString": "contract Context"
													}
												},
												"id": 1655,
												"nodeType": "ExpressionStatement",
												"src": "783:4:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 1656,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "923:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "923:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1653,
												"id": 1658,
												"nodeType": "Return",
												"src": "916:15:7"
											}
										]
									},
									"documentation": null,
									"id": 1660,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1650,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "725:2:7"
									},
									"returnParameters": {
										"id": 1653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1652,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1660,
												"src": "759:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1651,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "759:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "758:14:7"
									},
									"scope": 1661,
									"src": "708:230:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1662,
							"src": "566:374:7"
						}
					],
					"src": "33:908:7"
				},
				"id": 7
			},
			"https://github.com/aave/flashloan-box/blob/master/contracts/aave/FlashLoanReceiverBase.sol": {
				"ast": {
					"absolutePath": "https://github.com/aave/flashloan-box/blob/master/contracts/aave/FlashLoanReceiverBase.sol",
					"exportedSymbols": {
						"FlashLoanReceiverBase": [
							1786
						]
					},
					"id": 1787,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1663,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:8"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/math/SafeMath.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/math/SafeMath.sol",
							"id": 1664,
							"nodeType": "ImportDirective",
							"scope": 1787,
							"sourceUnit": 549,
							"src": "111:106:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/IERC20.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/IERC20.sol",
							"id": 1665,
							"nodeType": "ImportDirective",
							"scope": 1787,
							"sourceUnit": 1130,
							"src": "277:111:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/SafeERC20.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/SafeERC20.sol",
							"id": 1666,
							"nodeType": "ImportDirective",
							"scope": 1787,
							"sourceUnit": 1343,
							"src": "451:114:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/aave/flashloan-box/blob/master/contracts/aave/IFlashLoanReceiver.sol",
							"file": "./IFlashLoanReceiver.sol",
							"id": 1667,
							"nodeType": "ImportDirective",
							"scope": 1787,
							"sourceUnit": 1802,
							"src": "566:34:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/aave/flashloan-box/blob/master/contracts/aave/ILendingPoolAddressesProvider.sol",
							"file": "./ILendingPoolAddressesProvider.sol",
							"id": 1668,
							"nodeType": "ImportDirective",
							"scope": 1787,
							"sourceUnit": 1816,
							"src": "601:45:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/aave/flashloan-box/blob/master/contracts/utils/Withdrawable.sol",
							"file": "../utils/Withdrawable.sol",
							"id": 1669,
							"nodeType": "ImportDirective",
							"scope": 1787,
							"sourceUnit": 1908,
							"src": "647:35:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1670,
										"name": "IFlashLoanReceiver",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1801,
										"src": "727:18:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IFlashLoanReceiver_$1801",
											"typeString": "contract IFlashLoanReceiver"
										}
									},
									"id": 1671,
									"nodeType": "InheritanceSpecifier",
									"src": "727:18:8"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1672,
										"name": "Withdrawable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1907,
										"src": "747:12:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Withdrawable_$1907",
											"typeString": "contract Withdrawable"
										}
									},
									"id": 1673,
									"nodeType": "InheritanceSpecifier",
									"src": "747:12:8"
								}
							],
							"contractDependencies": [
								193,
								1661,
								1801,
								1907
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": false,
							"id": 1786,
							"linearizedBaseContracts": [
								1786,
								1907,
								193,
								1661,
								1801
							],
							"name": "FlashLoanReceiverBase",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1676,
									"libraryName": {
										"contractScope": null,
										"id": 1674,
										"name": "SafeERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1342,
										"src": "773:9:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeERC20_$1342",
											"typeString": "library SafeERC20"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "767:27:8",
									"typeName": {
										"contractScope": null,
										"id": 1675,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1129,
										"src": "787:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$1129",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"id": 1679,
									"libraryName": {
										"contractScope": null,
										"id": 1677,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 548,
										"src": "805:8:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$548",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "799:27:8",
									"typeName": {
										"id": 1678,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "818:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"id": 1682,
									"mutability": "constant",
									"name": "ethAddress",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1786,
									"src": "832:72:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1680,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "832:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "307845656565654565656545654565654565456545656545454565656565456565656565656545456545",
										"id": 1681,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "862:42:8",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										},
										"value": "0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "c72c4d10",
									"id": 1684,
									"mutability": "mutable",
									"name": "addressesProvider",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1786,
									"src": "910:54:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ILendingPoolAddressesProvider_$1815",
										"typeString": "contract ILendingPoolAddressesProvider"
									},
									"typeName": {
										"contractScope": null,
										"id": 1683,
										"name": "ILendingPoolAddressesProvider",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1815,
										"src": "910:29:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ILendingPoolAddressesProvider_$1815",
											"typeString": "contract ILendingPoolAddressesProvider"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1695,
										"nodeType": "Block",
										"src": "1016:84:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1689,
														"name": "addressesProvider",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1684,
														"src": "1026:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ILendingPoolAddressesProvider_$1815",
															"typeString": "contract ILendingPoolAddressesProvider"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1691,
																"name": "_addressProvider",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1686,
																"src": "1076:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1690,
															"name": "ILendingPoolAddressesProvider",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1815,
															"src": "1046:29:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ILendingPoolAddressesProvider_$1815_$",
																"typeString": "type(contract ILendingPoolAddressesProvider)"
															}
														},
														"id": 1692,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1046:47:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ILendingPoolAddressesProvider_$1815",
															"typeString": "contract ILendingPoolAddressesProvider"
														}
													},
													"src": "1026:67:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ILendingPoolAddressesProvider_$1815",
														"typeString": "contract ILendingPoolAddressesProvider"
													}
												},
												"id": 1694,
												"nodeType": "ExpressionStatement",
												"src": "1026:67:8"
											}
										]
									},
									"documentation": null,
									"id": 1696,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1686,
												"mutability": "mutable",
												"name": "_addressProvider",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1696,
												"src": "983:24:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1685,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "983:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "982:26:8"
									},
									"returnParameters": {
										"id": 1688,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1016:0:8"
									},
									"scope": 1786,
									"src": "971:129:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1699,
										"nodeType": "Block",
										"src": "1133:2:8",
										"statements": []
									},
									"documentation": null,
									"id": 1700,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1697,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1113:2:8"
									},
									"returnParameters": {
										"id": 1698,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1133:0:8"
									},
									"scope": 1786,
									"src": "1106:29:8",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1719,
										"nodeType": "Block",
										"src": "1226:129:8",
										"statements": [
											{
												"assignments": [
													1708
												],
												"declarations": [
													{
														"constant": false,
														"id": 1708,
														"mutability": "mutable",
														"name": "core",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1719,
														"src": "1236:20:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														},
														"typeName": {
															"id": 1707,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1236:15:8",
															"stateMutability": "payable",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1712,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": null,
															"id": 1709,
															"name": "addressesProvider",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1684,
															"src": "1259:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ILendingPoolAddressesProvider_$1815",
																"typeString": "contract ILendingPoolAddressesProvider"
															}
														},
														"id": 1710,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "getLendingPoolCore",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1809,
														"src": "1259:36:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_payable_$",
															"typeString": "function () view external returns (address payable)"
														}
													},
													"id": 1711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1259:38:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1236:61:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1714,
															"name": "core",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1708,
															"src": "1324:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1715,
															"name": "_reserve",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1702,
															"src": "1330:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1716,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1704,
															"src": "1340:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1713,
														"name": "transferInternal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1760,
														"src": "1307:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address payable,address,uint256)"
														}
													},
													"id": 1717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1307:41:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1718,
												"nodeType": "ExpressionStatement",
												"src": "1307:41:8"
											}
										]
									},
									"documentation": null,
									"id": 1720,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFundsBackToPoolInternal",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1702,
												"mutability": "mutable",
												"name": "_reserve",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1720,
												"src": "1182:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1701,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1182:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1704,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1720,
												"src": "1200:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1200:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1181:35:8"
									},
									"returnParameters": {
										"id": 1706,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1226:0:8"
									},
									"scope": 1786,
									"src": "1141:214:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1759,
										"nodeType": "Block",
										"src": "1461:269:8",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1731,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1729,
														"name": "_reserve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1724,
														"src": "1474:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1730,
														"name": "ethAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1682,
														"src": "1486:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1474:22:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1750,
												"nodeType": "IfStatement",
												"src": "1471:191:8",
												"trueBody": {
													"id": 1749,
													"nodeType": "Block",
													"src": "1498:164:8",
													"statements": [
														{
															"assignments": [
																1733,
																null
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1733,
																	"mutability": "mutable",
																	"name": "success",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 1749,
																	"src": "1513:12:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 1732,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "1513:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																},
																null
															],
															"id": 1740,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "",
																		"id": 1738,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1565:2:8",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																				"typeString": "literal_string \"\""
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 1734,
																			"name": "_destination",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1722,
																			"src": "1531:12:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"id": 1735,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "call",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "1531:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																		}
																	},
																	"id": 1737,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"names": [
																		"value"
																	],
																	"nodeType": "FunctionCallOptions",
																	"options": [
																		{
																			"argumentTypes": null,
																			"id": 1736,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1726,
																			"src": "1556:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"src": "1531:33:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
																		"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																	}
																},
																"id": 1739,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1531:37:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "tuple(bool,bytes memory)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1512:56:8"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1744,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 1742,
																			"name": "success",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1733,
																			"src": "1590:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "74727565",
																			"id": 1743,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1601:4:8",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "true"
																		},
																		"src": "1590:15:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "436f756c646e2774207472616e7366657220455448",
																		"id": 1745,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1607:23:8",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_703745dd3f263086403a3879fc59cdcd2946bf38cbc33a0a9aa7e2f594840633",
																			"typeString": "literal_string \"Couldn't transfer ETH\""
																		},
																		"value": "Couldn't transfer ETH"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_703745dd3f263086403a3879fc59cdcd2946bf38cbc33a0a9aa7e2f594840633",
																			"typeString": "literal_string \"Couldn't transfer ETH\""
																		}
																	],
																	"id": 1741,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		-18,
																		-18
																	],
																	"referencedDeclaration": -18,
																	"src": "1582:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1746,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1582:49:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1747,
															"nodeType": "ExpressionStatement",
															"src": "1582:49:8"
														},
														{
															"expression": null,
															"functionReturnParameters": 1728,
															"id": 1748,
															"nodeType": "Return",
															"src": "1645:7:8"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1755,
															"name": "_destination",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1722,
															"src": "1701:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1756,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1726,
															"src": "1715:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1752,
																	"name": "_reserve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1724,
																	"src": "1678:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1751,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1129,
																"src": "1671:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$1129_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1753,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1671:16:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1129",
																"typeString": "contract IERC20"
															}
														},
														"id": 1754,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1163,
														"src": "1671:29:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1129_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$1129_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1671:52:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1758,
												"nodeType": "ExpressionStatement",
												"src": "1671:52:8"
											}
										]
									},
									"documentation": null,
									"id": 1760,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferInternal",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1722,
												"mutability": "mutable",
												"name": "_destination",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1760,
												"src": "1387:28:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1721,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1387:15:8",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1724,
												"mutability": "mutable",
												"name": "_reserve",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1760,
												"src": "1417:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1723,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1417:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1726,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1760,
												"src": "1435:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1725,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1435:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1386:65:8"
									},
									"returnParameters": {
										"id": 1728,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1461:0:8"
									},
									"scope": 1786,
									"src": "1361:369:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1784,
										"nodeType": "Block",
										"src": "1830:142:8",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1769,
														"name": "_reserve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1764,
														"src": "1843:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1770,
														"name": "ethAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1682,
														"src": "1855:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1843:22:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1776,
												"nodeType": "IfStatement",
												"src": "1840:74:8",
												"trueBody": {
													"id": 1775,
													"nodeType": "Block",
													"src": "1867:47:8",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1772,
																	"name": "_target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1762,
																	"src": "1888:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1773,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1888:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1768,
															"id": 1774,
															"nodeType": "Return",
															"src": "1881:22:8"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1781,
															"name": "_target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1762,
															"src": "1957:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1778,
																	"name": "_reserve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1764,
																	"src": "1937:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1777,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1129,
																"src": "1930:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$1129_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1779,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1930:16:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1129",
																"typeString": "contract IERC20"
															}
														},
														"id": 1780,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1068,
														"src": "1930:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1782,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1930:35:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1768,
												"id": 1783,
												"nodeType": "Return",
												"src": "1923:42:8"
											}
										]
									},
									"documentation": null,
									"id": 1785,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBalanceInternal",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1762,
												"mutability": "mutable",
												"name": "_target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1785,
												"src": "1764:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1761,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1764:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1764,
												"mutability": "mutable",
												"name": "_reserve",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1785,
												"src": "1781:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1763,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1781:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1763:35:8"
									},
									"returnParameters": {
										"id": 1768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1767,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1785,
												"src": "1821:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1766,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1821:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1820:9:8"
									},
									"scope": 1786,
									"src": "1736:236:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1787,
							"src": "684:1290:8"
						}
					],
					"src": "32:1943:8"
				},
				"id": 8
			},
			"https://github.com/aave/flashloan-box/blob/master/contracts/aave/IFlashLoanReceiver.sol": {
				"ast": {
					"absolutePath": "https://github.com/aave/flashloan-box/blob/master/contracts/aave/IFlashLoanReceiver.sol",
					"exportedSymbols": {
						"IFlashLoanReceiver": [
							1801
						]
					},
					"id": 1802,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1788,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1789,
								"nodeType": "StructuredDocumentation",
								"src": "57:210:9",
								"text": " @title IFlashLoanReceiver interface\n @notice Interface for the Aave fee IFlashLoanReceiver.\n @author Aave\n @dev implement this interface to develop a flashloan-compatible flashLoanReceiver contract*"
							},
							"fullyImplemented": false,
							"id": 1801,
							"linearizedBaseContracts": [
								1801
							],
							"name": "IFlashLoanReceiver",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"functionSelector": "ee872558",
									"id": 1800,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "executeOperation",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1798,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1791,
												"mutability": "mutable",
												"name": "_reserve",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1800,
												"src": "329:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1790,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "329:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1793,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1800,
												"src": "347:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1792,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "347:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1795,
												"mutability": "mutable",
												"name": "_fee",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1800,
												"src": "364:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1794,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "364:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1797,
												"mutability": "mutable",
												"name": "_params",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1800,
												"src": "378:22:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1796,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "378:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "328:73:9"
									},
									"returnParameters": {
										"id": 1799,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "410:0:9"
									},
									"scope": 1801,
									"src": "303:108:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1802,
							"src": "268:145:9"
						}
					],
					"src": "32:381:9"
				},
				"id": 9
			},
			"https://github.com/aave/flashloan-box/blob/master/contracts/aave/ILendingPoolAddressesProvider.sol": {
				"ast": {
					"absolutePath": "https://github.com/aave/flashloan-box/blob/master/contracts/aave/ILendingPoolAddressesProvider.sol",
					"exportedSymbols": {
						"ILendingPoolAddressesProvider": [
							1815
						]
					},
					"id": 1816,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1803,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1804,
								"nodeType": "StructuredDocumentation",
								"src": "58:130:10",
								"text": "@title ILendingPoolAddressesProvider interface\n@notice provides the interface to fetch the LendingPoolCore address"
							},
							"fullyImplemented": false,
							"id": 1815,
							"linearizedBaseContracts": [
								1815
							],
							"name": "ILendingPoolAddressesProvider",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"functionSelector": "ed6ff760",
									"id": 1809,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getLendingPoolCore",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1805,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "263:2:10"
									},
									"returnParameters": {
										"id": 1808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1807,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1809,
												"src": "289:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "289:15:10",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "288:17:10"
									},
									"scope": 1815,
									"src": "236:70:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "0261bf8b",
									"id": 1814,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getLendingPool",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1810,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "334:2:10"
									},
									"returnParameters": {
										"id": 1813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1812,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1814,
												"src": "360:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1811,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "360:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "359:9:10"
									},
									"scope": 1815,
									"src": "311:58:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1816,
							"src": "190:181:10"
						}
					],
					"src": "33:338:10"
				},
				"id": 10
			},
			"https://github.com/aave/flashloan-box/blob/master/contracts/utils/Withdrawable.sol": {
				"ast": {
					"absolutePath": "https://github.com/aave/flashloan-box/blob/master/contracts/utils/Withdrawable.sol",
					"exportedSymbols": {
						"Withdrawable": [
							1907
						]
					},
					"id": 1908,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1817,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:11"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/ERC20.sol",
							"id": 1818,
							"nodeType": "ImportDirective",
							"scope": 1908,
							"sourceUnit": 1052,
							"src": "116:110:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/SafeERC20.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/token/ERC20/SafeERC20.sol",
							"id": 1819,
							"nodeType": "ImportDirective",
							"scope": 1908,
							"sourceUnit": 1343,
							"src": "289:114:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/solc-0.6/contracts/access/Ownable.sol",
							"id": 1820,
							"nodeType": "ImportDirective",
							"scope": 1908,
							"sourceUnit": 194,
							"src": "459:107:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1822,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 193,
										"src": "737:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$193",
											"typeString": "contract Ownable"
										}
									},
									"id": 1823,
									"nodeType": "InheritanceSpecifier",
									"src": "737:7:11"
								}
							],
							"contractDependencies": [
								193,
								1661
							],
							"contractKind": "contract",
							"documentation": {
								"id": 1821,
								"nodeType": "StructuredDocumentation",
								"src": "568:141:11",
								"text": "Ensures that any contract that inherits from this contract is able to\nwithdraw funds that are accidentally received or stuck."
							},
							"fullyImplemented": true,
							"id": 1907,
							"linearizedBaseContracts": [
								1907,
								193,
								1661
							],
							"name": "Withdrawable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1826,
									"libraryName": {
										"contractScope": null,
										"id": 1824,
										"name": "SafeERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1342,
										"src": "757:9:11",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeERC20_$1342",
											"typeString": "library SafeERC20"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "751:26:11",
									"typeName": {
										"contractScope": null,
										"id": 1825,
										"name": "ERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1051,
										"src": "771:5:11",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20_$1051",
											"typeString": "contract ERC20"
										}
									}
								},
								{
									"constant": true,
									"id": 1832,
									"mutability": "constant",
									"name": "ETHER",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1907,
									"src": "782:35:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1827,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "782:7:11",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"argumentTypes": null,
										"arguments": [
											{
												"argumentTypes": null,
												"hexValue": "30",
												"id": 1830,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "815:1:11",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												},
												"value": "0"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												}
											],
											"id": 1829,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "807:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 1828,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "807:7:11",
												"typeDescriptions": {
													"typeIdentifier": null,
													"typeString": null
												}
											}
										},
										"id": 1831,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "807:10:11",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1840,
									"name": "LogWithdraw",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1834,
												"indexed": true,
												"mutability": "mutable",
												"name": "_from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1840,
												"src": "851:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1833,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "851:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1836,
												"indexed": true,
												"mutability": "mutable",
												"name": "_assetAddress",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1840,
												"src": "882:29:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1835,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "882:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1838,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1840,
												"src": "921:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1837,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "921:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "841:97:11"
									},
									"src": "824:115:11"
								},
								{
									"body": {
										"id": 1905,
										"nodeType": "Block",
										"src": "1098:485:11",
										"statements": [
											{
												"assignments": [
													1849
												],
												"declarations": [
													{
														"constant": false,
														"id": 1849,
														"mutability": "mutable",
														"name": "assetBalance",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1905,
														"src": "1108:17:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1848,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1108:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1850,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "1108:17:11"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1851,
														"name": "_assetAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1843,
														"src": "1139:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1852,
														"name": "ETHER",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1832,
														"src": "1156:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1139:22:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1896,
													"nodeType": "Block",
													"src": "1352:158:11",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1885,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1875,
																	"name": "assetBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1849,
																	"src": "1366:12:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1882,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": -28,
																					"src": "1420:4:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Withdrawable_$1907",
																						"typeString": "contract Withdrawable"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Withdrawable_$1907",
																						"typeString": "contract Withdrawable"
																					}
																				],
																				"id": 1881,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1412:7:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1880,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "1412:7:11",
																					"typeDescriptions": {
																						"typeIdentifier": null,
																						"typeString": null
																					}
																				}
																			},
																			"id": 1883,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1412:13:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1877,
																					"name": "_assetAddress",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1843,
																					"src": "1387:13:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1876,
																				"name": "ERC20",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1051,
																				"src": "1381:5:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC20_$1051_$",
																					"typeString": "type(contract ERC20)"
																				}
																			},
																			"id": 1878,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1381:20:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_ERC20_$1051",
																				"typeString": "contract ERC20"
																			}
																		},
																		"id": 1879,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "balanceOf",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 651,
																		"src": "1381:30:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view external returns (uint256)"
																		}
																	},
																	"id": 1884,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1381:45:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1366:60:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1886,
															"nodeType": "ExpressionStatement",
															"src": "1366:60:11"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1891,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -15,
																			"src": "1474:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1892,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "1474:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1893,
																		"name": "assetBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1849,
																		"src": "1486:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1888,
																				"name": "_assetAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1843,
																				"src": "1446:13:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1887,
																			"name": "ERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1051,
																			"src": "1440:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_ERC20_$1051_$",
																				"typeString": "type(contract ERC20)"
																			}
																		},
																		"id": 1889,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1440:20:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ERC20_$1051",
																			"typeString": "contract ERC20"
																		}
																	},
																	"id": 1890,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1163,
																	"src": "1440:33:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1129_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$1129_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1894,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1440:59:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1895,
															"nodeType": "ExpressionStatement",
															"src": "1440:59:11"
														}
													]
												},
												"id": 1897,
												"nodeType": "IfStatement",
												"src": "1135:375:11",
												"trueBody": {
													"id": 1874,
													"nodeType": "Block",
													"src": "1163:183:11",
													"statements": [
														{
															"assignments": [
																1855
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1855,
																	"mutability": "mutable",
																	"name": "self",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 1874,
																	"src": "1177:12:11",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 1854,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1177:7:11",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 1860,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1858,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -28,
																		"src": "1200:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_Withdrawable_$1907",
																			"typeString": "contract Withdrawable"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_Withdrawable_$1907",
																			"typeString": "contract Withdrawable"
																		}
																	],
																	"id": 1857,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1192:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1856,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1192:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1859,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1192:13:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1177:28:11"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1864,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1861,
																	"name": "assetBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1849,
																	"src": "1261:12:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1862,
																		"name": "self",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1855,
																		"src": "1276:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 1863,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1276:12:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1261:27:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1865,
															"nodeType": "ExpressionStatement",
															"src": "1261:27:11"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1871,
																		"name": "assetBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1849,
																		"src": "1322:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1866,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -15,
																			"src": "1302:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1869,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "1302:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"id": 1870,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1302:19:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1872,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1302:33:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1873,
															"nodeType": "ExpressionStatement",
															"src": "1302:33:11"
														}
													]
												}
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1899,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "1536:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1900,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "1536:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1901,
															"name": "_assetAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1843,
															"src": "1548:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1902,
															"name": "assetBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1849,
															"src": "1563:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1898,
														"name": "LogWithdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1840,
														"src": "1524:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1903,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1524:52:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1904,
												"nodeType": "EmitStatement",
												"src": "1519:57:11"
											}
										]
									},
									"documentation": {
										"id": 1841,
										"nodeType": "StructuredDocumentation",
										"src": "945:90:11",
										"text": " @dev Withdraw asset.\n @param _assetAddress Asset to be withdrawn."
									},
									"functionSelector": "51cff8d9",
									"id": 1906,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1846,
											"modifierName": {
												"argumentTypes": null,
												"id": 1845,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 142,
												"src": "1088:9:11",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1088:9:11"
										}
									],
									"name": "withdraw",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1843,
												"mutability": "mutable",
												"name": "_assetAddress",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1906,
												"src": "1058:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1842,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1058:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1057:23:11"
									},
									"returnParameters": {
										"id": 1847,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1098:0:11"
									},
									"scope": 1907,
									"src": "1040:543:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1908,
							"src": "712:873:11"
						}
					],
					"src": "33:1553:11"
				},
				"id": 11
			}
		}
	}
}